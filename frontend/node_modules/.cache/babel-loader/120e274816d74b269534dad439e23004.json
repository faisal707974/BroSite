{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project 2\\\\frontend\\\\src\\\\pages\\\\Manager\\\\TasksManagement\\\\TasksManagement.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport './TasksManagement.scss';\nimport Sidebar from \"../../../components/Sidebar/Sidebar\";\nimport PageHead from \"../../../components/PageHead/PageHead\";\nimport { ManagerTabs } from \"../../../constants/PageTabs/Manager\";\nimport { Modal } from \"react-bootstrap\";\nimport Input from \"../../../components/RegistrationInput/RegistrationInput\";\nimport { useForm } from 'react-hook-form';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TasksManagement() {\n  _s();\n\n  const [modal, setModal] = useState(false);\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    criteriaMode: \"all\"\n  });\n\n  async function onSubmit(data) {\n    const response = await axios.post('http://localhost:3001/manager/tasks', data);\n    console.log({\n      response\n    });\n  }\n\n  const [tasks, setTasks] = useState();\n  useEffect(() => {\n    async function getTasks() {\n      const response = await axios.get('http://localhost:3001/manager/tasks');\n      setTasks(response.data);\n    }\n\n    getTasks();\n  }, []);\n  console.log(tasks);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      pages: ManagerTabs,\n      current: 'Tasks Management'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TasksManagement\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"addTask\",\n        onClick: () => setModal(true),\n        children: \"Add new task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PageHead, {\n        title: 'tasks Management'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tabs\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Mern\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Python\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Flutter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Kotlin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weeks\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"week col\",\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Week 1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"questions\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: tasks ? tasks.map((obj, index) => {\n                  return /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: [index + 1, \". \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 59,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: obj.Question\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 60,\n                      columnNumber: 53\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 49\n                  }, this);\n                }) : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: modal,\n        onHide: () => setModal(false),\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Add new task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit(onSubmit),\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              type: 'text',\n              name: 'Domain',\n              label: \"Domain\",\n              required: true,\n              register: register,\n              errors: errors,\n              rules: {\n                required: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: 'text',\n              name: 'Week',\n              label: \"Week\",\n              required: true,\n              register: register,\n              errors: errors,\n              rules: {\n                required: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: 'text',\n              name: 'Question',\n              label: \"Question\",\n              required: true,\n              register: register,\n              errors: errors,\n              rules: {\n                required: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TasksManagement, \"8q+F/EmklseHclyq+f6zqc9hv4E=\", false, function () {\n  return [useForm];\n});\n\n_c = TasksManagement;\n\nvar _c;\n\n$RefreshReg$(_c, \"TasksManagement\");","map":{"version":3,"sources":["D:/Project 2/frontend/src/pages/Manager/TasksManagement/TasksManagement.jsx"],"names":["React","useEffect","useState","Sidebar","PageHead","ManagerTabs","Modal","Input","useForm","axios","TasksManagement","modal","setModal","register","handleSubmit","formState","errors","criteriaMode","onSubmit","data","response","post","console","log","tasks","setTasks","getTasks","get","map","obj","index","Question","required"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport './TasksManagement.scss'\r\nimport Sidebar from \"../../../components/Sidebar/Sidebar\";\r\nimport PageHead from \"../../../components/PageHead/PageHead\";\r\nimport { ManagerTabs } from \"../../../constants/PageTabs/Manager\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport Input from \"../../../components/RegistrationInput/RegistrationInput\";\r\nimport { useForm } from 'react-hook-form';\r\nimport axios from 'axios'\r\n\r\nexport default function TasksManagement() {\r\n\r\n    const [modal, setModal] = useState(false)\r\n\r\n    const { register, handleSubmit, formState: { errors } } = useForm({ criteriaMode: \"all\" });\r\n\r\n    async function onSubmit(data) {\r\n        const response = await axios.post('http://localhost:3001/manager/tasks', data)\r\n        console.log({ response })\r\n    }\r\n\r\n    const [tasks, setTasks] = useState()\r\n    useEffect(() => {\r\n        async function getTasks() {\r\n            const response = await axios.get('http://localhost:3001/manager/tasks')\r\n            setTasks(response.data)\r\n        }\r\n        getTasks()\r\n    }, [])\r\n\r\n    console.log(tasks)\r\n    return (\r\n        <>\r\n            <Sidebar pages={ManagerTabs} current={'Tasks Management'} />\r\n            <div className=\"TasksManagement\">\r\n                <span className=\"addTask\" onClick={() => setModal(true)}>Add new task</span>\r\n                <PageHead title={'tasks Management'} />\r\n                <div>\r\n                    <div className=\"tabs\">\r\n                        <span>Mern</span>\r\n                        <span>Python</span>\r\n                        <span>Flutter</span>\r\n                        <span>Kotlin</span>\r\n                    </div>\r\n                    <div className=\"weeks\">\r\n                        {/* {\r\n                            tasks ? tasks.\r\n                        } */}\r\n                        <div className=\"week col\">\r\n                            <h5>Week 1</h5>\r\n                        </div>\r\n                        <div className=\"questions\">\r\n                            <table>\r\n                                <tbody>\r\n                                    {\r\n                                        tasks ? tasks.map((obj, index) => {\r\n                                            return (\r\n                                                <tr key={index}>\r\n                                                    <td>{index+1}. </td>\r\n                                                    <td>{obj.Question}</td>\r\n                                                </tr>\r\n                                            )\r\n                                        }):null\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <Modal show={modal} onHide={() => setModal(false)}>\r\n                    <Modal.Header>\r\n                        <h3>Add new task</h3>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n                            <Input type={'text'} name={'Domain'} label='Domain' required\r\n                                register={register} errors={errors} rules={{ required: true }} />\r\n\r\n                            <Input type={'text'} name={'Week'} label='Week' required\r\n                                register={register} errors={errors} rules={{ required: true }} />\r\n\r\n                            <Input type={'text'} name={'Question'} label='Question' required\r\n                                register={register} errors={errors} rules={{ required: true }} />\r\n\r\n                            <input type=\"submit\" />\r\n\r\n                        </form>\r\n\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}