{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project 2\\\\frontend\\\\src\\\\components\\\\Cropper\\\\crrp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Crrp() {\n  _s();\n\n  const [src, setSrc] = useState(null);\n  const [crop, setCrop] = useState({\n    aspect: 16 / 9\n  });\n  const [image, setImage] = useState(null);\n  const [output, setOutput] = useState(null);\n  console.log('console');\n  console.log({\n    src\n  });\n  console.log(crop);\n  console.log(image);\n  console.log(output);\n\n  const selectImage = file => {\n    setSrc(URL.createObjectURL(file));\n  };\n\n  const cropImageNow = () => {\n    const canvas = document.createElement('canvas');\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    canvas.width = crop.width;\n    canvas.height = crop.height;\n    const ctx = canvas.getContext('2d');\n    const pixelRatio = window.devicePixelRatio;\n    canvas.width = crop.width * pixelRatio;\n    canvas.height = crop.height * pixelRatio;\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    ctx.imageSmoothingQuality = 'high';\n    ctx.drawImage(image, crop.x * scaleX, crop.y * scaleY, crop.width * scaleX, crop.height * scaleY, 0, 0, crop.width, crop.height); // Converting to base64\n\n    const base64Image = canvas.toDataURL('image/jpeg');\n    setOutput(base64Image);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"center\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: e => {\n          selectImage(e.target.files[0]);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: src && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(ReactCrop, {\n            src: src,\n            onImageLoaded: setImage,\n            crop: crop,\n            onChange: setCrop\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: cropImageNow,\n            children: \"Crop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: output && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: output\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Crrp, \"TQPrB20PHMRpRh24SbEDbGL0Xlc=\");\n\n_c = Crrp;\nexport default Crrp;\n\nvar _c;\n\n$RefreshReg$(_c, \"Crrp\");","map":{"version":3,"sources":["D:/Project 2/frontend/src/components/Cropper/crrp.js"],"names":["React","useState","ReactCrop","Crrp","src","setSrc","crop","setCrop","aspect","image","setImage","output","setOutput","console","log","selectImage","file","URL","createObjectURL","cropImageNow","canvas","document","createElement","scaleX","naturalWidth","width","scaleY","naturalHeight","height","ctx","getContext","pixelRatio","window","devicePixelRatio","setTransform","imageSmoothingQuality","drawImage","x","y","base64Image","toDataURL","e","target","files"],"mappings":"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","sourcesContent":["import React,{ useState } from 'react';\r\nimport ReactCrop from 'react-image-crop';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\n\r\nfunction Crrp() {\r\n    const [src, setSrc] = useState(null);\r\n    const [crop, setCrop] = useState({ aspect: 16 / 9 });\r\n    const [image, setImage] = useState(null);\r\n    const [output, setOutput] = useState(null);\r\n\r\n\r\n    console.log('console')\r\n    console.log({src})\r\n    console.log(crop)\r\n    console.log(image)\r\n    console.log(output)\r\n\r\n    const selectImage = (file) => {\r\n        setSrc(URL.createObjectURL(file));\r\n    };\r\n\r\n    const cropImageNow = () => {\r\n        const canvas = document.createElement('canvas');\r\n        const scaleX = image.naturalWidth / image.width;\r\n        const scaleY = image.naturalHeight / image.height;\r\n        canvas.width = crop.width;\r\n        canvas.height = crop.height;\r\n        const ctx = canvas.getContext('2d');\r\n\r\n        const pixelRatio = window.devicePixelRatio;\r\n        canvas.width = crop.width * pixelRatio;\r\n        canvas.height = crop.height * pixelRatio;\r\n        ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n        ctx.imageSmoothingQuality = 'high';\r\n\r\n        ctx.drawImage(\r\n            image,\r\n            crop.x * scaleX,\r\n            crop.y * scaleY,\r\n            crop.width * scaleX,\r\n            crop.height * scaleY,\r\n            0,\r\n            0,\r\n            crop.width,\r\n            crop.height,\r\n        );\r\n\r\n        // Converting to base64\r\n        const base64Image = canvas.toDataURL('image/jpeg');\r\n        setOutput(base64Image);\r\n    };\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <center>\r\n                <input\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    onChange={(e) => {\r\n                        selectImage(e.target.files[0]);\r\n                    }}\r\n                />\r\n                <br />\r\n                <br />\r\n                <div>\r\n                    {src && (\r\n                        <div>\r\n                            <ReactCrop src={src} onImageLoaded={setImage}\r\n                                crop={crop} onChange={setCrop} />\r\n                            <br />\r\n                            <button onClick={cropImageNow}>Crop</button>\r\n                            <br />\r\n                            <br />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div>{output && <img src={output} />}</div>\r\n            </center>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Crrp;\r\n"]},"metadata":{},"sourceType":"module"}