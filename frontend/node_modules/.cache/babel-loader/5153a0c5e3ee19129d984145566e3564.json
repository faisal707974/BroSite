{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project 2\\\\frontend\\\\src\\\\components\\\\Manager\\\\ScheduledWrkshp\\\\ScheduledWrkshp.jsx\",\n    _s = $RefreshSig$();\n\nimport { Modal } from \"react-bootstrap\";\nimport React, { useEffect, useState } from \"react\";\nimport DateCard from \"../DateCard/DateCard\";\nimport HexaOptions from \"../HexaOptions/HexaOptions\";\nimport './ScheduledWrkshp.scss';\nimport Input from '../../RegistrationInput/RegistrationInput';\nimport Select from '../../selectInput/selectInput';\nimport { useForm } from 'react-hook-form';\nimport axios from \"axios\";\nimport { Navigate, useNavigate } from \"react-router-dom\";\nimport img from '../../../assets/images/19.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ScheduledWrkshp(_ref) {\n  _s();\n\n  var _current2;\n\n  let {} = _ref;\n  const navigate = useNavigate();\n  const [modal, setModal] = useState(false);\n  const options = [{\n    title: 'Batch',\n    color: '#557f8d'\n  }, {\n    title: 'Seats available',\n    color: '#00adb4'\n  }, {\n    title: 'filled seats',\n    color: '#34789b'\n  }, {\n    title: 'Event day',\n    color: '#368083',\n    link: '/manager/workshop/event_day'\n  }, {\n    title: 'Change venue',\n    color: '#727272'\n  }, {\n    title: 'Change schedule',\n    color: '#ab52a2'\n  }, {\n    title: 'Add new schedule',\n    color: '#ae3268',\n    click: () => setModal(!modal)\n  }, {\n    title: 'Cancel schedule',\n    color: '#669105',\n    click: deleteSchedule\n  }, {\n    gfd: 'fx'\n  }];\n  const len = options.length;\n  const firstrow = options.splice(0, len / 2);\n  const secondrow = options.splice(0, len / 2 + 1);\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    criteriaMode: \"all\"\n  });\n\n  const onSubmit = async data => {\n    setModal(false);\n    const response = await axios.post('http://localhost:3001/manager/newBatch', data);\n  };\n\n  const [schedules, setSchedules] = useState();\n  const [currSchedule, setCurrSchedule] = useState(0);\n  useEffect(() => {\n    const getSchedules = async () => {\n      const response = await axios.get('http://localhost:3001/manager/schedules');\n\n      if (response.data.length != 0) {\n        setSchedules(response.data);\n      } else {\n        setSchedules(null);\n      }\n    };\n\n    getSchedules();\n  }, [modal]);\n  let day1;\n  let day2;\n  let day3;\n  let current;\n\n  if (schedules) {\n    var _current;\n\n    current = schedules[currSchedule];\n    console.log(current);\n    const d = (_current = current) === null || _current === void 0 ? void 0 : _current.Date;\n    day1 = new Date(d.Year, d.Month - 1, d.Day);\n    day2 = new Date(day1);\n    day2.setDate(day1.getDate() + 1);\n    day3 = new Date(day1);\n    day3.setDate(day1.getDate() + 2);\n  }\n\n  const m = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  const w = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n\n  async function deleteSchedule() {\n    const id = schedules[currSchedule]._id;\n    const response = await axios.post('http://localhost:3001/manager/delete_schedules', {}, {\n      params: {\n        id\n      }\n    });\n    console.log(response.status);\n\n    if (response.status == 200) {\n      navigate('/manager/workshop');\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ScheduledWrkshp\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: (_current2 = current) === null || _current2 === void 0 ? void 0 : _current2.Venue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"10 days to go\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"display\",\n        children: schedules ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"DateCards\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-angle-left\",\n            onClick: () => {\n              return currSchedule == 0 ? null : setCurrSchedule(currSchedule - 1);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(DateCard, {\n            date: day1.getDate(),\n            month: m[day1.getMonth()],\n            day: w[day1.getDay()]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(DateCard, {\n            date: day2.getDate(),\n            month: m[day2.getMonth()],\n            day: w[day2.getDay()]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(DateCard, {\n            date: day3.getDate(),\n            month: m[day3.getMonth()],\n            day: w[day3.getDay()]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-angle-right\",\n            onClick: () => {\n              return currSchedule === schedules.length - 1 ? null : setCurrSchedule(currSchedule + 1);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty_display\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: img,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"No workshops scheduled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"line line-one\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column col-one\",\n          children: firstrow.map((Obj, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(HexaOptions, {\n                text: Obj.title,\n                color: Obj.color,\n                link: Obj.link\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 37\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"line line-two\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column col-two\",\n          children: secondrow.map((Obj, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(HexaOptions, {\n                text: Obj.title,\n                color: Obj.color,\n                link: Obj.link,\n                click: Obj.click\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 37\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: modal,\n      onHide: () => setModal(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Declare workshop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"\",\n          onSubmit: handleSubmit(onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            label: \"Venue\",\n            required: true,\n            register: register,\n            errors: errors,\n            rules: {\n              required: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            name: 'BroCamp',\n            required: true,\n            register: register,\n            errors: errors,\n            rules: {\n              required: true\n            },\n            options: ['Kochi', 'Calicut']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"date\",\n            label: \"Date\",\n            required: true,\n            register: register,\n            errors: errors,\n            rules: {\n              required: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            label: \"Batch\",\n            required: true,\n            register: register,\n            errors: errors,\n            rules: {\n              required: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            label: \"Seats\",\n            required: true,\n            register: register,\n            errors: errors,\n            rules: {\n              required: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ScheduledWrkshp, \"bgh9laWONs7V6cYTuszPIR6GE9Y=\", false, function () {\n  return [useNavigate, useForm];\n});\n\n_c = ScheduledWrkshp;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScheduledWrkshp\");","map":{"version":3,"sources":["D:/Project 2/frontend/src/components/Manager/ScheduledWrkshp/ScheduledWrkshp.jsx"],"names":["Modal","React","useEffect","useState","DateCard","HexaOptions","Input","Select","useForm","axios","Navigate","useNavigate","img","ScheduledWrkshp","navigate","modal","setModal","options","title","color","link","click","deleteSchedule","gfd","len","length","firstrow","splice","secondrow","register","handleSubmit","formState","errors","criteriaMode","onSubmit","data","response","post","schedules","setSchedules","currSchedule","setCurrSchedule","getSchedules","get","day1","day2","day3","current","console","log","d","Date","Year","Month","Day","setDate","getDate","m","w","id","_id","params","status","Venue","getMonth","getDay","map","Obj","index","required"],"mappings":"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","sourcesContent":["import { Modal } from \"react-bootstrap\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DateCard from \"../DateCard/DateCard\";\r\nimport HexaOptions from \"../HexaOptions/HexaOptions\";\r\nimport './ScheduledWrkshp.scss'\r\nimport Input from '../../RegistrationInput/RegistrationInput'\r\nimport Select from '../../selectInput/selectInput'\r\nimport { useForm } from 'react-hook-form';\r\nimport axios from \"axios\";\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\nimport img from '../../../assets/images/19.png'\r\n\r\n\r\nexport default function ScheduledWrkshp({}) {\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const [modal, setModal] = useState(false)\r\n  \r\n\r\n    const options = [\r\n        { title: 'Batch', color: '#557f8d' },\r\n        { title: 'Seats available', color: '#00adb4' },\r\n        { title: 'filled seats', color: '#34789b' },\r\n        { title: 'Event day', color: '#368083', link: '/manager/workshop/event_day' },\r\n        { title: 'Change venue', color: '#727272' },\r\n        { title: 'Change schedule', color: '#ab52a2' },\r\n        { title: 'Add new schedule', color: '#ae3268', click: () => setModal(!modal) },\r\n        { title: 'Cancel schedule', color: '#669105', click: deleteSchedule },\r\n        { gfd: 'fx' }\r\n    ]\r\n    const len = options.length\r\n    const firstrow = options.splice(0, len / 2)\r\n    const secondrow = options.splice(0, len / 2 + 1)\r\n\r\n\r\n\r\n    const { register, handleSubmit, formState: { errors } } = useForm({ criteriaMode: \"all\" });\r\n\r\n    const onSubmit = async (data) => {\r\n        setModal(false)\r\n        const response = await axios.post('http://localhost:3001/manager/newBatch', data)\r\n    }\r\n\r\n    const [schedules, setSchedules] = useState()\r\n    const [currSchedule, setCurrSchedule] = useState(0)\r\n    useEffect(() => {\r\n        const getSchedules = async () => {\r\n            const response = await axios.get('http://localhost:3001/manager/schedules')\r\n            if (response.data.length != 0) {\r\n                setSchedules(response.data)\r\n            } else {\r\n                setSchedules(null)\r\n            }\r\n        }\r\n        getSchedules()\r\n    }, [modal])\r\n\r\n    let day1;\r\n    let day2;\r\n    let day3;\r\n    let current;\r\n    if (schedules) {\r\n        current = schedules[currSchedule]\r\n        console.log(current)\r\n        const d = current?.Date\r\n        day1 = new Date(d.Year, d.Month - 1, d.Day)\r\n        day2 = new Date(day1)\r\n        day2.setDate(day1.getDate() + 1)\r\n        day3 = new Date(day1)\r\n        day3.setDate(day1.getDate() + 2)\r\n    }\r\n\r\n    const m = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\r\n    const w = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\r\n\r\n    async function deleteSchedule() {\r\n        const id = schedules[currSchedule]._id\r\n        const response = await axios.post('http://localhost:3001/manager/delete_schedules', {}, { params: { id } })\r\n        console.log(response.status)\r\n        if (response.status == 200) {\r\n            navigate('/manager/workshop')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"ScheduledWrkshp\">\r\n                <div>\r\n                    <h3>{current?.Venue}</h3>\r\n                </div>\r\n                <div>\r\n                    <h6>10 days to go</h6>\r\n                </div>\r\n                <div className=\"display\">\r\n                    {\r\n                        schedules ?\r\n                            <div className='DateCards'>\r\n                                <i className=\"fas fa-angle-left\" onClick={() => {\r\n                                    return currSchedule == 0 ? null : setCurrSchedule(currSchedule - 1)\r\n                                }}\r\n                                ></i>\r\n                                <DateCard date={day1.getDate()} month={m[day1.getMonth()]} day={w[day1.getDay()]} />\r\n                                <DateCard date={day2.getDate()} month={m[day2.getMonth()]} day={w[day2.getDay()]} />\r\n                                <DateCard date={day3.getDate()} month={m[day3.getMonth()]} day={w[day3.getDay()]} />\r\n                                <i className=\"fas fa-angle-right\" onClick={() => {\r\n                                    return currSchedule === schedules.length - 1 ? null : setCurrSchedule(currSchedule + 1)\r\n                                }}\r\n                                ></i>\r\n                            </div>\r\n                            :\r\n                            <div className=\"empty_display\">\r\n                                <img src={img} alt=\"\" />\r\n                                <div>\r\n                                    <h6>No workshops scheduled</h6>\r\n                                </div>\r\n                            </div>\r\n                    }\r\n                </div>\r\n\r\n                <div className=\"line line-one\">\r\n                    <div className=\"column col-one\">\r\n                        {firstrow.map((Obj, index) => {\r\n                            return (\r\n                                <div key={index}>\r\n                                    <HexaOptions text={Obj.title} color={Obj.color} link={Obj.link} />\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"line line-two\">\r\n                    <div className=\"column col-two\">\r\n                        {secondrow.map((Obj, index) => {\r\n                            return (\r\n                                <div key={index}>\r\n                                    <HexaOptions text={Obj.title} color={Obj.color} link={Obj.link} click={Obj.click} />\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Modal show={modal} onHide={() => setModal(false)}>\r\n                <Modal.Header>\r\n                    <h4>Declare workshop</h4>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n\r\n                    <form action=\"\" onSubmit={handleSubmit(onSubmit)}>\r\n\r\n                        <Input type='text' label='Venue' required register={register} errors={errors} rules={{ required: true }} />\r\n\r\n                        <Select name={'BroCamp'} required\r\n                            register={register} errors={errors} rules={{ required: true }} options={['Kochi', 'Calicut']} />\r\n\r\n                        <Input type='date' label='Date' required register={register} errors={errors} rules={{ required: true }} />\r\n\r\n                        <Input type='text' label='Batch' required register={register} errors={errors} rules={{ required: true }} />\r\n\r\n                        <Input type='text' label='Seats' required register={register} errors={errors} rules={{ required: true }} />\r\n\r\n                        <button type=\"submit\">Save</button>\r\n\r\n                    </form>\r\n\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}