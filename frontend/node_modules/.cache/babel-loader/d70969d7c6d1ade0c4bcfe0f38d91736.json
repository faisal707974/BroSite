{"ast":null,"code":"\"use strict\";\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n/**\n * Utilities\n * @module utils\n * @borrows module:auth_token as generate_auth_token\n */\n\n\nvar crypto = require(\"crypto\");\n\nvar querystring = require(\"querystring\");\n\nvar urlParse = require(\"url\").parse; // Functions used internally\n\n\nvar compact = require(\"lodash/compact\");\n\nvar first = require(\"lodash/first\");\n\nvar isFunction = require(\"lodash/isFunction\");\n\nvar isPlainObject = require(\"lodash/isPlainObject\");\n\nvar last = require(\"lodash/last\");\n\nvar map = require(\"lodash/map\");\n\nvar take = require(\"lodash/take\");\n\nvar at = require(\"lodash/at\"); // Exposed by the module\n\n\nvar clone = require(\"lodash/clone\");\n\nvar extend = require(\"lodash/extend\");\n\nvar filter = require(\"lodash/filter\");\n\nvar includes = require(\"lodash/includes\");\n\nvar isArray = require(\"lodash/isArray\");\n\nvar isEmpty = require(\"lodash/isEmpty\");\n\nvar isNumber = require(\"lodash/isNumber\");\n\nvar isObject = require(\"lodash/isObject\");\n\nvar isString = require(\"lodash/isString\");\n\nvar isUndefined = require(\"lodash/isUndefined\");\n\nvar smart_escape = require(\"./encoding/smart_escape\");\n\nvar consumeOption = require('./parsing/consumeOption');\n\nvar toArray = require('./parsing/toArray');\n\nvar _require = require('./encoding/base64EncodeURL'),\n    base64EncodeURL = _require.base64EncodeURL;\n\nvar encodeDoubleArray = require('./encoding/encodeDoubleArray');\n\nvar config = require(\"../config\");\n\nvar generate_token = require(\"../auth_token\");\n\nvar utf8_encode = require('./utf8_encode');\n\nvar crc32 = require('./crc32');\n\nvar ensurePresenceOf = require('./ensurePresenceOf');\n\nvar ensureOption = require('./ensureOption').defaults(config());\n\nvar entries = require('./entries');\n\nvar isRemoteUrl = require('./isRemoteUrl');\n\nvar getSDKVersions = require('./encoding/sdkAnalytics/getSDKVersions');\n\nvar _require$Util = require('cloudinary-core').Util,\n    getAnalyticsOptions = _require$Util.getAnalyticsOptions,\n    getSDKAnalyticsSignature = _require$Util.getSDKAnalyticsSignature;\n\nexports = module.exports;\nvar utils = module.exports;\n\ntry {\n  // eslint-disable-next-line global-require\n  utils.VERSION = require('../../package.json').version;\n} catch (error) {\n  utils.VERSION = '';\n}\n\nfunction generate_auth_token(options) {\n  var token_options = Object.assign({}, config().auth_token, options);\n  return generate_token(token_options);\n}\n\nexports.CF_SHARED_CDN = \"d3jpl91pxevbkh.cloudfront.net\";\nexports.OLD_AKAMAI_SHARED_CDN = \"cloudinary-a.akamaihd.net\";\nexports.AKAMAI_SHARED_CDN = \"res.cloudinary.com\";\nexports.SHARED_CDN = exports.AKAMAI_SHARED_CDN;\nexports.USER_AGENT = `CloudinaryNodeJS/${exports.VERSION} (Node ${process.versions.node})`; // Add platform information to the USER_AGENT header\n// This is intended for platform information and not individual applications!\n\nexports.userPlatform = \"\";\n\nfunction getUserAgent() {\n  return isEmpty(utils.userPlatform) ? `${utils.USER_AGENT}` : `${utils.userPlatform} ${utils.USER_AGENT}`;\n}\n\nvar _require2 = require('./consts'),\n    DEFAULT_RESPONSIVE_WIDTH_TRANSFORMATION = _require2.DEFAULT_RESPONSIVE_WIDTH_TRANSFORMATION,\n    DEFAULT_POSTER_OPTIONS = _require2.DEFAULT_POSTER_OPTIONS,\n    DEFAULT_VIDEO_SOURCE_TYPES = _require2.DEFAULT_VIDEO_SOURCE_TYPES,\n    CONDITIONAL_OPERATORS = _require2.CONDITIONAL_OPERATORS,\n    PREDEFINED_VARS = _require2.PREDEFINED_VARS,\n    LAYER_KEYWORD_PARAMS = _require2.LAYER_KEYWORD_PARAMS,\n    TRANSFORMATION_PARAMS = _require2.TRANSFORMATION_PARAMS,\n    SIMPLE_PARAMS = _require2.SIMPLE_PARAMS,\n    UPLOAD_PREFIX = _require2.UPLOAD_PREFIX,\n    SUPPORTED_SIGNATURE_ALGORITHMS = _require2.SUPPORTED_SIGNATURE_ALGORITHMS,\n    DEFAULT_SIGNATURE_ALGORITHM = _require2.DEFAULT_SIGNATURE_ALGORITHM;\n\nfunction textStyle(layer) {\n  var keywords = [];\n  var style = \"\";\n\n  if (!isEmpty(layer.text_style)) {\n    return layer.text_style;\n  }\n\n  Object.keys(LAYER_KEYWORD_PARAMS).forEach(function (attr) {\n    var default_value = LAYER_KEYWORD_PARAMS[attr];\n    var attr_value = layer[attr] || default_value;\n\n    if (attr_value !== default_value) {\n      keywords.push(attr_value);\n    }\n  });\n  Object.keys(layer).forEach(function (attr) {\n    if (attr === \"letter_spacing\" || attr === \"line_spacing\") {\n      keywords.push(`${attr}_${layer[attr]}`);\n    }\n\n    if (attr === \"font_hinting\") {\n      keywords.push(`${attr.split(\"_\").pop()}_${layer[attr]}`);\n    }\n\n    if (attr === \"font_antialiasing\") {\n      keywords.push(`antialias_${layer[attr]}`);\n    }\n  });\n\n  if (layer.hasOwnProperty(\"font_size\" || \"font_family\") || !isEmpty(keywords)) {\n    if (!layer.font_size) throw `Must supply font_size for text in overlay/underlay`;\n    if (!layer.font_family) throw `Must supply font_family for text in overlay/underlay`;\n    keywords.unshift(layer.font_size);\n    keywords.unshift(layer.font_family);\n    style = compact(keywords).join(\"_\");\n  }\n\n  return style;\n}\n/**\n * Normalize an expression string, replace \"nice names\" with their coded values and spaces with \"_\"\n * e.g. `width > 0` => `w_lt_0`\n *\n * @param {String} expression An expression to be normalized\n * @return {Object|String} A normalized String of the input value if possible otherwise the value itself\n */\n\n\nfunction normalize_expression(expression) {\n  if (!isString(expression) || expression.length === 0 || expression.match(/^!.+!$/)) {\n    return expression;\n  }\n\n  var operators = \"\\\\|\\\\||>=|<=|&&|!=|>|=|<|/|-|\\\\^|\\\\+|\\\\*\";\n  var operatorsPattern = \"((\" + operators + \")(?=[ _]))\";\n  var operatorsReplaceRE = new RegExp(operatorsPattern, \"g\");\n  expression = expression.replace(operatorsReplaceRE, function (match) {\n    return CONDITIONAL_OPERATORS[match];\n  }); // Duplicate PREDEFINED_VARS to also include :{var_name} as well as {var_name}\n  // Example:\n  // -- PREDEFINED_VARS = ['foo']\n  // -- predefinedVarsPattern = ':foo|foo'\n  // It is done like this because node 6 does not support regex lookbehind\n\n  var predefinedVarsPattern = \"(\" + Object.keys(PREDEFINED_VARS).map(function (v) {\n    return `:${v}|${v}`;\n  }).join(\"|\") + \")\";\n  var userVariablePattern = '(\\\\$_*[^_ ]+)';\n  var variablesReplaceRE = new RegExp(`${userVariablePattern}|${predefinedVarsPattern}`, \"g\");\n  expression = expression.replace(variablesReplaceRE, function (match) {\n    return PREDEFINED_VARS[match] || match;\n  });\n  return expression.replace(/[ _]+/g, '_');\n}\n/**\n * Parse custom_function options\n * @private\n * @param {object|*} customFunction a custom function object containing function_type and source values\n * @return {string|*} custom_function transformation string\n */\n\n\nfunction process_custom_function(customFunction) {\n  if (!isObject(customFunction)) {\n    return customFunction;\n  }\n\n  if (customFunction.function_type === \"remote\") {\n    var encodedSource = base64EncodeURL(customFunction.source);\n    return [customFunction.function_type, encodedSource].join(\":\");\n  }\n\n  return [customFunction.function_type, customFunction.source].join(\":\");\n}\n/**\n * Parse custom_pre_function options\n * @private\n * @param {object|*} customPreFunction a custom function object containing function_type and source values\n * @return {string|*} custom_pre_function transformation string\n */\n\n\nfunction process_custom_pre_function(customPreFunction) {\n  var result = process_custom_function(customPreFunction);\n  return utils.isString(result) ? `pre:${result}` : null;\n}\n/**\n * Parse \"if\" parameter\n * Translates the condition if provided.\n * @private\n * @return {string} \"if_\" + ifValue\n */\n\n\nfunction process_if(ifValue) {\n  return ifValue ? \"if_\" + normalize_expression(ifValue) : ifValue;\n}\n/**\n * Parse layer options\n * @private\n * @param {object|*} layer The layer to parse.\n * @return {string} layer transformation string\n */\n\n\nfunction process_layer(layer) {\n  var result = '';\n\n  if (isPlainObject(layer)) {\n    if (layer.resource_type === \"fetch\" || layer.url != null) {\n      result = `fetch:${base64EncodeURL(layer.url)}`;\n    } else {\n      var public_id = layer.public_id;\n      var format = layer.format;\n      var resource_type = layer.resource_type || \"image\";\n      var type = layer.type || \"upload\";\n      var text = layer.text;\n      var style = null;\n      var components = [];\n      var noPublicId = isEmpty(public_id);\n\n      if (!noPublicId) {\n        public_id = public_id.replace(new RegExp(\"/\", 'g'), \":\");\n\n        if (format != null) {\n          public_id = `${public_id}.${format}`;\n        }\n      }\n\n      if (isEmpty(text) && resource_type !== \"text\") {\n        if (noPublicId) {\n          throw \"Must supply public_id for resource_type layer_parameter\";\n        }\n\n        if (resource_type === \"subtitles\") {\n          style = textStyle(layer);\n        }\n      } else {\n        resource_type = \"text\";\n        type = null; // type is ignored for text layers\n\n        style = textStyle(layer);\n\n        if (!isEmpty(text)) {\n          var noStyle = isEmpty(style);\n\n          if (!(noPublicId || noStyle) || noPublicId && noStyle) {\n            throw \"Must supply either style parameters or a public_id when providing text parameter in a text overlay/underlay\";\n          }\n\n          var re = /\\$\\([a-zA-Z]\\w*\\)/g;\n          var start = 0;\n          var textSource = smart_escape(decodeURIComponent(text), /[,\\/]/g);\n          text = \"\";\n\n          for (var res = re.exec(textSource); res; res = re.exec(textSource)) {\n            text += smart_escape(textSource.slice(start, res.index));\n            text += res[0];\n            start = res.index + res[0].length;\n          }\n\n          text += encodeURIComponent(textSource.slice(start));\n        }\n      }\n\n      if (resource_type !== \"image\") {\n        components.push(resource_type);\n      }\n\n      if (type !== \"upload\") {\n        components.push(type);\n      }\n\n      components.push(style);\n      components.push(public_id);\n      components.push(text);\n      result = compact(components).join(\":\");\n    }\n  } else if (/^fetch:.+/.test(layer)) {\n    result = `fetch:${base64EncodeURL(layer.substr(6))}`;\n  } else {\n    result = layer;\n  }\n\n  return result;\n}\n/**\n * Parse radius options\n * @private\n * @param {Array<string|number>|string|number} radius The radius to parse\n * @return {string} radius transformation string\n */\n\n\nfunction process_radius(radius) {\n  if (!radius) {\n    return radius;\n  }\n\n  if (!isArray(radius)) {\n    radius = [radius];\n  }\n\n  if (radius.length === 0 || radius.length > 4) {\n    throw new Error(\"Radius array should contain between 1 and 4 values\");\n  }\n\n  if (radius.findIndex(function (x) {\n    return x === null;\n  }) >= 0) {\n    throw new Error(\"Corner: Cannot be null\");\n  }\n\n  return radius.map(normalize_expression).join(':');\n}\n\nfunction build_multi_and_sprite_params(tagOrOptions, options) {\n  var tag = null;\n\n  if (typeof tagOrOptions === 'string') {\n    tag = tagOrOptions;\n  } else {\n    if (isEmpty(options)) {\n      options = tagOrOptions;\n    } else {\n      throw new Error('First argument must be a tag when additional options are passed');\n    }\n\n    tag = null;\n  }\n\n  if (!options && !tag) {\n    throw new Error('Either tag or urls are required');\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  var urls = options.urls;\n  var transformation = generate_transformation_string(extend({}, options, {\n    fetch_format: options.format\n  }));\n  return {\n    tag,\n    transformation,\n    urls,\n    timestamp: utils.timestamp(),\n    async: options.async,\n    notification_url: options.notification_url\n  };\n}\n\nfunction build_upload_params(options) {\n  var params = {\n    access_mode: options.access_mode,\n    allowed_formats: options.allowed_formats && toArray(options.allowed_formats).join(\",\"),\n    asset_folder: options.asset_folder,\n    async: utils.as_safe_bool(options.async),\n    backup: utils.as_safe_bool(options.backup),\n    callback: options.callback,\n    cinemagraph_analysis: utils.as_safe_bool(options.cinemagraph_analysis),\n    colors: utils.as_safe_bool(options.colors),\n    display_name: options.display_name,\n    discard_original_filename: utils.as_safe_bool(options.discard_original_filename),\n    eager: utils.build_eager(options.eager),\n    eager_async: utils.as_safe_bool(options.eager_async),\n    eager_notification_url: options.eager_notification_url,\n    eval: options.eval,\n    exif: utils.as_safe_bool(options.exif),\n    faces: utils.as_safe_bool(options.faces),\n    folder: options.folder,\n    format: options.format,\n    filename_override: options.filename_override,\n    image_metadata: utils.as_safe_bool(options.image_metadata),\n    invalidate: utils.as_safe_bool(options.invalidate),\n    moderation: options.moderation,\n    notification_url: options.notification_url,\n    overwrite: utils.as_safe_bool(options.overwrite),\n    phash: utils.as_safe_bool(options.phash),\n    proxy: options.proxy,\n    public_id: options.public_id,\n    public_id_prefix: options.public_id_prefix,\n    quality_analysis: utils.as_safe_bool(options.quality_analysis),\n    responsive_breakpoints: utils.generate_responsive_breakpoints_string(options.responsive_breakpoints),\n    return_delete_token: utils.as_safe_bool(options.return_delete_token),\n    timestamp: options.timestamp || exports.timestamp(),\n    transformation: utils.generate_transformation_string(clone(options)),\n    type: options.type,\n    unique_filename: utils.as_safe_bool(options.unique_filename),\n    upload_preset: options.upload_preset,\n    use_filename: utils.as_safe_bool(options.use_filename),\n    use_filename_as_display_name: utils.as_safe_bool(options.use_filename_as_display_name),\n    quality_override: options.quality_override,\n    accessibility_analysis: utils.as_safe_bool(options.accessibility_analysis)\n  };\n  return utils.updateable_resource_params(options, params);\n}\n\nfunction encode_key_value(arg) {\n  if (!isObject(arg)) {\n    return arg;\n  }\n\n  return entries(arg).map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        k = _ref2[0],\n        v = _ref2[1];\n\n    return `${k}=${v}`;\n  }).join('|');\n}\n/**\n * @description Escape = and | with two backslashes \\\\\n * @param {string|number} value\n * @return {string}\n */\n\n\nfunction escapeMetadataValue(value) {\n  return value.toString().replace(/([=|])/g, '\\\\$&');\n}\n/**\n *\n * @description Encode metadata fields based on incoming value.\n *              If array, escape as color_id=[\\\"green\\\",\\\"red\\\"]\n *              If string/number, escape as in_stock_id=50\n *\n *              Joins resulting values with a pipe:\n *              in_stock_id=50|color_id=[\\\"green\\\",\\\"red\\\"]\n *\n *              = and | and escaped by default (this can't be turned off)\n *\n * @param metadataObj\n * @return {string}\n */\n\n\nfunction encode_context(metadataObj) {\n  if (!isObject(metadataObj)) {\n    return metadataObj;\n  }\n\n  return entries(metadataObj).map(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n        key = _ref4[0],\n        value = _ref4[1]; // if string, simply parse the value and move on\n\n\n    if (isString(value)) {\n      return `${key}=${escapeMetadataValue(value)}`; // If array, parse each item individually\n    } else if (isArray(value)) {\n      var values = value.map(function (innerVal) {\n        return `\\\"${escapeMetadataValue(innerVal)}\\\"`;\n      }).join(',');\n      return `${key}=[${values}]`; // if unknown, return the value as string\n    } else {\n      return value.toString();\n    }\n  }).join('|');\n}\n\nfunction build_eager(transformations) {\n  return toArray(transformations).map(function (transformation) {\n    var transformationString = utils.generate_transformation_string(clone(transformation));\n    var format = transformation.format;\n    return format == null ? transformationString : `${transformationString}/${format}`;\n  }).join('|');\n}\n/**\n * Build the custom headers for the request\n * @private\n * @param headers\n * @return {Array<string>|object|string} An object of name and value,\n *         an array of header strings, or a string of headers\n */\n\n\nfunction build_custom_headers(headers) {\n  switch (true) {\n    case headers == null:\n      return void 0;\n\n    case isArray(headers):\n      return headers.join(\"\\n\");\n\n    case isObject(headers):\n      return entries(headers).map(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n            k = _ref6[0],\n            v = _ref6[1];\n\n        return `${k}:${v}`;\n      }).join(\"\\n\");\n\n    default:\n      return headers;\n  }\n}\n\nfunction generate_transformation_string(options) {\n  if (utils.isString(options)) {\n    return options;\n  }\n\n  if (isArray(options)) {\n    return options.map(function (t) {\n      return utils.generate_transformation_string(clone(t));\n    }).filter(utils.present).join('/');\n  }\n\n  var responsive_width = consumeOption(options, \"responsive_width\", config().responsive_width);\n  var width = options.width;\n  var height = options.height;\n  var size = consumeOption(options, \"size\");\n\n  if (size) {\n    var _size$split = size.split(\"x\");\n\n    var _size$split2 = _slicedToArray(_size$split, 2);\n\n    width = _size$split2[0];\n    height = _size$split2[1];\n    var _ref7 = [width, height];\n    options.width = _ref7[0];\n    options.height = _ref7[1];\n  }\n\n  var has_layer = options.overlay || options.underlay;\n  var crop = consumeOption(options, \"crop\");\n  var angle = toArray(consumeOption(options, \"angle\")).join(\".\");\n  var no_html_sizes = has_layer || utils.present(angle) || crop === \"fit\" || crop === \"limit\" || responsive_width;\n\n  if (width && (width.toString().indexOf(\"auto\") === 0 || no_html_sizes || parseFloat(width) < 1)) {\n    delete options.width;\n  }\n\n  if (height && (no_html_sizes || parseFloat(height) < 1)) {\n    delete options.height;\n  }\n\n  var background = consumeOption(options, \"background\");\n  background = background && background.replace(/^#/, \"rgb:\");\n  var color = consumeOption(options, \"color\");\n  color = color && color.replace(/^#/, \"rgb:\");\n  var base_transformations = toArray(consumeOption(options, \"transformation\", []));\n  var named_transformation = [];\n\n  if (base_transformations.some(isObject)) {\n    base_transformations = base_transformations.map(function (tr) {\n      return utils.generate_transformation_string(isObject(tr) ? clone(tr) : {\n        transformation: tr\n      });\n    });\n  } else {\n    named_transformation = base_transformations.join(\".\");\n    base_transformations = [];\n  }\n\n  var effect = consumeOption(options, \"effect\");\n\n  if (isArray(effect)) {\n    effect = effect.join(\":\");\n  } else if (isObject(effect)) {\n    effect = entries(effect).map(function (_ref8) {\n      var _ref9 = _slicedToArray(_ref8, 2),\n          key = _ref9[0],\n          value = _ref9[1];\n\n      return `${key}:${value}`;\n    });\n  }\n\n  var border = consumeOption(options, \"border\");\n\n  if (isObject(border)) {\n    border = `${border.width != null ? border.width : 2}px_solid_${(border.color != null ? border.color : \"black\").replace(/^#/, 'rgb:')}`;\n  } else if (/^\\d+$/.exec(border)) {\n    // fallback to html border attributes\n    options.border = border;\n    border = void 0;\n  }\n\n  var flags = toArray(consumeOption(options, \"flags\")).join(\".\");\n  var dpr = consumeOption(options, \"dpr\", config().dpr);\n\n  if (options.offset != null) {\n    var _split_range = split_range(consumeOption(options, \"offset\"));\n\n    var _split_range2 = _slicedToArray(_split_range, 2);\n\n    options.start_offset = _split_range2[0];\n    options.end_offset = _split_range2[1];\n  }\n\n  var overlay = process_layer(consumeOption(options, \"overlay\"));\n  var radius = process_radius(consumeOption(options, \"radius\"));\n  var underlay = process_layer(consumeOption(options, \"underlay\"));\n  var ifValue = process_if(consumeOption(options, \"if\"));\n  var custom_function = process_custom_function(consumeOption(options, \"custom_function\"));\n  var custom_pre_function = process_custom_pre_function(consumeOption(options, \"custom_pre_function\"));\n  var fps = consumeOption(options, 'fps');\n\n  if (isArray(fps)) {\n    fps = fps.join('-');\n  }\n\n  var params = {\n    a: normalize_expression(angle),\n    ar: normalize_expression(consumeOption(options, \"aspect_ratio\")),\n    b: background,\n    bo: border,\n    c: crop,\n    co: color,\n    dpr: normalize_expression(dpr),\n    e: normalize_expression(effect),\n    fl: flags,\n    fn: custom_function || custom_pre_function,\n    fps: fps,\n    h: normalize_expression(height),\n    ki: normalize_expression(consumeOption(options, \"keyframe_interval\")),\n    l: overlay,\n    o: normalize_expression(consumeOption(options, \"opacity\")),\n    q: normalize_expression(consumeOption(options, \"quality\")),\n    r: radius,\n    t: named_transformation,\n    u: underlay,\n    w: normalize_expression(width),\n    x: normalize_expression(consumeOption(options, \"x\")),\n    y: normalize_expression(consumeOption(options, \"y\")),\n    z: normalize_expression(consumeOption(options, \"zoom\"))\n  };\n  SIMPLE_PARAMS.forEach(function (_ref10) {\n    var _ref11 = _slicedToArray(_ref10, 2),\n        name = _ref11[0],\n        short = _ref11[1];\n\n    var value = consumeOption(options, name);\n\n    if (value !== undefined) {\n      params[short] = value;\n    }\n  });\n\n  if (params.vc != null) {\n    params.vc = process_video_params(params.vc);\n  }\n\n  [\"so\", \"eo\", \"du\"].forEach(function (short) {\n    if (params[short] !== undefined) {\n      params[short] = norm_range_value(params[short]);\n    }\n  });\n  var variablesParam = consumeOption(options, \"variables\", []);\n  var variables = entries(options).filter(function (_ref12) {\n    var _ref13 = _slicedToArray(_ref12, 2),\n        key = _ref13[0],\n        value = _ref13[1];\n\n    return key.startsWith('$');\n  }).map(function (_ref14) {\n    var _ref15 = _slicedToArray(_ref14, 2),\n        key = _ref15[0],\n        value = _ref15[1];\n\n    delete options[key];\n    return `${key}_${normalize_expression(value)}`;\n  }).sort().concat(variablesParam.map(function (_ref16) {\n    var _ref17 = _slicedToArray(_ref16, 2),\n        name = _ref17[0],\n        value = _ref17[1];\n\n    return `${name}_${normalize_expression(value)}`;\n  })).join(',');\n  var transformations = entries(params).filter(function (_ref18) {\n    var _ref19 = _slicedToArray(_ref18, 2),\n        key = _ref19[0],\n        value = _ref19[1];\n\n    return utils.present(value);\n  }).map(function (_ref20) {\n    var _ref21 = _slicedToArray(_ref20, 2),\n        key = _ref21[0],\n        value = _ref21[1];\n\n    return key + '_' + value;\n  }).sort().join(',');\n  var raw_transformation = consumeOption(options, 'raw_transformation');\n  transformations = compact([ifValue, variables, transformations, raw_transformation]).join(\",\");\n  base_transformations.push(transformations);\n  transformations = base_transformations;\n\n  if (responsive_width) {\n    var responsive_width_transformation = config().responsive_width_transformation || DEFAULT_RESPONSIVE_WIDTH_TRANSFORMATION;\n    transformations.push(utils.generate_transformation_string(clone(responsive_width_transformation)));\n  }\n\n  if (String(width).startsWith(\"auto\") || responsive_width) {\n    options.responsive = true;\n  }\n\n  if (dpr === \"auto\") {\n    options.hidpi = true;\n  }\n\n  return filter(transformations, utils.present).join(\"/\");\n}\n\nfunction updateable_resource_params(options) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (options.access_control != null) {\n    params.access_control = utils.jsonArrayParam(options.access_control);\n  }\n\n  if (options.auto_tagging != null) {\n    params.auto_tagging = options.auto_tagging;\n  }\n\n  if (options.background_removal != null) {\n    params.background_removal = options.background_removal;\n  }\n\n  if (options.categorization != null) {\n    params.categorization = options.categorization;\n  }\n\n  if (options.context != null) {\n    params.context = utils.encode_context(options.context);\n  }\n\n  if (options.metadata != null) {\n    params.metadata = utils.encode_context(options.metadata);\n  }\n\n  if (options.custom_coordinates != null) {\n    params.custom_coordinates = encodeDoubleArray(options.custom_coordinates);\n  }\n\n  if (options.detection != null) {\n    params.detection = options.detection;\n  }\n\n  if (options.face_coordinates != null) {\n    params.face_coordinates = encodeDoubleArray(options.face_coordinates);\n  }\n\n  if (options.headers != null) {\n    params.headers = utils.build_custom_headers(options.headers);\n  }\n\n  if (options.notification_url != null) {\n    params.notification_url = options.notification_url;\n  }\n\n  if (options.ocr != null) {\n    params.ocr = options.ocr;\n  }\n\n  if (options.raw_convert != null) {\n    params.raw_convert = options.raw_convert;\n  }\n\n  if (options.similarity_search != null) {\n    params.similarity_search = options.similarity_search;\n  }\n\n  if (options.tags != null) {\n    params.tags = toArray(options.tags).join(\",\");\n  }\n\n  if (options.quality_override != null) {\n    params.quality_override = options.quality_override;\n  }\n\n  return params;\n}\n/**\n * A list of keys used by the url() function.\n * @private\n */\n\n\nvar URL_KEYS = ['api_secret', 'auth_token', 'cdn_subdomain', 'cloud_name', 'cname', 'format', 'long_url_signature', 'private_cdn', 'resource_type', 'secure', 'secure_cdn_subdomain', 'secure_distribution', 'shorten', 'sign_url', 'ssl_detected', 'type', 'url_suffix', 'use_root_path', 'version'];\n/**\n * Create a new object with only URL parameters\n * @param {object} options The source object\n * @return {Object} An object containing only URL parameters\n */\n\nfunction extractUrlParams(options) {\n  return pickOnlyExistingValues.apply(undefined, [options].concat(URL_KEYS));\n}\n/**\n * Create a new object with only transformation parameters\n * @param {object} options The source object\n * @return {Object} An object containing only transformation parameters\n */\n\n\nfunction extractTransformationParams(options) {\n  return pickOnlyExistingValues.apply(undefined, [options].concat(_toConsumableArray(TRANSFORMATION_PARAMS)));\n}\n/**\n * Handle the format parameter for fetch urls\n * @private\n * @param options url and transformation options. This argument may be changed by the function!\n */\n\n\nfunction patchFetchFormat() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  if (options.type === \"fetch\") {\n    if (options.fetch_format == null) {\n      options.fetch_format = consumeOption(options, \"format\");\n    }\n  }\n}\n\nfunction url(public_id) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var signature = void 0,\n      source_to_sign = void 0;\n  utils.patchFetchFormat(options);\n  var type = consumeOption(options, \"type\", null);\n  var transformation = utils.generate_transformation_string(options);\n  var resource_type = consumeOption(options, \"resource_type\", \"image\");\n  var version = consumeOption(options, \"version\");\n  var force_version = consumeOption(options, \"force_version\", config().force_version);\n\n  if (force_version == null) {\n    force_version = true;\n  }\n\n  var long_url_signature = !!consumeOption(options, \"long_url_signature\", config().long_url_signature);\n  var format = consumeOption(options, \"format\");\n  var cloud_name = consumeOption(options, \"cloud_name\", config().cloud_name);\n\n  if (!cloud_name) {\n    throw \"Unknown cloud_name\";\n  }\n\n  var private_cdn = consumeOption(options, \"private_cdn\", config().private_cdn);\n  var secure_distribution = consumeOption(options, \"secure_distribution\", config().secure_distribution);\n  var secure = consumeOption(options, \"secure\", null);\n  var ssl_detected = consumeOption(options, \"ssl_detected\", config().ssl_detected);\n\n  if (secure === null) {\n    secure = ssl_detected || config().secure;\n  }\n\n  var cdn_subdomain = consumeOption(options, \"cdn_subdomain\", config().cdn_subdomain);\n  var secure_cdn_subdomain = consumeOption(options, \"secure_cdn_subdomain\", config().secure_cdn_subdomain);\n  var cname = consumeOption(options, \"cname\", config().cname);\n  var shorten = consumeOption(options, \"shorten\", config().shorten);\n  var sign_url = consumeOption(options, \"sign_url\", config().sign_url);\n  var api_secret = consumeOption(options, \"api_secret\", config().api_secret);\n  var url_suffix = consumeOption(options, \"url_suffix\");\n  var use_root_path = consumeOption(options, \"use_root_path\", config().use_root_path);\n  var signature_algorithm = consumeOption(options, \"signature_algorithm\", config().signature_algorithm || DEFAULT_SIGNATURE_ALGORITHM);\n\n  if (long_url_signature) {\n    signature_algorithm = 'sha256';\n  }\n\n  var auth_token = consumeOption(options, \"auth_token\");\n\n  if (auth_token !== false) {\n    auth_token = exports.merge(config().auth_token, auth_token);\n  }\n\n  var preloaded = /^(image|raw)\\/([a-z0-9_]+)\\/v(\\d+)\\/([^#]+)$/.exec(public_id);\n\n  if (preloaded) {\n    resource_type = preloaded[1];\n    type = preloaded[2];\n    version = preloaded[3];\n    public_id = preloaded[4];\n  }\n\n  var original_source = public_id;\n\n  if (public_id == null) {\n    return original_source;\n  }\n\n  public_id = public_id.toString();\n\n  if (type === null && public_id.match(/^https?:\\//i)) {\n    return original_source;\n  }\n\n  var _finalize_resource_ty = finalize_resource_type(resource_type, type, url_suffix, use_root_path, shorten);\n\n  var _finalize_resource_ty2 = _slicedToArray(_finalize_resource_ty, 2);\n\n  resource_type = _finalize_resource_ty2[0];\n  type = _finalize_resource_ty2[1];\n\n  var _finalize_source = finalize_source(public_id, format, url_suffix);\n\n  var _finalize_source2 = _slicedToArray(_finalize_source, 2);\n\n  public_id = _finalize_source2[0];\n  source_to_sign = _finalize_source2[1];\n\n  if (version == null && force_version && source_to_sign.indexOf(\"/\") >= 0 && !source_to_sign.match(/^v[0-9]+/) && !source_to_sign.match(/^https?:\\//)) {\n    version = 1;\n  }\n\n  if (version != null) {\n    version = `v${version}`;\n  } else {\n    version = null;\n  }\n\n  transformation = transformation.replace(/([^:])\\/\\//g, '$1/');\n\n  if (sign_url && isEmpty(auth_token)) {\n    var to_sign = [transformation, source_to_sign].filter(function (part) {\n      return part != null && part !== '';\n    }).join('/');\n\n    try {\n      for (var i = 0; to_sign !== decodeURIComponent(to_sign) && i < 10; i++) {\n        to_sign = decodeURIComponent(to_sign);\n      } // eslint-disable-next-line no-empty\n\n    } catch (error) {}\n\n    var hash = computeHash(to_sign + api_secret, signature_algorithm, 'base64');\n    signature = hash.replace(/\\//g, '_').replace(/\\+/g, '-').substring(0, long_url_signature ? 32 : 8);\n    signature = `s--${signature}--`;\n  }\n\n  var prefix = unsigned_url_prefix(public_id, cloud_name, private_cdn, cdn_subdomain, secure_cdn_subdomain, cname, secure, secure_distribution);\n  var resultUrl = [prefix, resource_type, type, signature, transformation, version, public_id].filter(function (part) {\n    return part != null && part !== '';\n  }).join('/').replace(/ /g, '%20');\n\n  if (sign_url && !isEmpty(auth_token)) {\n    auth_token.url = urlParse(resultUrl).path;\n    var token = generate_token(auth_token);\n    resultUrl += `?${token}`;\n  }\n\n  var urlAnalytics = ensureOption(options, 'urlAnalytics', false);\n\n  if (urlAnalytics === true) {\n    var sdkVersions = getSDKVersions();\n    var analyticsOptions = getAnalyticsOptions(Object.assign({}, options, sdkVersions));\n    var sdkAnalyticsSignature = getSDKAnalyticsSignature(analyticsOptions); // url might already have a '?' query param\n\n    var appender = '?';\n\n    if (resultUrl.indexOf('?') >= 0) {\n      appender = '&';\n    }\n\n    resultUrl = `${resultUrl}${appender}_s=${sdkAnalyticsSignature}`;\n  }\n\n  return resultUrl;\n}\n\nfunction video_url(public_id, options) {\n  options = extend({\n    resource_type: 'video'\n  }, options);\n  return utils.url(public_id, options);\n}\n\nfunction finalize_source(source, format, url_suffix) {\n  var source_to_sign = void 0;\n  source = source.replace(/([^:])\\/\\//g, '$1/');\n\n  if (source.match(/^https?:\\//i)) {\n    source = smart_escape(source);\n    source_to_sign = source;\n  } else {\n    source = encodeURIComponent(decodeURIComponent(source)).replace(/%3A/g, \":\").replace(/%2F/g, \"/\");\n    source_to_sign = source;\n\n    if (url_suffix) {\n      if (url_suffix.match(/[\\.\\/]/)) {\n        throw new Error('url_suffix should not include . or /');\n      }\n\n      source = source + '/' + url_suffix;\n    }\n\n    if (format != null) {\n      source = source + '.' + format;\n      source_to_sign = source_to_sign + '.' + format;\n    }\n  }\n\n  return [source, source_to_sign];\n}\n\nfunction video_thumbnail_url(public_id, options) {\n  options = extend({}, DEFAULT_POSTER_OPTIONS, options);\n  return utils.url(public_id, options);\n}\n\nfunction finalize_resource_type(resource_type, type, url_suffix, use_root_path, shorten) {\n  if (type == null) {\n    type = 'upload';\n  }\n\n  if (url_suffix != null) {\n    if (resource_type === 'image' && type === 'upload') {\n      resource_type = \"images\";\n      type = null;\n    } else if (resource_type === 'image' && type === 'private') {\n      resource_type = 'private_images';\n      type = null;\n    } else if (resource_type === 'image' && type === 'authenticated') {\n      resource_type = 'authenticated_images';\n      type = null;\n    } else if (resource_type === 'raw' && type === 'upload') {\n      resource_type = 'files';\n      type = null;\n    } else if (resource_type === 'video' && type === 'upload') {\n      resource_type = 'videos';\n      type = null;\n    } else {\n      throw new Error(\"URL Suffix only supported for image/upload, image/private, image/authenticated, video/upload and raw/upload\");\n    }\n  }\n\n  if (use_root_path) {\n    if (resource_type === 'image' && type === 'upload' || resource_type === 'images' && type == null) {\n      resource_type = null;\n      type = null;\n    } else {\n      throw new Error(\"Root path only supported for image/upload\");\n    }\n  }\n\n  if (shorten && resource_type === 'image' && type === 'upload') {\n    resource_type = 'iu';\n    type = null;\n  }\n\n  return [resource_type, type];\n} // cdn_subdomain and secure_cdn_subdomain\n// 1) Customers in shared distribution (e.g. res.cloudinary.com)\n//    if cdn_domain is true uses res-[1-5].cloudinary.com for both http and https.\n//    Setting secure_cdn_subdomain to false disables this for https.\n// 2) Customers with private cdn\n//    if cdn_domain is true uses cloudname-res-[1-5].cloudinary.com for http\n//    if secure_cdn_domain is true uses cloudname-res-[1-5].cloudinary.com for https\n//      (please contact support if you require this)\n// 3) Customers with cname\n//    if cdn_domain is true uses a[1-5].cname for http.\n//    For https, uses the same naming scheme as 1 for shared distribution and as 2 for private distribution.\n\n\nfunction unsigned_url_prefix(source, cloud_name, private_cdn, cdn_subdomain, secure_cdn_subdomain, cname, secure, secure_distribution) {\n  var prefix = void 0;\n\n  if (cloud_name.indexOf(\"/\") === 0) {\n    return '/res' + cloud_name;\n  }\n\n  var shared_domain = !private_cdn;\n\n  if (secure) {\n    if (secure_distribution == null || secure_distribution === exports.OLD_AKAMAI_SHARED_CDN) {\n      secure_distribution = private_cdn ? cloud_name + \"-res.cloudinary.com\" : exports.SHARED_CDN;\n    }\n\n    if (shared_domain == null) {\n      shared_domain = secure_distribution === exports.SHARED_CDN;\n    }\n\n    if (secure_cdn_subdomain == null && shared_domain) {\n      secure_cdn_subdomain = cdn_subdomain;\n    }\n\n    if (secure_cdn_subdomain) {\n      secure_distribution = secure_distribution.replace('res.cloudinary.com', 'res-' + (crc32(source) % 5 + 1 + '.cloudinary.com'));\n    }\n\n    prefix = 'https://' + secure_distribution;\n  } else if (cname) {\n    var subdomain = cdn_subdomain ? 'a' + (crc32(source) % 5 + 1) + '.' : '';\n    prefix = 'http://' + subdomain + cname;\n  } else {\n    var cdn_part = private_cdn ? cloud_name + '-' : '';\n    var subdomain_part = cdn_subdomain ? '-' + (crc32(source) % 5 + 1) : '';\n    var host = [cdn_part, 'res', subdomain_part, '.cloudinary.com'].join('');\n    prefix = 'http://' + host;\n  }\n\n  if (shared_domain) {\n    prefix += '/' + cloud_name;\n  }\n\n  return prefix;\n}\n\nfunction base_api_url() {\n  var path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var cloudinary = ensureOption(options, \"upload_prefix\", UPLOAD_PREFIX);\n  var cloud_name = ensureOption(options, \"cloud_name\");\n\n  var encode_path = function encode_path(unencoded_path) {\n    return encodeURIComponent(unencoded_path).replace(\"'\", '%27');\n  };\n\n  var encoded_path = Array.isArray(path) ? path.map(encode_path) : encode_path(path);\n  return [cloudinary, \"v1_1\", cloud_name].concat(encoded_path).join(\"/\");\n}\n\nfunction api_url() {\n  var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'upload';\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var resource_type = options.resource_type || \"image\";\n  return base_api_url([resource_type, action], options);\n}\n\nfunction random_public_id() {\n  return crypto.randomBytes(12).toString('base64').replace(/[^a-z0-9]/g, \"\");\n}\n\nfunction signed_preloaded_image(result) {\n  return `${result.resource_type}/upload/v${result.version}/${filter([result.public_id, result.format], utils.present).join(\".\")}#${result.signature}`;\n}\n\nfunction api_sign_request(params_to_sign, api_secret) {\n  var to_sign = entries(params_to_sign).filter(function (_ref22) {\n    var _ref23 = _slicedToArray(_ref22, 2),\n        k = _ref23[0],\n        v = _ref23[1];\n\n    return utils.present(v);\n  }).map(function (_ref24) {\n    var _ref25 = _slicedToArray(_ref24, 2),\n        k = _ref25[0],\n        v = _ref25[1];\n\n    return `${k}=${toArray(v).join(\",\")}`;\n  }).sort().join(\"&\");\n  return computeHash(to_sign + api_secret, config().signature_algorithm || DEFAULT_SIGNATURE_ALGORITHM, 'hex');\n}\n/**\n * Computes hash from input string using specified algorithm.\n * @private\n * @param {string} input string which to compute hash from\n * @param {string} signature_algorithm algorithm to use for computing hash\n * @param {string} encoding type of encoding\n * @return {string} computed hash value\n */\n\n\nfunction computeHash(input, signature_algorithm, encoding) {\n  if (!SUPPORTED_SIGNATURE_ALGORITHMS.includes(signature_algorithm)) {\n    throw new Error(`Signature algorithm ${signature_algorithm} is not supported. Supported algorithms: ${SUPPORTED_SIGNATURE_ALGORITHMS.join(', ')}`);\n  }\n\n  var hash = crypto.createHash(signature_algorithm);\n  hash.update(utf8_encode(input), 'binary');\n  return hash.digest(encoding);\n}\n\nfunction clear_blank(hash) {\n  var filtered_hash = {};\n  entries(hash).filter(function (_ref26) {\n    var _ref27 = _slicedToArray(_ref26, 2),\n        k = _ref27[0],\n        v = _ref27[1];\n\n    return utils.present(v);\n  }).forEach(function (_ref28) {\n    var _ref29 = _slicedToArray(_ref28, 2),\n        k = _ref29[0],\n        v = _ref29[1];\n\n    filtered_hash[k] = v;\n  });\n  return filtered_hash;\n}\n\nfunction merge(hash1, hash2) {\n  return _extends({}, hash1, hash2);\n}\n\nfunction sign_request(params) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var apiKey = ensureOption(options, 'api_key');\n  var apiSecret = ensureOption(options, 'api_secret');\n  params = exports.clear_blank(params);\n  params.signature = exports.api_sign_request(params, apiSecret);\n  params.api_key = apiKey;\n  return params;\n}\n\nfunction webhook_signature(data, timestamp) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  ensurePresenceOf({\n    data,\n    timestamp\n  });\n  var api_secret = ensureOption(options, 'api_secret');\n  var signature_algorithm = ensureOption(options, 'signature_algorithm', DEFAULT_SIGNATURE_ALGORITHM);\n  return computeHash(data + timestamp + api_secret, signature_algorithm, 'hex');\n}\n/**\n * Verifies the authenticity of a notification signature\n *\n * @param {string} body JSON of the request's body\n * @param {number} timestamp Unix timestamp in seconds. Can be retrieved from the X-Cld-Timestamp header\n * @param {string} signature Actual signature. Can be retrieved from the X-Cld-Signature header\n * @param {number} [valid_for=7200] The desired time in seconds for considering the request valid\n *\n * @return {boolean}\n */\n\n\nfunction verifyNotificationSignature(body, timestamp, signature) {\n  var valid_for = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 7200; // verify that signature is valid for the given timestamp\n\n  if (timestamp < Math.round(Date.now() / 1000) - valid_for) {\n    return false;\n  }\n\n  var payload_hash = utils.webhook_signature(body, timestamp, {\n    api_secret: config().api_secret,\n    signature_algorithm: config().signature_algorithm\n  });\n  return signature === payload_hash;\n}\n\nfunction process_request_params(params, options) {\n  if (options.unsigned != null && options.unsigned) {\n    params = exports.clear_blank(params);\n    delete params.timestamp;\n  } else if (options.oauth_token || config().oauth_token) {\n    params = exports.clear_blank(params);\n  } else if (options.signature) {\n    params = exports.clear_blank(options);\n  } else {\n    params = exports.sign_request(params, options);\n  }\n\n  return params;\n}\n\nfunction private_download_url(public_id, format) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var params = exports.sign_request({\n    timestamp: options.timestamp || exports.timestamp(),\n    public_id: public_id,\n    format: format,\n    type: options.type,\n    attachment: options.attachment,\n    expires_at: options.expires_at\n  }, options);\n  return exports.api_url(\"download\", options) + \"?\" + querystring.stringify(params);\n}\n/**\n * Utility method that uses the deprecated ZIP download API.\n * @deprecated Replaced by {download_zip_url} that uses the more advanced and robust archive generation and download API\n */\n\n\nfunction zip_download_url(tag) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var params = exports.sign_request({\n    timestamp: options.timestamp || exports.timestamp(),\n    tag: tag,\n    transformation: utils.generate_transformation_string(options)\n  }, options);\n  return exports.api_url(\"download_tag.zip\", options) + \"?\" + hashToQuery(params);\n}\n/**\n * The returned url should allow downloading the backedup asset based on the\n * version and asset id\n * asset and version id are returned with resource(<PUBLIC_ID1>, { versions: true })\n * @param asset_id\n * @param version_id\n * @param options\n * @returns {string }\n */\n\n\nfunction download_backedup_asset(asset_id, version_id) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var params = exports.sign_request({\n    timestamp: options.timestamp || exports.timestamp(),\n    asset_id: asset_id,\n    version_id: version_id\n  }, options);\n  return exports.base_api_url(['download_backup'], options) + \"?\" + hashToQuery(params);\n}\n/**\n * Utility method to create a signed URL for specified resources.\n * @param action\n * @param params\n * @param options\n */\n\n\nfunction api_download_url(action, params, options) {\n  var download_params = _extends({}, params, {\n    mode: \"download\"\n  });\n\n  var cloudinary_params = exports.sign_request(download_params, options);\n  return exports.api_url(action, options) + \"?\" + hashToQuery(cloudinary_params);\n}\n/**\n * Returns a URL that when invokes creates an archive and returns it.\n * @param {object} options\n * @param {string} [options.resource_type=\"image\"] The resource type of files to include in the archive.\n *   Must be one of :image | :video | :raw\n * @param {string} [options.type=\"upload\"] The specific file type of resources: :upload|:private|:authenticated\n * @param {string|Array} [options.tags] list of tags to include in the archive\n * @param {string|Array<string>} [options.public_ids] list of public_ids to include in the archive\n * @param {string|Array<string>} [options.prefixes]  list of prefixes of public IDs (e.g., folders).\n * @param {string|Array<string>} [options.fully_qualified_public_ids] list of fully qualified public_ids to include\n *   in the archive.\n * @param {string|Array<string>} [options.transformations]  list of transformations.\n *   The derived images of the given transformations are included in the archive. Using the string representation of\n *   multiple chained transformations as we use for the 'eager' upload parameter.\n * @param {string} [options.mode=\"create\"] return the generated archive file or to store it as a raw resource and\n *   return a JSON with URLs for accessing the archive. Possible values: :download, :create\n * @param {string} [options.target_format=\"zip\"]\n * @param {string} [options.target_public_id]  public ID of the generated raw resource.\n *   Relevant only for the create mode. If not specified, random public ID is generated.\n * @param {boolean} [options.flatten_folders=false] If true, flatten public IDs with folders to be in the root\n *   of the archive. Add numeric counter to the file name in case of a name conflict.\n * @param {boolean} [options.flatten_transformations=false] If true, and multiple transformations are given,\n *   flatten the folder structure of derived images and store the transformation details on the file name instead.\n * @param {boolean} [options.use_original_filename] Use the original file name of included images\n *   (if available) instead of the public ID.\n * @param {boolean} [options.async=false] If true, return immediately and perform archive creation in the background.\n *   Relevant only for the create mode.\n * @param {string} [options.notification_url] URL to send an HTTP post request (webhook) to when the\n *   archive creation is completed.\n * @param {string|Array<string>} [options.target_tags=] Allows assigning one or more tags to the generated archive file\n *   (for later housekeeping via the admin API).\n * @param {string} [options.keep_derived=false] keep the derived images used for generating the archive\n * @return {String} archive url\n */\n\n\nfunction download_archive_url() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var params = exports.archive_params(merge(options, {\n    mode: \"download\"\n  }));\n  return api_download_url(\"generate_archive\", params, options);\n}\n/**\n * Returns a URL that when invokes creates an zip archive and returns it.\n * @see download_archive_url\n */\n\n\nfunction download_zip_url() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return exports.download_archive_url(merge(options, {\n    target_format: \"zip\"\n  }));\n}\n/**\n * Creates and returns a URL that when invoked creates an archive of a folder\n * @param {string} folder_path Full path (from the root) of the folder to download\n * @param {object} options Additional options\n * @returns {string} Url for downloading an archive of a folder\n */\n\n\nfunction download_folder(folder_path) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  options.resource_type = options.resource_type || \"all\";\n  options.prefixes = folder_path;\n  var cloudinary_params = exports.sign_request(exports.archive_params(merge(options, {\n    mode: \"download\"\n  })), options);\n  return exports.api_url(\"generate_archive\", options) + \"?\" + hashToQuery(cloudinary_params);\n}\n/**\n * Render the key/value pair as an HTML tag attribute\n * @private\n * @param {string} key\n * @param {string|boolean|number} [value]\n * @return {string} A string representing the HTML attribute\n */\n\n\nfunction join_pair(key, value) {\n  if (!value) {\n    return void 0;\n  }\n\n  return value === true ? key : key + \"='\" + value + \"'\";\n}\n/**\n * If the given value is a string, replaces single or double quotes with character entities\n * @private\n * @param {*} value The string to encode quotes in\n * @return {*} Encoded string or original value if not a string\n */\n\n\nfunction escapeQuotes(value) {\n  return isString(value) ? value.replace(/\\\"/g, '&#34;').replace(/\\'/g, '&#39;') : value;\n}\n/**\n *\n * @param attrs\n * @return {*}\n */\n\n\nexports.html_attrs = function html_attrs(attrs) {\n  return filter(map(attrs, function (value, key) {\n    return join_pair(key, escapeQuotes(value));\n  })).sort().join(\" \");\n};\n\nvar CLOUDINARY_JS_CONFIG_PARAMS = ['api_key', 'cloud_name', 'private_cdn', 'secure_distribution', 'cdn_subdomain'];\n\nfunction cloudinary_js_config() {\n  var params = pickOnlyExistingValues.apply(undefined, [config()].concat(CLOUDINARY_JS_CONFIG_PARAMS));\n  return `<script type='text/javascript'>\\n$.cloudinary.config(${JSON.stringify(params)});\\n</script>`;\n}\n\nfunction v1_result_adapter(callback) {\n  if (callback == null) {\n    return undefined;\n  }\n\n  return function (result) {\n    if (result.error != null) {\n      return callback(result.error);\n    }\n\n    return callback(void 0, result);\n  };\n}\n\nfunction v1_adapter(name, num_pass_args, v1) {\n  return function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var pass_args = take(args, num_pass_args);\n    var options = args[num_pass_args];\n    var callback = args[num_pass_args + 1];\n\n    if (callback == null && isFunction(options)) {\n      callback = options;\n      options = {};\n    }\n\n    callback = v1_result_adapter(callback);\n    args = pass_args.concat([callback, options]);\n    return v1[name].apply(this, args);\n  };\n}\n\nfunction v1_adapters(exports, v1, mapping) {\n  return Object.keys(mapping).map(function (name) {\n    var num_pass_args = mapping[name];\n    exports[name] = v1_adapter(name, num_pass_args, v1);\n    return exports[name];\n  });\n}\n\nfunction as_safe_bool(value) {\n  if (value == null) {\n    return void 0;\n  }\n\n  if (value === true || value === 'true' || value === '1') {\n    value = 1;\n  }\n\n  if (value === false || value === 'false' || value === '0') {\n    value = 0;\n  }\n\n  return value;\n}\n\nvar NUMBER_PATTERN = \"([0-9]*)\\\\.([0-9]+)|([0-9]+)\";\nvar OFFSET_ANY_PATTERN = `(${NUMBER_PATTERN})([%pP])?`;\nvar RANGE_VALUE_RE = RegExp(`^${OFFSET_ANY_PATTERN}$`);\nvar OFFSET_ANY_PATTERN_RE = RegExp(`(${OFFSET_ANY_PATTERN})\\\\.\\\\.(${OFFSET_ANY_PATTERN})`); // Split a range into the start and end values\n\nfunction split_range(range) {\n  // :nodoc:\n  switch (range.constructor) {\n    case String:\n      if (!OFFSET_ANY_PATTERN_RE.test(range)) {\n        return range;\n      }\n\n      return range.split(\"..\");\n\n    case Array:\n      return [first(range), last(range)];\n\n    default:\n      return [null, null];\n  }\n}\n\nfunction norm_range_value(value) {\n  // :nodoc:\n  var offset = String(value).match(RANGE_VALUE_RE);\n\n  if (offset) {\n    var modifier = offset[5] ? 'p' : '';\n    value = `${offset[1] || offset[4]}${modifier}`;\n  }\n\n  return value;\n}\n/**\n * A video codec parameter can be either a String or a Hash.\n * @param {Object} param <code>vc_<codec>[ : <profile> : [<level>]]</code>\n *                       or <code>{ codec: 'h264', profile: 'basic', level: '3.1' }</code>\n * @return {String} <code><codec> : <profile> : [<level>]]</code> if a Hash was provided\n *                   or the param if a String was provided.\n *                   Returns null if param is not a Hash or String\n */\n\n\nfunction process_video_params(param) {\n  switch (param.constructor) {\n    case Object:\n      {\n        var video = \"\";\n\n        if ('codec' in param) {\n          video = param.codec;\n\n          if ('profile' in param) {\n            video += \":\" + param.profile;\n\n            if ('level' in param) {\n              video += \":\" + param.level;\n            }\n          }\n        }\n\n        return video;\n      }\n\n    case String:\n      return param;\n\n    default:\n      return null;\n  }\n}\n/**\n * Returns a Hash of parameters used to create an archive\n * @private\n * @param {object} options\n * @return {object} Archive API parameters\n */\n\n\nfunction archive_params() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return {\n    allow_missing: exports.as_safe_bool(options.allow_missing),\n    async: exports.as_safe_bool(options.async),\n    expires_at: options.expires_at,\n    flatten_folders: exports.as_safe_bool(options.flatten_folders),\n    flatten_transformations: exports.as_safe_bool(options.flatten_transformations),\n    keep_derived: exports.as_safe_bool(options.keep_derived),\n    mode: options.mode,\n    notification_url: options.notification_url,\n    prefixes: options.prefixes && toArray(options.prefixes),\n    fully_qualified_public_ids: options.fully_qualified_public_ids && toArray(options.fully_qualified_public_ids),\n    public_ids: options.public_ids && toArray(options.public_ids),\n    skip_transformation_name: exports.as_safe_bool(options.skip_transformation_name),\n    tags: options.tags && toArray(options.tags),\n    target_format: options.target_format,\n    target_public_id: options.target_public_id,\n    target_tags: options.target_tags && toArray(options.target_tags),\n    timestamp: options.timestamp || exports.timestamp(),\n    transformations: utils.build_eager(options.transformations),\n    type: options.type,\n    use_original_filename: exports.as_safe_bool(options.use_original_filename)\n  };\n}\n\nexports.create_source_tag = function create_source_tag(src, source_type) {\n  var codecs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var video_type = source_type === 'ogv' ? 'ogg' : source_type;\n  var mime_type = `video/${video_type}`;\n\n  if (!isEmpty(codecs)) {\n    var codecs_str = isArray(codecs) ? codecs.join(', ') : codecs;\n    mime_type += `; codecs=${codecs_str}`;\n  }\n\n  return `<source ${utils.html_attrs({\n    src,\n    type: mime_type\n  })}>`;\n};\n\nfunction build_explicit_api_params(public_id) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return [exports.build_upload_params(extend({}, {\n    public_id\n  }, options))];\n}\n\nfunction generate_responsive_breakpoints_string(breakpoints) {\n  if (breakpoints == null) {\n    return null;\n  }\n\n  breakpoints = clone(breakpoints);\n\n  if (!isArray(breakpoints)) {\n    breakpoints = [breakpoints];\n  }\n\n  for (var j = 0; j < breakpoints.length; j++) {\n    var breakpoint_settings = breakpoints[j];\n\n    if (breakpoint_settings != null) {\n      if (breakpoint_settings.transformation) {\n        breakpoint_settings.transformation = utils.generate_transformation_string(clone(breakpoint_settings.transformation));\n      }\n    }\n  }\n\n  return JSON.stringify(breakpoints);\n}\n\nfunction build_streaming_profiles_param() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var params = pickOnlyExistingValues(options, \"display_name\", \"representations\");\n\n  if (isArray(params.representations)) {\n    params.representations = JSON.stringify(params.representations.map(function (r) {\n      return {\n        transformation: utils.generate_transformation_string(r.transformation)\n      };\n    }));\n  }\n\n  return params;\n}\n\nfunction hashToParameters(hash) {\n  return entries(hash).reduce(function (parameters, _ref30) {\n    var _ref31 = _slicedToArray(_ref30, 2),\n        key = _ref31[0],\n        value = _ref31[1];\n\n    if (isArray(value)) {\n      key = key.endsWith('[]') ? key : key + '[]';\n      var items = value.map(function (v) {\n        return [key, v];\n      });\n      parameters = parameters.concat(items);\n    } else {\n      parameters.push([key, value]);\n    }\n\n    return parameters;\n  }, []);\n}\n/**\n * Convert a hash of values to a URI query string.\n * Array values are spread as individual parameters.\n * @param {object} hash Key-value parameters\n * @return {string} A URI query string.\n */\n\n\nfunction hashToQuery(hash) {\n  return hashToParameters(hash).map(function (_ref32) {\n    var _ref33 = _slicedToArray(_ref32, 2),\n        key = _ref33[0],\n        value = _ref33[1];\n\n    return `${querystring.escape(key)}=${querystring.escape(value)}`;\n  }).join('&');\n}\n/**\n * Verify that the parameter `value` is defined and it's string value is not zero.\n * <br>This function should not be confused with `isEmpty()`.\n * @private\n * @param {string|number} value The value to check.\n * @return {boolean} True if the value is defined and not empty.\n */\n\n\nfunction present(value) {\n  return value != null && (\"\" + value).length > 0;\n}\n/**\n * Returns a new object with key values from source based on the keys.\n * `null` or `undefined` values are not copied.\n * @private\n * @param {object} source The object to pick values from.\n * @param {...string} keys One or more keys to copy from source.\n * @return {object} A new object with the required keys and values.\n */\n\n\nfunction pickOnlyExistingValues(source) {\n  var result = {};\n\n  if (source) {\n    for (var _len2 = arguments.length, keys = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      keys[_key2 - 1] = arguments[_key2];\n    }\n\n    keys.forEach(function (key) {\n      if (source[key] != null) {\n        result[key] = source[key];\n      }\n    });\n  }\n\n  return result;\n}\n/**\n * Returns a JSON array as String.\n * Yields the array before it is converted to JSON format\n * @private\n * @param {object|String|Array<object>} data\n * @param {function(*):*} [modifier] called with the array before the array is stringified\n * @return {String|null} a JSON array string or `null` if data is `null`\n */\n\n\nfunction jsonArrayParam(data, modifier) {\n  if (!data) {\n    return null;\n  }\n\n  if (isString(data)) {\n    data = JSON.parse(data);\n  }\n\n  if (!isArray(data)) {\n    data = [data];\n  }\n\n  if (isFunction(modifier)) {\n    data = modifier(data);\n  }\n\n  return JSON.stringify(data);\n}\n\nfunction optionalRequire(moduleName) {\n  var module = void 0;\n\n  try {\n    module = require(moduleName);\n    return module;\n  } catch (e) {\n    if (e.code === \"MODULE_NOT_FOUND\") {\n      return null;\n    }\n\n    throw e;\n  }\n}\n/**\n * Empty function - do nothing\n *\n */\n\n\nexports.NOP = function () {};\n\nexports.generate_auth_token = generate_auth_token;\nexports.getUserAgent = getUserAgent;\nexports.build_upload_params = build_upload_params;\nexports.build_multi_and_sprite_params = build_multi_and_sprite_params;\nexports.api_download_url = api_download_url;\n\nexports.timestamp = function () {\n  return Math.floor(new Date().getTime() / 1000);\n};\n\nexports.option_consume = consumeOption; // for backwards compatibility\n\nexports.build_array = toArray; // for backwards compatibility\n\nexports.encode_double_array = encodeDoubleArray;\nexports.encode_key_value = encode_key_value;\nexports.encode_context = encode_context;\nexports.build_eager = build_eager;\nexports.build_custom_headers = build_custom_headers;\nexports.generate_transformation_string = generate_transformation_string;\nexports.updateable_resource_params = updateable_resource_params;\nexports.extractUrlParams = extractUrlParams;\nexports.extractTransformationParams = extractTransformationParams;\nexports.patchFetchFormat = patchFetchFormat;\nexports.url = url;\nexports.video_url = video_url;\nexports.video_thumbnail_url = video_thumbnail_url;\nexports.api_url = api_url;\nexports.random_public_id = random_public_id;\nexports.signed_preloaded_image = signed_preloaded_image;\nexports.api_sign_request = api_sign_request;\nexports.clear_blank = clear_blank;\nexports.merge = merge;\nexports.sign_request = sign_request;\nexports.webhook_signature = webhook_signature;\nexports.verifyNotificationSignature = verifyNotificationSignature;\nexports.process_request_params = process_request_params;\nexports.private_download_url = private_download_url;\nexports.zip_download_url = zip_download_url;\nexports.download_archive_url = download_archive_url;\nexports.download_zip_url = download_zip_url;\nexports.cloudinary_js_config = cloudinary_js_config;\nexports.v1_adapters = v1_adapters;\nexports.as_safe_bool = as_safe_bool;\nexports.archive_params = archive_params;\nexports.build_explicit_api_params = build_explicit_api_params;\nexports.generate_responsive_breakpoints_string = generate_responsive_breakpoints_string;\nexports.build_streaming_profiles_param = build_streaming_profiles_param;\nexports.hashToParameters = hashToParameters;\nexports.present = present;\nexports.only = pickOnlyExistingValues; // for backwards compatibility\n\nexports.pickOnlyExistingValues = pickOnlyExistingValues;\nexports.jsonArrayParam = jsonArrayParam;\nexports.download_folder = download_folder;\nexports.base_api_url = base_api_url;\nexports.download_backedup_asset = download_backedup_asset;\nexports.optionalRequire = optionalRequire; // was exported before, so kept for backwards compatibility\n\nexports.DEFAULT_POSTER_OPTIONS = DEFAULT_POSTER_OPTIONS;\nexports.DEFAULT_VIDEO_SOURCE_TYPES = DEFAULT_VIDEO_SOURCE_TYPES;\nObject.assign(module.exports, {\n  normalize_expression,\n  at,\n  clone,\n  extend,\n  filter,\n  includes,\n  isArray,\n  isEmpty,\n  isNumber,\n  isObject,\n  isRemoteUrl,\n  isString,\n  isUndefined,\n  keys: function keys(source) {\n    return Object.keys(source);\n  },\n  ensurePresenceOf\n});","map":{"version":3,"sources":["D:/Project 2/frontend/node_modules/cloudinary/lib-es5/utils/index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_slicedToArray","sliceIterator","arr","_arr","_n","_d","_e","undefined","_i","Symbol","iterator","_s","next","done","push","value","err","Array","isArray","TypeError","_toConsumableArray","arr2","from","crypto","require","querystring","urlParse","parse","compact","first","isFunction","isPlainObject","last","map","take","at","clone","extend","filter","includes","isEmpty","isNumber","isObject","isString","isUndefined","smart_escape","consumeOption","toArray","_require","base64EncodeURL","encodeDoubleArray","config","generate_token","utf8_encode","crc32","ensurePresenceOf","ensureOption","defaults","entries","isRemoteUrl","getSDKVersions","_require$Util","Util","getAnalyticsOptions","getSDKAnalyticsSignature","exports","module","utils","VERSION","version","error","generate_auth_token","options","token_options","auth_token","CF_SHARED_CDN","OLD_AKAMAI_SHARED_CDN","AKAMAI_SHARED_CDN","SHARED_CDN","USER_AGENT","process","versions","node","userPlatform","getUserAgent","_require2","DEFAULT_RESPONSIVE_WIDTH_TRANSFORMATION","DEFAULT_POSTER_OPTIONS","DEFAULT_VIDEO_SOURCE_TYPES","CONDITIONAL_OPERATORS","PREDEFINED_VARS","LAYER_KEYWORD_PARAMS","TRANSFORMATION_PARAMS","SIMPLE_PARAMS","UPLOAD_PREFIX","SUPPORTED_SIGNATURE_ALGORITHMS","DEFAULT_SIGNATURE_ALGORITHM","textStyle","layer","keywords","style","text_style","keys","forEach","attr","default_value","attr_value","split","pop","font_size","font_family","unshift","join","normalize_expression","expression","match","operators","operatorsPattern","operatorsReplaceRE","RegExp","replace","predefinedVarsPattern","v","userVariablePattern","variablesReplaceRE","process_custom_function","customFunction","function_type","encodedSource","process_custom_pre_function","customPreFunction","result","process_if","ifValue","process_layer","resource_type","url","public_id","format","type","text","components","noPublicId","noStyle","re","start","textSource","decodeURIComponent","res","exec","slice","index","encodeURIComponent","test","substr","process_radius","radius","Error","findIndex","x","build_multi_and_sprite_params","tagOrOptions","tag","urls","transformation","generate_transformation_string","fetch_format","timestamp","async","notification_url","build_upload_params","params","access_mode","allowed_formats","asset_folder","as_safe_bool","backup","callback","cinemagraph_analysis","colors","display_name","discard_original_filename","eager","build_eager","eager_async","eager_notification_url","eval","exif","faces","folder","filename_override","image_metadata","invalidate","moderation","overwrite","phash","proxy","public_id_prefix","quality_analysis","responsive_breakpoints","generate_responsive_breakpoints_string","return_delete_token","unique_filename","upload_preset","use_filename","use_filename_as_display_name","quality_override","accessibility_analysis","updateable_resource_params","encode_key_value","arg","_ref","_ref2","k","escapeMetadataValue","toString","encode_context","metadataObj","_ref3","_ref4","values","innerVal","transformations","transformationString","build_custom_headers","headers","_ref5","_ref6","t","present","responsive_width","width","height","size","_size$split","_size$split2","_ref7","has_layer","overlay","underlay","crop","angle","no_html_sizes","indexOf","parseFloat","background","color","base_transformations","named_transformation","some","tr","effect","_ref8","_ref9","border","flags","dpr","offset","_split_range","split_range","_split_range2","start_offset","end_offset","custom_function","custom_pre_function","fps","a","ar","b","bo","c","co","e","fl","fn","h","ki","l","o","q","r","u","w","y","z","_ref10","_ref11","name","short","vc","process_video_params","norm_range_value","variablesParam","variables","_ref12","_ref13","startsWith","_ref14","_ref15","sort","concat","_ref16","_ref17","_ref18","_ref19","_ref20","_ref21","raw_transformation","responsive_width_transformation","String","responsive","hidpi","access_control","jsonArrayParam","auto_tagging","background_removal","categorization","context","metadata","custom_coordinates","detection","face_coordinates","ocr","raw_convert","similarity_search","tags","URL_KEYS","extractUrlParams","pickOnlyExistingValues","apply","extractTransformationParams","patchFetchFormat","signature","source_to_sign","force_version","long_url_signature","cloud_name","private_cdn","secure_distribution","secure","ssl_detected","cdn_subdomain","secure_cdn_subdomain","cname","shorten","sign_url","api_secret","url_suffix","use_root_path","signature_algorithm","merge","preloaded","original_source","_finalize_resource_ty","finalize_resource_type","_finalize_resource_ty2","_finalize_source","finalize_source","_finalize_source2","to_sign","part","hash","computeHash","substring","prefix","unsigned_url_prefix","resultUrl","path","token","urlAnalytics","sdkVersions","analyticsOptions","sdkAnalyticsSignature","appender","video_url","video_thumbnail_url","shared_domain","subdomain","cdn_part","subdomain_part","host","base_api_url","cloudinary","encode_path","unencoded_path","encoded_path","api_url","action","random_public_id","randomBytes","signed_preloaded_image","api_sign_request","params_to_sign","_ref22","_ref23","_ref24","_ref25","input","encoding","createHash","update","digest","clear_blank","filtered_hash","_ref26","_ref27","_ref28","_ref29","hash1","hash2","sign_request","apiKey","apiSecret","api_key","webhook_signature","data","verifyNotificationSignature","body","valid_for","Math","round","Date","now","payload_hash","process_request_params","unsigned","oauth_token","private_download_url","attachment","expires_at","stringify","zip_download_url","hashToQuery","download_backedup_asset","asset_id","version_id","api_download_url","download_params","mode","cloudinary_params","download_archive_url","archive_params","download_zip_url","target_format","download_folder","folder_path","prefixes","join_pair","escapeQuotes","html_attrs","attrs","CLOUDINARY_JS_CONFIG_PARAMS","cloudinary_js_config","JSON","v1_result_adapter","v1_adapter","num_pass_args","v1","_len","args","_key","pass_args","v1_adapters","mapping","NUMBER_PATTERN","OFFSET_ANY_PATTERN","RANGE_VALUE_RE","OFFSET_ANY_PATTERN_RE","range","constructor","modifier","param","video","codec","profile","level","allow_missing","flatten_folders","flatten_transformations","keep_derived","fully_qualified_public_ids","public_ids","skip_transformation_name","target_public_id","target_tags","use_original_filename","create_source_tag","src","source_type","codecs","video_type","mime_type","codecs_str","build_explicit_api_params","breakpoints","j","breakpoint_settings","build_streaming_profiles_param","representations","hashToParameters","reduce","parameters","_ref30","_ref31","endsWith","items","_ref32","_ref33","escape","_len2","_key2","optionalRequire","moduleName","code","NOP","floor","getTime","option_consume","build_array","encode_double_array","only"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n/**\n * Utilities\n * @module utils\n * @borrows module:auth_token as generate_auth_token\n */\n\nvar crypto = require(\"crypto\");\nvar querystring = require(\"querystring\");\nvar urlParse = require(\"url\").parse;\n\n// Functions used internally\nvar compact = require(\"lodash/compact\");\nvar first = require(\"lodash/first\");\nvar isFunction = require(\"lodash/isFunction\");\nvar isPlainObject = require(\"lodash/isPlainObject\");\nvar last = require(\"lodash/last\");\nvar map = require(\"lodash/map\");\nvar take = require(\"lodash/take\");\nvar at = require(\"lodash/at\");\n\n// Exposed by the module\nvar clone = require(\"lodash/clone\");\nvar extend = require(\"lodash/extend\");\nvar filter = require(\"lodash/filter\");\nvar includes = require(\"lodash/includes\");\nvar isArray = require(\"lodash/isArray\");\nvar isEmpty = require(\"lodash/isEmpty\");\nvar isNumber = require(\"lodash/isNumber\");\nvar isObject = require(\"lodash/isObject\");\nvar isString = require(\"lodash/isString\");\nvar isUndefined = require(\"lodash/isUndefined\");\n\nvar smart_escape = require(\"./encoding/smart_escape\");\nvar consumeOption = require('./parsing/consumeOption');\nvar toArray = require('./parsing/toArray');\n\nvar _require = require('./encoding/base64EncodeURL'),\n    base64EncodeURL = _require.base64EncodeURL;\n\nvar encodeDoubleArray = require('./encoding/encodeDoubleArray');\n\nvar config = require(\"../config\");\nvar generate_token = require(\"../auth_token\");\nvar utf8_encode = require('./utf8_encode');\nvar crc32 = require('./crc32');\nvar ensurePresenceOf = require('./ensurePresenceOf');\nvar ensureOption = require('./ensureOption').defaults(config());\nvar entries = require('./entries');\nvar isRemoteUrl = require('./isRemoteUrl');\nvar getSDKVersions = require('./encoding/sdkAnalytics/getSDKVersions');\n\nvar _require$Util = require('cloudinary-core').Util,\n    getAnalyticsOptions = _require$Util.getAnalyticsOptions,\n    getSDKAnalyticsSignature = _require$Util.getSDKAnalyticsSignature;\n\nexports = module.exports;\nvar utils = module.exports;\n\ntry {\n  // eslint-disable-next-line global-require\n  utils.VERSION = require('../../package.json').version;\n} catch (error) {\n  utils.VERSION = '';\n}\n\nfunction generate_auth_token(options) {\n  var token_options = Object.assign({}, config().auth_token, options);\n  return generate_token(token_options);\n}\n\nexports.CF_SHARED_CDN = \"d3jpl91pxevbkh.cloudfront.net\";\nexports.OLD_AKAMAI_SHARED_CDN = \"cloudinary-a.akamaihd.net\";\nexports.AKAMAI_SHARED_CDN = \"res.cloudinary.com\";\nexports.SHARED_CDN = exports.AKAMAI_SHARED_CDN;\nexports.USER_AGENT = `CloudinaryNodeJS/${exports.VERSION} (Node ${process.versions.node})`;\n\n// Add platform information to the USER_AGENT header\n// This is intended for platform information and not individual applications!\nexports.userPlatform = \"\";\n\nfunction getUserAgent() {\n  return isEmpty(utils.userPlatform) ? `${utils.USER_AGENT}` : `${utils.userPlatform} ${utils.USER_AGENT}`;\n}\n\nvar _require2 = require('./consts'),\n    DEFAULT_RESPONSIVE_WIDTH_TRANSFORMATION = _require2.DEFAULT_RESPONSIVE_WIDTH_TRANSFORMATION,\n    DEFAULT_POSTER_OPTIONS = _require2.DEFAULT_POSTER_OPTIONS,\n    DEFAULT_VIDEO_SOURCE_TYPES = _require2.DEFAULT_VIDEO_SOURCE_TYPES,\n    CONDITIONAL_OPERATORS = _require2.CONDITIONAL_OPERATORS,\n    PREDEFINED_VARS = _require2.PREDEFINED_VARS,\n    LAYER_KEYWORD_PARAMS = _require2.LAYER_KEYWORD_PARAMS,\n    TRANSFORMATION_PARAMS = _require2.TRANSFORMATION_PARAMS,\n    SIMPLE_PARAMS = _require2.SIMPLE_PARAMS,\n    UPLOAD_PREFIX = _require2.UPLOAD_PREFIX,\n    SUPPORTED_SIGNATURE_ALGORITHMS = _require2.SUPPORTED_SIGNATURE_ALGORITHMS,\n    DEFAULT_SIGNATURE_ALGORITHM = _require2.DEFAULT_SIGNATURE_ALGORITHM;\n\nfunction textStyle(layer) {\n  var keywords = [];\n  var style = \"\";\n\n  if (!isEmpty(layer.text_style)) {\n    return layer.text_style;\n  }\n  Object.keys(LAYER_KEYWORD_PARAMS).forEach(function (attr) {\n    var default_value = LAYER_KEYWORD_PARAMS[attr];\n    var attr_value = layer[attr] || default_value;\n    if (attr_value !== default_value) {\n      keywords.push(attr_value);\n    }\n  });\n\n  Object.keys(layer).forEach(function (attr) {\n    if (attr === \"letter_spacing\" || attr === \"line_spacing\") {\n      keywords.push(`${attr}_${layer[attr]}`);\n    }\n    if (attr === \"font_hinting\") {\n      keywords.push(`${attr.split(\"_\").pop()}_${layer[attr]}`);\n    }\n    if (attr === \"font_antialiasing\") {\n      keywords.push(`antialias_${layer[attr]}`);\n    }\n  });\n\n  if (layer.hasOwnProperty(\"font_size\" || \"font_family\") || !isEmpty(keywords)) {\n    if (!layer.font_size) throw `Must supply font_size for text in overlay/underlay`;\n    if (!layer.font_family) throw `Must supply font_family for text in overlay/underlay`;\n    keywords.unshift(layer.font_size);\n    keywords.unshift(layer.font_family);\n    style = compact(keywords).join(\"_\");\n  }\n  return style;\n}\n\n/**\n * Normalize an expression string, replace \"nice names\" with their coded values and spaces with \"_\"\n * e.g. `width > 0` => `w_lt_0`\n *\n * @param {String} expression An expression to be normalized\n * @return {Object|String} A normalized String of the input value if possible otherwise the value itself\n */\nfunction normalize_expression(expression) {\n  if (!isString(expression) || expression.length === 0 || expression.match(/^!.+!$/)) {\n    return expression;\n  }\n\n  var operators = \"\\\\|\\\\||>=|<=|&&|!=|>|=|<|/|-|\\\\^|\\\\+|\\\\*\";\n  var operatorsPattern = \"((\" + operators + \")(?=[ _]))\";\n  var operatorsReplaceRE = new RegExp(operatorsPattern, \"g\");\n  expression = expression.replace(operatorsReplaceRE, function (match) {\n    return CONDITIONAL_OPERATORS[match];\n  });\n\n  // Duplicate PREDEFINED_VARS to also include :{var_name} as well as {var_name}\n  // Example:\n  // -- PREDEFINED_VARS = ['foo']\n  // -- predefinedVarsPattern = ':foo|foo'\n  // It is done like this because node 6 does not support regex lookbehind\n  var predefinedVarsPattern = \"(\" + Object.keys(PREDEFINED_VARS).map(function (v) {\n    return `:${v}|${v}`;\n  }).join(\"|\") + \")\";\n  var userVariablePattern = '(\\\\$_*[^_ ]+)';\n  var variablesReplaceRE = new RegExp(`${userVariablePattern}|${predefinedVarsPattern}`, \"g\");\n  expression = expression.replace(variablesReplaceRE, function (match) {\n    return PREDEFINED_VARS[match] || match;\n  });\n\n  return expression.replace(/[ _]+/g, '_');\n}\n\n/**\n * Parse custom_function options\n * @private\n * @param {object|*} customFunction a custom function object containing function_type and source values\n * @return {string|*} custom_function transformation string\n */\nfunction process_custom_function(customFunction) {\n  if (!isObject(customFunction)) {\n    return customFunction;\n  }\n  if (customFunction.function_type === \"remote\") {\n    var encodedSource = base64EncodeURL(customFunction.source);\n\n    return [customFunction.function_type, encodedSource].join(\":\");\n  }\n  return [customFunction.function_type, customFunction.source].join(\":\");\n}\n\n/**\n * Parse custom_pre_function options\n * @private\n * @param {object|*} customPreFunction a custom function object containing function_type and source values\n * @return {string|*} custom_pre_function transformation string\n */\nfunction process_custom_pre_function(customPreFunction) {\n  var result = process_custom_function(customPreFunction);\n  return utils.isString(result) ? `pre:${result}` : null;\n}\n\n/**\n * Parse \"if\" parameter\n * Translates the condition if provided.\n * @private\n * @return {string} \"if_\" + ifValue\n */\nfunction process_if(ifValue) {\n  return ifValue ? \"if_\" + normalize_expression(ifValue) : ifValue;\n}\n\n/**\n * Parse layer options\n * @private\n * @param {object|*} layer The layer to parse.\n * @return {string} layer transformation string\n */\nfunction process_layer(layer) {\n  var result = '';\n  if (isPlainObject(layer)) {\n    if (layer.resource_type === \"fetch\" || layer.url != null) {\n      result = `fetch:${base64EncodeURL(layer.url)}`;\n    } else {\n      var public_id = layer.public_id;\n      var format = layer.format;\n      var resource_type = layer.resource_type || \"image\";\n      var type = layer.type || \"upload\";\n      var text = layer.text;\n      var style = null;\n      var components = [];\n      var noPublicId = isEmpty(public_id);\n      if (!noPublicId) {\n        public_id = public_id.replace(new RegExp(\"/\", 'g'), \":\");\n        if (format != null) {\n          public_id = `${public_id}.${format}`;\n        }\n      }\n      if (isEmpty(text) && resource_type !== \"text\") {\n        if (noPublicId) {\n          throw \"Must supply public_id for resource_type layer_parameter\";\n        }\n        if (resource_type === \"subtitles\") {\n          style = textStyle(layer);\n        }\n      } else {\n        resource_type = \"text\";\n        type = null;\n        // type is ignored for text layers\n        style = textStyle(layer);\n        if (!isEmpty(text)) {\n          var noStyle = isEmpty(style);\n          if (!(noPublicId || noStyle) || noPublicId && noStyle) {\n            throw \"Must supply either style parameters or a public_id when providing text parameter in a text overlay/underlay\";\n          }\n          var re = /\\$\\([a-zA-Z]\\w*\\)/g;\n          var start = 0;\n          var textSource = smart_escape(decodeURIComponent(text), /[,\\/]/g);\n          text = \"\";\n          for (var res = re.exec(textSource); res; res = re.exec(textSource)) {\n            text += smart_escape(textSource.slice(start, res.index));\n            text += res[0];\n            start = res.index + res[0].length;\n          }\n          text += encodeURIComponent(textSource.slice(start));\n        }\n      }\n      if (resource_type !== \"image\") {\n        components.push(resource_type);\n      }\n      if (type !== \"upload\") {\n        components.push(type);\n      }\n      components.push(style);\n      components.push(public_id);\n      components.push(text);\n      result = compact(components).join(\":\");\n    }\n  } else if (/^fetch:.+/.test(layer)) {\n    result = `fetch:${base64EncodeURL(layer.substr(6))}`;\n  } else {\n    result = layer;\n  }\n  return result;\n}\n\n/**\n * Parse radius options\n * @private\n * @param {Array<string|number>|string|number} radius The radius to parse\n * @return {string} radius transformation string\n */\nfunction process_radius(radius) {\n  if (!radius) {\n    return radius;\n  }\n  if (!isArray(radius)) {\n    radius = [radius];\n  }\n  if (radius.length === 0 || radius.length > 4) {\n    throw new Error(\"Radius array should contain between 1 and 4 values\");\n  }\n  if (radius.findIndex(function (x) {\n    return x === null;\n  }) >= 0) {\n    throw new Error(\"Corner: Cannot be null\");\n  }\n  return radius.map(normalize_expression).join(':');\n}\n\nfunction build_multi_and_sprite_params(tagOrOptions, options) {\n  var tag = null;\n  if (typeof tagOrOptions === 'string') {\n    tag = tagOrOptions;\n  } else {\n    if (isEmpty(options)) {\n      options = tagOrOptions;\n    } else {\n      throw new Error('First argument must be a tag when additional options are passed');\n    }\n    tag = null;\n  }\n  if (!options && !tag) {\n    throw new Error('Either tag or urls are required');\n  }\n  if (!options) {\n    options = {};\n  }\n  var urls = options.urls;\n  var transformation = generate_transformation_string(extend({}, options, {\n    fetch_format: options.format\n  }));\n  return {\n    tag,\n    transformation,\n    urls,\n    timestamp: utils.timestamp(),\n    async: options.async,\n    notification_url: options.notification_url\n  };\n}\n\nfunction build_upload_params(options) {\n  var params = {\n    access_mode: options.access_mode,\n    allowed_formats: options.allowed_formats && toArray(options.allowed_formats).join(\",\"),\n    asset_folder: options.asset_folder,\n    async: utils.as_safe_bool(options.async),\n    backup: utils.as_safe_bool(options.backup),\n    callback: options.callback,\n    cinemagraph_analysis: utils.as_safe_bool(options.cinemagraph_analysis),\n    colors: utils.as_safe_bool(options.colors),\n    display_name: options.display_name,\n    discard_original_filename: utils.as_safe_bool(options.discard_original_filename),\n    eager: utils.build_eager(options.eager),\n    eager_async: utils.as_safe_bool(options.eager_async),\n    eager_notification_url: options.eager_notification_url,\n    eval: options.eval,\n    exif: utils.as_safe_bool(options.exif),\n    faces: utils.as_safe_bool(options.faces),\n    folder: options.folder,\n    format: options.format,\n    filename_override: options.filename_override,\n    image_metadata: utils.as_safe_bool(options.image_metadata),\n    invalidate: utils.as_safe_bool(options.invalidate),\n    moderation: options.moderation,\n    notification_url: options.notification_url,\n    overwrite: utils.as_safe_bool(options.overwrite),\n    phash: utils.as_safe_bool(options.phash),\n    proxy: options.proxy,\n    public_id: options.public_id,\n    public_id_prefix: options.public_id_prefix,\n    quality_analysis: utils.as_safe_bool(options.quality_analysis),\n    responsive_breakpoints: utils.generate_responsive_breakpoints_string(options.responsive_breakpoints),\n    return_delete_token: utils.as_safe_bool(options.return_delete_token),\n    timestamp: options.timestamp || exports.timestamp(),\n    transformation: utils.generate_transformation_string(clone(options)),\n    type: options.type,\n    unique_filename: utils.as_safe_bool(options.unique_filename),\n    upload_preset: options.upload_preset,\n    use_filename: utils.as_safe_bool(options.use_filename),\n    use_filename_as_display_name: utils.as_safe_bool(options.use_filename_as_display_name),\n    quality_override: options.quality_override,\n    accessibility_analysis: utils.as_safe_bool(options.accessibility_analysis)\n  };\n  return utils.updateable_resource_params(options, params);\n}\n\nfunction encode_key_value(arg) {\n  if (!isObject(arg)) {\n    return arg;\n  }\n  return entries(arg).map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        k = _ref2[0],\n        v = _ref2[1];\n\n    return `${k}=${v}`;\n  }).join('|');\n}\n\n/**\n * @description Escape = and | with two backslashes \\\\\n * @param {string|number} value\n * @return {string}\n */\nfunction escapeMetadataValue(value) {\n  return value.toString().replace(/([=|])/g, '\\\\$&');\n}\n\n/**\n *\n * @description Encode metadata fields based on incoming value.\n *              If array, escape as color_id=[\\\"green\\\",\\\"red\\\"]\n *              If string/number, escape as in_stock_id=50\n *\n *              Joins resulting values with a pipe:\n *              in_stock_id=50|color_id=[\\\"green\\\",\\\"red\\\"]\n *\n *              = and | and escaped by default (this can't be turned off)\n *\n * @param metadataObj\n * @return {string}\n */\nfunction encode_context(metadataObj) {\n  if (!isObject(metadataObj)) {\n    return metadataObj;\n  }\n\n  return entries(metadataObj).map(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n        key = _ref4[0],\n        value = _ref4[1];\n\n    // if string, simply parse the value and move on\n    if (isString(value)) {\n      return `${key}=${escapeMetadataValue(value)}`;\n\n      // If array, parse each item individually\n    } else if (isArray(value)) {\n      var values = value.map(function (innerVal) {\n        return `\\\"${escapeMetadataValue(innerVal)}\\\"`;\n      }).join(',');\n      return `${key}=[${values}]`;\n      // if unknown, return the value as string\n    } else {\n      return value.toString();\n    }\n  }).join('|');\n}\n\nfunction build_eager(transformations) {\n  return toArray(transformations).map(function (transformation) {\n    var transformationString = utils.generate_transformation_string(clone(transformation));\n    var format = transformation.format;\n    return format == null ? transformationString : `${transformationString}/${format}`;\n  }).join('|');\n}\n/**\n * Build the custom headers for the request\n * @private\n * @param headers\n * @return {Array<string>|object|string} An object of name and value,\n *         an array of header strings, or a string of headers\n */\nfunction build_custom_headers(headers) {\n  switch (true) {\n    case headers == null:\n      return void 0;\n    case isArray(headers):\n      return headers.join(\"\\n\");\n    case isObject(headers):\n      return entries(headers).map(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n            k = _ref6[0],\n            v = _ref6[1];\n\n        return `${k}:${v}`;\n      }).join(\"\\n\");\n    default:\n      return headers;\n  }\n}\n\nfunction generate_transformation_string(options) {\n  if (utils.isString(options)) {\n    return options;\n  }\n  if (isArray(options)) {\n    return options.map(function (t) {\n      return utils.generate_transformation_string(clone(t));\n    }).filter(utils.present).join('/');\n  }\n\n  var responsive_width = consumeOption(options, \"responsive_width\", config().responsive_width);\n  var width = options.width;\n  var height = options.height;\n  var size = consumeOption(options, \"size\");\n  if (size) {\n    var _size$split = size.split(\"x\");\n\n    var _size$split2 = _slicedToArray(_size$split, 2);\n\n    width = _size$split2[0];\n    height = _size$split2[1];\n    var _ref7 = [width, height];\n    options.width = _ref7[0];\n    options.height = _ref7[1];\n  }\n  var has_layer = options.overlay || options.underlay;\n  var crop = consumeOption(options, \"crop\");\n  var angle = toArray(consumeOption(options, \"angle\")).join(\".\");\n  var no_html_sizes = has_layer || utils.present(angle) || crop === \"fit\" || crop === \"limit\" || responsive_width;\n  if (width && (width.toString().indexOf(\"auto\") === 0 || no_html_sizes || parseFloat(width) < 1)) {\n    delete options.width;\n  }\n  if (height && (no_html_sizes || parseFloat(height) < 1)) {\n    delete options.height;\n  }\n  var background = consumeOption(options, \"background\");\n  background = background && background.replace(/^#/, \"rgb:\");\n  var color = consumeOption(options, \"color\");\n  color = color && color.replace(/^#/, \"rgb:\");\n  var base_transformations = toArray(consumeOption(options, \"transformation\", []));\n  var named_transformation = [];\n  if (base_transformations.some(isObject)) {\n    base_transformations = base_transformations.map(function (tr) {\n      return utils.generate_transformation_string(isObject(tr) ? clone(tr) : { transformation: tr });\n    });\n  } else {\n    named_transformation = base_transformations.join(\".\");\n    base_transformations = [];\n  }\n  var effect = consumeOption(options, \"effect\");\n  if (isArray(effect)) {\n    effect = effect.join(\":\");\n  } else if (isObject(effect)) {\n    effect = entries(effect).map(function (_ref8) {\n      var _ref9 = _slicedToArray(_ref8, 2),\n          key = _ref9[0],\n          value = _ref9[1];\n\n      return `${key}:${value}`;\n    });\n  }\n  var border = consumeOption(options, \"border\");\n  if (isObject(border)) {\n    border = `${border.width != null ? border.width : 2}px_solid_${(border.color != null ? border.color : \"black\").replace(/^#/, 'rgb:')}`;\n  } else if (/^\\d+$/.exec(border)) {\n    // fallback to html border attributes\n    options.border = border;\n    border = void 0;\n  }\n  var flags = toArray(consumeOption(options, \"flags\")).join(\".\");\n  var dpr = consumeOption(options, \"dpr\", config().dpr);\n  if (options.offset != null) {\n    var _split_range = split_range(consumeOption(options, \"offset\"));\n\n    var _split_range2 = _slicedToArray(_split_range, 2);\n\n    options.start_offset = _split_range2[0];\n    options.end_offset = _split_range2[1];\n  }\n  var overlay = process_layer(consumeOption(options, \"overlay\"));\n  var radius = process_radius(consumeOption(options, \"radius\"));\n  var underlay = process_layer(consumeOption(options, \"underlay\"));\n  var ifValue = process_if(consumeOption(options, \"if\"));\n  var custom_function = process_custom_function(consumeOption(options, \"custom_function\"));\n  var custom_pre_function = process_custom_pre_function(consumeOption(options, \"custom_pre_function\"));\n  var fps = consumeOption(options, 'fps');\n  if (isArray(fps)) {\n    fps = fps.join('-');\n  }\n  var params = {\n    a: normalize_expression(angle),\n    ar: normalize_expression(consumeOption(options, \"aspect_ratio\")),\n    b: background,\n    bo: border,\n    c: crop,\n    co: color,\n    dpr: normalize_expression(dpr),\n    e: normalize_expression(effect),\n    fl: flags,\n    fn: custom_function || custom_pre_function,\n    fps: fps,\n    h: normalize_expression(height),\n    ki: normalize_expression(consumeOption(options, \"keyframe_interval\")),\n    l: overlay,\n    o: normalize_expression(consumeOption(options, \"opacity\")),\n    q: normalize_expression(consumeOption(options, \"quality\")),\n    r: radius,\n    t: named_transformation,\n    u: underlay,\n    w: normalize_expression(width),\n    x: normalize_expression(consumeOption(options, \"x\")),\n    y: normalize_expression(consumeOption(options, \"y\")),\n    z: normalize_expression(consumeOption(options, \"zoom\"))\n  };\n\n  SIMPLE_PARAMS.forEach(function (_ref10) {\n    var _ref11 = _slicedToArray(_ref10, 2),\n        name = _ref11[0],\n        short = _ref11[1];\n\n    var value = consumeOption(options, name);\n    if (value !== undefined) {\n      params[short] = value;\n    }\n  });\n  if (params.vc != null) {\n    params.vc = process_video_params(params.vc);\n  }\n  [\"so\", \"eo\", \"du\"].forEach(function (short) {\n    if (params[short] !== undefined) {\n      params[short] = norm_range_value(params[short]);\n    }\n  });\n\n  var variablesParam = consumeOption(options, \"variables\", []);\n  var variables = entries(options).filter(function (_ref12) {\n    var _ref13 = _slicedToArray(_ref12, 2),\n        key = _ref13[0],\n        value = _ref13[1];\n\n    return key.startsWith('$');\n  }).map(function (_ref14) {\n    var _ref15 = _slicedToArray(_ref14, 2),\n        key = _ref15[0],\n        value = _ref15[1];\n\n    delete options[key];\n    return `${key}_${normalize_expression(value)}`;\n  }).sort().concat(variablesParam.map(function (_ref16) {\n    var _ref17 = _slicedToArray(_ref16, 2),\n        name = _ref17[0],\n        value = _ref17[1];\n\n    return `${name}_${normalize_expression(value)}`;\n  })).join(',');\n\n  var transformations = entries(params).filter(function (_ref18) {\n    var _ref19 = _slicedToArray(_ref18, 2),\n        key = _ref19[0],\n        value = _ref19[1];\n\n    return utils.present(value);\n  }).map(function (_ref20) {\n    var _ref21 = _slicedToArray(_ref20, 2),\n        key = _ref21[0],\n        value = _ref21[1];\n\n    return key + '_' + value;\n  }).sort().join(',');\n\n  var raw_transformation = consumeOption(options, 'raw_transformation');\n  transformations = compact([ifValue, variables, transformations, raw_transformation]).join(\",\");\n  base_transformations.push(transformations);\n  transformations = base_transformations;\n  if (responsive_width) {\n    var responsive_width_transformation = config().responsive_width_transformation || DEFAULT_RESPONSIVE_WIDTH_TRANSFORMATION;\n\n    transformations.push(utils.generate_transformation_string(clone(responsive_width_transformation)));\n  }\n  if (String(width).startsWith(\"auto\") || responsive_width) {\n    options.responsive = true;\n  }\n  if (dpr === \"auto\") {\n    options.hidpi = true;\n  }\n  return filter(transformations, utils.present).join(\"/\");\n}\n\nfunction updateable_resource_params(options) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (options.access_control != null) {\n    params.access_control = utils.jsonArrayParam(options.access_control);\n  }\n  if (options.auto_tagging != null) {\n    params.auto_tagging = options.auto_tagging;\n  }\n  if (options.background_removal != null) {\n    params.background_removal = options.background_removal;\n  }\n  if (options.categorization != null) {\n    params.categorization = options.categorization;\n  }\n  if (options.context != null) {\n    params.context = utils.encode_context(options.context);\n  }\n  if (options.metadata != null) {\n    params.metadata = utils.encode_context(options.metadata);\n  }\n  if (options.custom_coordinates != null) {\n    params.custom_coordinates = encodeDoubleArray(options.custom_coordinates);\n  }\n  if (options.detection != null) {\n    params.detection = options.detection;\n  }\n  if (options.face_coordinates != null) {\n    params.face_coordinates = encodeDoubleArray(options.face_coordinates);\n  }\n  if (options.headers != null) {\n    params.headers = utils.build_custom_headers(options.headers);\n  }\n  if (options.notification_url != null) {\n    params.notification_url = options.notification_url;\n  }\n  if (options.ocr != null) {\n    params.ocr = options.ocr;\n  }\n  if (options.raw_convert != null) {\n    params.raw_convert = options.raw_convert;\n  }\n  if (options.similarity_search != null) {\n    params.similarity_search = options.similarity_search;\n  }\n  if (options.tags != null) {\n    params.tags = toArray(options.tags).join(\",\");\n  }\n  if (options.quality_override != null) {\n    params.quality_override = options.quality_override;\n  }\n  return params;\n}\n\n/**\n * A list of keys used by the url() function.\n * @private\n */\nvar URL_KEYS = ['api_secret', 'auth_token', 'cdn_subdomain', 'cloud_name', 'cname', 'format', 'long_url_signature', 'private_cdn', 'resource_type', 'secure', 'secure_cdn_subdomain', 'secure_distribution', 'shorten', 'sign_url', 'ssl_detected', 'type', 'url_suffix', 'use_root_path', 'version'];\n\n/**\n * Create a new object with only URL parameters\n * @param {object} options The source object\n * @return {Object} An object containing only URL parameters\n */\n\nfunction extractUrlParams(options) {\n  return pickOnlyExistingValues.apply(undefined, [options].concat(URL_KEYS));\n}\n\n/**\n * Create a new object with only transformation parameters\n * @param {object} options The source object\n * @return {Object} An object containing only transformation parameters\n */\n\nfunction extractTransformationParams(options) {\n  return pickOnlyExistingValues.apply(undefined, [options].concat(_toConsumableArray(TRANSFORMATION_PARAMS)));\n}\n\n/**\n * Handle the format parameter for fetch urls\n * @private\n * @param options url and transformation options. This argument may be changed by the function!\n */\n\nfunction patchFetchFormat() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  if (options.type === \"fetch\") {\n    if (options.fetch_format == null) {\n      options.fetch_format = consumeOption(options, \"format\");\n    }\n  }\n}\n\nfunction url(public_id) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var signature = void 0,\n      source_to_sign = void 0;\n  utils.patchFetchFormat(options);\n  var type = consumeOption(options, \"type\", null);\n  var transformation = utils.generate_transformation_string(options);\n\n  var resource_type = consumeOption(options, \"resource_type\", \"image\");\n  var version = consumeOption(options, \"version\");\n  var force_version = consumeOption(options, \"force_version\", config().force_version);\n  if (force_version == null) {\n    force_version = true;\n  }\n  var long_url_signature = !!consumeOption(options, \"long_url_signature\", config().long_url_signature);\n  var format = consumeOption(options, \"format\");\n  var cloud_name = consumeOption(options, \"cloud_name\", config().cloud_name);\n  if (!cloud_name) {\n    throw \"Unknown cloud_name\";\n  }\n  var private_cdn = consumeOption(options, \"private_cdn\", config().private_cdn);\n  var secure_distribution = consumeOption(options, \"secure_distribution\", config().secure_distribution);\n  var secure = consumeOption(options, \"secure\", null);\n  var ssl_detected = consumeOption(options, \"ssl_detected\", config().ssl_detected);\n  if (secure === null) {\n    secure = ssl_detected || config().secure;\n  }\n  var cdn_subdomain = consumeOption(options, \"cdn_subdomain\", config().cdn_subdomain);\n  var secure_cdn_subdomain = consumeOption(options, \"secure_cdn_subdomain\", config().secure_cdn_subdomain);\n  var cname = consumeOption(options, \"cname\", config().cname);\n  var shorten = consumeOption(options, \"shorten\", config().shorten);\n  var sign_url = consumeOption(options, \"sign_url\", config().sign_url);\n  var api_secret = consumeOption(options, \"api_secret\", config().api_secret);\n  var url_suffix = consumeOption(options, \"url_suffix\");\n  var use_root_path = consumeOption(options, \"use_root_path\", config().use_root_path);\n  var signature_algorithm = consumeOption(options, \"signature_algorithm\", config().signature_algorithm || DEFAULT_SIGNATURE_ALGORITHM);\n  if (long_url_signature) {\n    signature_algorithm = 'sha256';\n  }\n  var auth_token = consumeOption(options, \"auth_token\");\n  if (auth_token !== false) {\n    auth_token = exports.merge(config().auth_token, auth_token);\n  }\n  var preloaded = /^(image|raw)\\/([a-z0-9_]+)\\/v(\\d+)\\/([^#]+)$/.exec(public_id);\n  if (preloaded) {\n    resource_type = preloaded[1];\n    type = preloaded[2];\n    version = preloaded[3];\n    public_id = preloaded[4];\n  }\n  var original_source = public_id;\n  if (public_id == null) {\n    return original_source;\n  }\n  public_id = public_id.toString();\n  if (type === null && public_id.match(/^https?:\\//i)) {\n    return original_source;\n  }\n\n  var _finalize_resource_ty = finalize_resource_type(resource_type, type, url_suffix, use_root_path, shorten);\n\n  var _finalize_resource_ty2 = _slicedToArray(_finalize_resource_ty, 2);\n\n  resource_type = _finalize_resource_ty2[0];\n  type = _finalize_resource_ty2[1];\n\n  var _finalize_source = finalize_source(public_id, format, url_suffix);\n\n  var _finalize_source2 = _slicedToArray(_finalize_source, 2);\n\n  public_id = _finalize_source2[0];\n  source_to_sign = _finalize_source2[1];\n\n\n  if (version == null && force_version && source_to_sign.indexOf(\"/\") >= 0 && !source_to_sign.match(/^v[0-9]+/) && !source_to_sign.match(/^https?:\\//)) {\n    version = 1;\n  }\n  if (version != null) {\n    version = `v${version}`;\n  } else {\n    version = null;\n  }\n\n  transformation = transformation.replace(/([^:])\\/\\//g, '$1/');\n  if (sign_url && isEmpty(auth_token)) {\n    var to_sign = [transformation, source_to_sign].filter(function (part) {\n      return part != null && part !== '';\n    }).join('/');\n    try {\n      for (var i = 0; to_sign !== decodeURIComponent(to_sign) && i < 10; i++) {\n        to_sign = decodeURIComponent(to_sign);\n      }\n      // eslint-disable-next-line no-empty\n    } catch (error) {}\n    var hash = computeHash(to_sign + api_secret, signature_algorithm, 'base64');\n    signature = hash.replace(/\\//g, '_').replace(/\\+/g, '-').substring(0, long_url_signature ? 32 : 8);\n    signature = `s--${signature}--`;\n  }\n  var prefix = unsigned_url_prefix(public_id, cloud_name, private_cdn, cdn_subdomain, secure_cdn_subdomain, cname, secure, secure_distribution);\n  var resultUrl = [prefix, resource_type, type, signature, transformation, version, public_id].filter(function (part) {\n    return part != null && part !== '';\n  }).join('/').replace(/ /g, '%20');\n  if (sign_url && !isEmpty(auth_token)) {\n    auth_token.url = urlParse(resultUrl).path;\n    var token = generate_token(auth_token);\n    resultUrl += `?${token}`;\n  }\n\n  var urlAnalytics = ensureOption(options, 'urlAnalytics', false);\n\n  if (urlAnalytics === true) {\n    var sdkVersions = getSDKVersions();\n    var analyticsOptions = getAnalyticsOptions(Object.assign({}, options, sdkVersions));\n\n    var sdkAnalyticsSignature = getSDKAnalyticsSignature(analyticsOptions);\n\n    // url might already have a '?' query param\n    var appender = '?';\n    if (resultUrl.indexOf('?') >= 0) {\n      appender = '&';\n    }\n    resultUrl = `${resultUrl}${appender}_s=${sdkAnalyticsSignature}`;\n  }\n\n  return resultUrl;\n}\n\nfunction video_url(public_id, options) {\n  options = extend({\n    resource_type: 'video'\n  }, options);\n  return utils.url(public_id, options);\n}\n\nfunction finalize_source(source, format, url_suffix) {\n  var source_to_sign = void 0;\n  source = source.replace(/([^:])\\/\\//g, '$1/');\n  if (source.match(/^https?:\\//i)) {\n    source = smart_escape(source);\n    source_to_sign = source;\n  } else {\n    source = encodeURIComponent(decodeURIComponent(source)).replace(/%3A/g, \":\").replace(/%2F/g, \"/\");\n    source_to_sign = source;\n    if (url_suffix) {\n      if (url_suffix.match(/[\\.\\/]/)) {\n        throw new Error('url_suffix should not include . or /');\n      }\n      source = source + '/' + url_suffix;\n    }\n    if (format != null) {\n      source = source + '.' + format;\n      source_to_sign = source_to_sign + '.' + format;\n    }\n  }\n  return [source, source_to_sign];\n}\n\nfunction video_thumbnail_url(public_id, options) {\n  options = extend({}, DEFAULT_POSTER_OPTIONS, options);\n  return utils.url(public_id, options);\n}\n\nfunction finalize_resource_type(resource_type, type, url_suffix, use_root_path, shorten) {\n  if (type == null) {\n    type = 'upload';\n  }\n  if (url_suffix != null) {\n    if (resource_type === 'image' && type === 'upload') {\n      resource_type = \"images\";\n      type = null;\n    } else if (resource_type === 'image' && type === 'private') {\n      resource_type = 'private_images';\n      type = null;\n    } else if (resource_type === 'image' && type === 'authenticated') {\n      resource_type = 'authenticated_images';\n      type = null;\n    } else if (resource_type === 'raw' && type === 'upload') {\n      resource_type = 'files';\n      type = null;\n    } else if (resource_type === 'video' && type === 'upload') {\n      resource_type = 'videos';\n      type = null;\n    } else {\n      throw new Error(\"URL Suffix only supported for image/upload, image/private, image/authenticated, video/upload and raw/upload\");\n    }\n  }\n  if (use_root_path) {\n    if (resource_type === 'image' && type === 'upload' || resource_type === 'images' && type == null) {\n      resource_type = null;\n      type = null;\n    } else {\n      throw new Error(\"Root path only supported for image/upload\");\n    }\n  }\n  if (shorten && resource_type === 'image' && type === 'upload') {\n    resource_type = 'iu';\n    type = null;\n  }\n  return [resource_type, type];\n}\n// cdn_subdomain and secure_cdn_subdomain\n// 1) Customers in shared distribution (e.g. res.cloudinary.com)\n//    if cdn_domain is true uses res-[1-5].cloudinary.com for both http and https.\n//    Setting secure_cdn_subdomain to false disables this for https.\n// 2) Customers with private cdn\n//    if cdn_domain is true uses cloudname-res-[1-5].cloudinary.com for http\n//    if secure_cdn_domain is true uses cloudname-res-[1-5].cloudinary.com for https\n//      (please contact support if you require this)\n// 3) Customers with cname\n//    if cdn_domain is true uses a[1-5].cname for http.\n//    For https, uses the same naming scheme as 1 for shared distribution and as 2 for private distribution.\n\nfunction unsigned_url_prefix(source, cloud_name, private_cdn, cdn_subdomain, secure_cdn_subdomain, cname, secure, secure_distribution) {\n  var prefix = void 0;\n  if (cloud_name.indexOf(\"/\") === 0) {\n    return '/res' + cloud_name;\n  }\n  var shared_domain = !private_cdn;\n  if (secure) {\n    if (secure_distribution == null || secure_distribution === exports.OLD_AKAMAI_SHARED_CDN) {\n      secure_distribution = private_cdn ? cloud_name + \"-res.cloudinary.com\" : exports.SHARED_CDN;\n    }\n    if (shared_domain == null) {\n      shared_domain = secure_distribution === exports.SHARED_CDN;\n    }\n    if (secure_cdn_subdomain == null && shared_domain) {\n      secure_cdn_subdomain = cdn_subdomain;\n    }\n    if (secure_cdn_subdomain) {\n      secure_distribution = secure_distribution.replace('res.cloudinary.com', 'res-' + (crc32(source) % 5 + 1 + '.cloudinary.com'));\n    }\n    prefix = 'https://' + secure_distribution;\n  } else if (cname) {\n    var subdomain = cdn_subdomain ? 'a' + (crc32(source) % 5 + 1) + '.' : '';\n    prefix = 'http://' + subdomain + cname;\n  } else {\n    var cdn_part = private_cdn ? cloud_name + '-' : '';\n    var subdomain_part = cdn_subdomain ? '-' + (crc32(source) % 5 + 1) : '';\n    var host = [cdn_part, 'res', subdomain_part, '.cloudinary.com'].join('');\n    prefix = 'http://' + host;\n  }\n  if (shared_domain) {\n    prefix += '/' + cloud_name;\n  }\n  return prefix;\n}\n\nfunction base_api_url() {\n  var path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var cloudinary = ensureOption(options, \"upload_prefix\", UPLOAD_PREFIX);\n  var cloud_name = ensureOption(options, \"cloud_name\");\n  var encode_path = function encode_path(unencoded_path) {\n    return encodeURIComponent(unencoded_path).replace(\"'\", '%27');\n  };\n  var encoded_path = Array.isArray(path) ? path.map(encode_path) : encode_path(path);\n  return [cloudinary, \"v1_1\", cloud_name].concat(encoded_path).join(\"/\");\n}\n\nfunction api_url() {\n  var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'upload';\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var resource_type = options.resource_type || \"image\";\n  return base_api_url([resource_type, action], options);\n}\n\nfunction random_public_id() {\n  return crypto.randomBytes(12).toString('base64').replace(/[^a-z0-9]/g, \"\");\n}\n\nfunction signed_preloaded_image(result) {\n  return `${result.resource_type}/upload/v${result.version}/${filter([result.public_id, result.format], utils.present).join(\".\")}#${result.signature}`;\n}\n\nfunction api_sign_request(params_to_sign, api_secret) {\n  var to_sign = entries(params_to_sign).filter(function (_ref22) {\n    var _ref23 = _slicedToArray(_ref22, 2),\n        k = _ref23[0],\n        v = _ref23[1];\n\n    return utils.present(v);\n  }).map(function (_ref24) {\n    var _ref25 = _slicedToArray(_ref24, 2),\n        k = _ref25[0],\n        v = _ref25[1];\n\n    return `${k}=${toArray(v).join(\",\")}`;\n  }).sort().join(\"&\");\n  return computeHash(to_sign + api_secret, config().signature_algorithm || DEFAULT_SIGNATURE_ALGORITHM, 'hex');\n}\n\n/**\n * Computes hash from input string using specified algorithm.\n * @private\n * @param {string} input string which to compute hash from\n * @param {string} signature_algorithm algorithm to use for computing hash\n * @param {string} encoding type of encoding\n * @return {string} computed hash value\n */\nfunction computeHash(input, signature_algorithm, encoding) {\n  if (!SUPPORTED_SIGNATURE_ALGORITHMS.includes(signature_algorithm)) {\n    throw new Error(`Signature algorithm ${signature_algorithm} is not supported. Supported algorithms: ${SUPPORTED_SIGNATURE_ALGORITHMS.join(', ')}`);\n  }\n  var hash = crypto.createHash(signature_algorithm);\n  hash.update(utf8_encode(input), 'binary');\n  return hash.digest(encoding);\n}\n\nfunction clear_blank(hash) {\n  var filtered_hash = {};\n  entries(hash).filter(function (_ref26) {\n    var _ref27 = _slicedToArray(_ref26, 2),\n        k = _ref27[0],\n        v = _ref27[1];\n\n    return utils.present(v);\n  }).forEach(function (_ref28) {\n    var _ref29 = _slicedToArray(_ref28, 2),\n        k = _ref29[0],\n        v = _ref29[1];\n\n    filtered_hash[k] = v;\n  });\n  return filtered_hash;\n}\n\nfunction merge(hash1, hash2) {\n  return _extends({}, hash1, hash2);\n}\n\nfunction sign_request(params) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var apiKey = ensureOption(options, 'api_key');\n  var apiSecret = ensureOption(options, 'api_secret');\n  params = exports.clear_blank(params);\n  params.signature = exports.api_sign_request(params, apiSecret);\n  params.api_key = apiKey;\n  return params;\n}\n\nfunction webhook_signature(data, timestamp) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  ensurePresenceOf({ data, timestamp });\n\n  var api_secret = ensureOption(options, 'api_secret');\n  var signature_algorithm = ensureOption(options, 'signature_algorithm', DEFAULT_SIGNATURE_ALGORITHM);\n  return computeHash(data + timestamp + api_secret, signature_algorithm, 'hex');\n}\n\n/**\n * Verifies the authenticity of a notification signature\n *\n * @param {string} body JSON of the request's body\n * @param {number} timestamp Unix timestamp in seconds. Can be retrieved from the X-Cld-Timestamp header\n * @param {string} signature Actual signature. Can be retrieved from the X-Cld-Signature header\n * @param {number} [valid_for=7200] The desired time in seconds for considering the request valid\n *\n * @return {boolean}\n */\nfunction verifyNotificationSignature(body, timestamp, signature) {\n  var valid_for = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 7200;\n\n  // verify that signature is valid for the given timestamp\n  if (timestamp < Math.round(Date.now() / 1000) - valid_for) {\n    return false;\n  }\n  var payload_hash = utils.webhook_signature(body, timestamp, {\n    api_secret: config().api_secret,\n    signature_algorithm: config().signature_algorithm\n  });\n  return signature === payload_hash;\n}\n\nfunction process_request_params(params, options) {\n  if (options.unsigned != null && options.unsigned) {\n    params = exports.clear_blank(params);\n    delete params.timestamp;\n  } else if (options.oauth_token || config().oauth_token) {\n    params = exports.clear_blank(params);\n  } else if (options.signature) {\n    params = exports.clear_blank(options);\n  } else {\n    params = exports.sign_request(params, options);\n  }\n\n  return params;\n}\n\nfunction private_download_url(public_id, format) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var params = exports.sign_request({\n    timestamp: options.timestamp || exports.timestamp(),\n    public_id: public_id,\n    format: format,\n    type: options.type,\n    attachment: options.attachment,\n    expires_at: options.expires_at\n  }, options);\n  return exports.api_url(\"download\", options) + \"?\" + querystring.stringify(params);\n}\n\n/**\n * Utility method that uses the deprecated ZIP download API.\n * @deprecated Replaced by {download_zip_url} that uses the more advanced and robust archive generation and download API\n */\n\nfunction zip_download_url(tag) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var params = exports.sign_request({\n    timestamp: options.timestamp || exports.timestamp(),\n    tag: tag,\n    transformation: utils.generate_transformation_string(options)\n  }, options);\n  return exports.api_url(\"download_tag.zip\", options) + \"?\" + hashToQuery(params);\n}\n\n/**\n * The returned url should allow downloading the backedup asset based on the\n * version and asset id\n * asset and version id are returned with resource(<PUBLIC_ID1>, { versions: true })\n * @param asset_id\n * @param version_id\n * @param options\n * @returns {string }\n */\nfunction download_backedup_asset(asset_id, version_id) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var params = exports.sign_request({\n    timestamp: options.timestamp || exports.timestamp(),\n    asset_id: asset_id,\n    version_id: version_id\n  }, options);\n  return exports.base_api_url(['download_backup'], options) + \"?\" + hashToQuery(params);\n}\n\n/**\n * Utility method to create a signed URL for specified resources.\n * @param action\n * @param params\n * @param options\n */\nfunction api_download_url(action, params, options) {\n  var download_params = _extends({}, params, { mode: \"download\" });\n  var cloudinary_params = exports.sign_request(download_params, options);\n  return exports.api_url(action, options) + \"?\" + hashToQuery(cloudinary_params);\n}\n\n/**\n * Returns a URL that when invokes creates an archive and returns it.\n * @param {object} options\n * @param {string} [options.resource_type=\"image\"] The resource type of files to include in the archive.\n *   Must be one of :image | :video | :raw\n * @param {string} [options.type=\"upload\"] The specific file type of resources: :upload|:private|:authenticated\n * @param {string|Array} [options.tags] list of tags to include in the archive\n * @param {string|Array<string>} [options.public_ids] list of public_ids to include in the archive\n * @param {string|Array<string>} [options.prefixes]  list of prefixes of public IDs (e.g., folders).\n * @param {string|Array<string>} [options.fully_qualified_public_ids] list of fully qualified public_ids to include\n *   in the archive.\n * @param {string|Array<string>} [options.transformations]  list of transformations.\n *   The derived images of the given transformations are included in the archive. Using the string representation of\n *   multiple chained transformations as we use for the 'eager' upload parameter.\n * @param {string} [options.mode=\"create\"] return the generated archive file or to store it as a raw resource and\n *   return a JSON with URLs for accessing the archive. Possible values: :download, :create\n * @param {string} [options.target_format=\"zip\"]\n * @param {string} [options.target_public_id]  public ID of the generated raw resource.\n *   Relevant only for the create mode. If not specified, random public ID is generated.\n * @param {boolean} [options.flatten_folders=false] If true, flatten public IDs with folders to be in the root\n *   of the archive. Add numeric counter to the file name in case of a name conflict.\n * @param {boolean} [options.flatten_transformations=false] If true, and multiple transformations are given,\n *   flatten the folder structure of derived images and store the transformation details on the file name instead.\n * @param {boolean} [options.use_original_filename] Use the original file name of included images\n *   (if available) instead of the public ID.\n * @param {boolean} [options.async=false] If true, return immediately and perform archive creation in the background.\n *   Relevant only for the create mode.\n * @param {string} [options.notification_url] URL to send an HTTP post request (webhook) to when the\n *   archive creation is completed.\n * @param {string|Array<string>} [options.target_tags=] Allows assigning one or more tags to the generated archive file\n *   (for later housekeeping via the admin API).\n * @param {string} [options.keep_derived=false] keep the derived images used for generating the archive\n * @return {String} archive url\n */\nfunction download_archive_url() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var params = exports.archive_params(merge(options, {\n    mode: \"download\"\n  }));\n  return api_download_url(\"generate_archive\", params, options);\n}\n\n/**\n * Returns a URL that when invokes creates an zip archive and returns it.\n * @see download_archive_url\n */\n\nfunction download_zip_url() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  return exports.download_archive_url(merge(options, {\n    target_format: \"zip\"\n  }));\n}\n\n/**\n * Creates and returns a URL that when invoked creates an archive of a folder\n * @param {string} folder_path Full path (from the root) of the folder to download\n * @param {object} options Additional options\n * @returns {string} Url for downloading an archive of a folder\n */\nfunction download_folder(folder_path) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  options.resource_type = options.resource_type || \"all\";\n  options.prefixes = folder_path;\n  var cloudinary_params = exports.sign_request(exports.archive_params(merge(options, {\n    mode: \"download\"\n  })), options);\n  return exports.api_url(\"generate_archive\", options) + \"?\" + hashToQuery(cloudinary_params);\n}\n\n/**\n * Render the key/value pair as an HTML tag attribute\n * @private\n * @param {string} key\n * @param {string|boolean|number} [value]\n * @return {string} A string representing the HTML attribute\n */\nfunction join_pair(key, value) {\n  if (!value) {\n    return void 0;\n  }\n  return value === true ? key : key + \"='\" + value + \"'\";\n}\n\n/**\n * If the given value is a string, replaces single or double quotes with character entities\n * @private\n * @param {*} value The string to encode quotes in\n * @return {*} Encoded string or original value if not a string\n */\nfunction escapeQuotes(value) {\n  return isString(value) ? value.replace(/\\\"/g, '&#34;').replace(/\\'/g, '&#39;') : value;\n}\n\n/**\n *\n * @param attrs\n * @return {*}\n */\nexports.html_attrs = function html_attrs(attrs) {\n  return filter(map(attrs, function (value, key) {\n    return join_pair(key, escapeQuotes(value));\n  })).sort().join(\" \");\n};\n\nvar CLOUDINARY_JS_CONFIG_PARAMS = ['api_key', 'cloud_name', 'private_cdn', 'secure_distribution', 'cdn_subdomain'];\n\nfunction cloudinary_js_config() {\n  var params = pickOnlyExistingValues.apply(undefined, [config()].concat(CLOUDINARY_JS_CONFIG_PARAMS));\n  return `<script type='text/javascript'>\\n$.cloudinary.config(${JSON.stringify(params)});\\n</script>`;\n}\n\nfunction v1_result_adapter(callback) {\n  if (callback == null) {\n    return undefined;\n  }\n  return function (result) {\n    if (result.error != null) {\n      return callback(result.error);\n    }\n    return callback(void 0, result);\n  };\n}\n\nfunction v1_adapter(name, num_pass_args, v1) {\n  return function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var pass_args = take(args, num_pass_args);\n    var options = args[num_pass_args];\n    var callback = args[num_pass_args + 1];\n    if (callback == null && isFunction(options)) {\n      callback = options;\n      options = {};\n    }\n    callback = v1_result_adapter(callback);\n    args = pass_args.concat([callback, options]);\n    return v1[name].apply(this, args);\n  };\n}\n\nfunction v1_adapters(exports, v1, mapping) {\n  return Object.keys(mapping).map(function (name) {\n    var num_pass_args = mapping[name];\n    exports[name] = v1_adapter(name, num_pass_args, v1);\n    return exports[name];\n  });\n}\n\nfunction as_safe_bool(value) {\n  if (value == null) {\n    return void 0;\n  }\n  if (value === true || value === 'true' || value === '1') {\n    value = 1;\n  }\n  if (value === false || value === 'false' || value === '0') {\n    value = 0;\n  }\n  return value;\n}\n\nvar NUMBER_PATTERN = \"([0-9]*)\\\\.([0-9]+)|([0-9]+)\";\n\nvar OFFSET_ANY_PATTERN = `(${NUMBER_PATTERN})([%pP])?`;\nvar RANGE_VALUE_RE = RegExp(`^${OFFSET_ANY_PATTERN}$`);\nvar OFFSET_ANY_PATTERN_RE = RegExp(`(${OFFSET_ANY_PATTERN})\\\\.\\\\.(${OFFSET_ANY_PATTERN})`);\n\n// Split a range into the start and end values\nfunction split_range(range) {\n  // :nodoc:\n  switch (range.constructor) {\n    case String:\n      if (!OFFSET_ANY_PATTERN_RE.test(range)) {\n        return range;\n      }\n      return range.split(\"..\");\n    case Array:\n      return [first(range), last(range)];\n    default:\n      return [null, null];\n  }\n}\n\nfunction norm_range_value(value) {\n  // :nodoc:\n  var offset = String(value).match(RANGE_VALUE_RE);\n  if (offset) {\n    var modifier = offset[5] ? 'p' : '';\n    value = `${offset[1] || offset[4]}${modifier}`;\n  }\n  return value;\n}\n\n/**\n * A video codec parameter can be either a String or a Hash.\n * @param {Object} param <code>vc_<codec>[ : <profile> : [<level>]]</code>\n *                       or <code>{ codec: 'h264', profile: 'basic', level: '3.1' }</code>\n * @return {String} <code><codec> : <profile> : [<level>]]</code> if a Hash was provided\n *                   or the param if a String was provided.\n *                   Returns null if param is not a Hash or String\n */\nfunction process_video_params(param) {\n  switch (param.constructor) {\n    case Object:\n      {\n        var video = \"\";\n        if ('codec' in param) {\n          video = param.codec;\n          if ('profile' in param) {\n            video += \":\" + param.profile;\n            if ('level' in param) {\n              video += \":\" + param.level;\n            }\n          }\n        }\n        return video;\n      }\n    case String:\n      return param;\n    default:\n      return null;\n  }\n}\n/**\n * Returns a Hash of parameters used to create an archive\n * @private\n * @param {object} options\n * @return {object} Archive API parameters\n */\n\nfunction archive_params() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  return {\n    allow_missing: exports.as_safe_bool(options.allow_missing),\n    async: exports.as_safe_bool(options.async),\n    expires_at: options.expires_at,\n    flatten_folders: exports.as_safe_bool(options.flatten_folders),\n    flatten_transformations: exports.as_safe_bool(options.flatten_transformations),\n    keep_derived: exports.as_safe_bool(options.keep_derived),\n    mode: options.mode,\n    notification_url: options.notification_url,\n    prefixes: options.prefixes && toArray(options.prefixes),\n    fully_qualified_public_ids: options.fully_qualified_public_ids && toArray(options.fully_qualified_public_ids),\n    public_ids: options.public_ids && toArray(options.public_ids),\n    skip_transformation_name: exports.as_safe_bool(options.skip_transformation_name),\n    tags: options.tags && toArray(options.tags),\n    target_format: options.target_format,\n    target_public_id: options.target_public_id,\n    target_tags: options.target_tags && toArray(options.target_tags),\n    timestamp: options.timestamp || exports.timestamp(),\n    transformations: utils.build_eager(options.transformations),\n    type: options.type,\n    use_original_filename: exports.as_safe_bool(options.use_original_filename)\n  };\n}\n\nexports.create_source_tag = function create_source_tag(src, source_type) {\n  var codecs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n  var video_type = source_type === 'ogv' ? 'ogg' : source_type;\n  var mime_type = `video/${video_type}`;\n  if (!isEmpty(codecs)) {\n    var codecs_str = isArray(codecs) ? codecs.join(', ') : codecs;\n    mime_type += `; codecs=${codecs_str}`;\n  }\n  return `<source ${utils.html_attrs({ src, type: mime_type })}>`;\n};\n\nfunction build_explicit_api_params(public_id) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  return [exports.build_upload_params(extend({}, { public_id }, options))];\n}\n\nfunction generate_responsive_breakpoints_string(breakpoints) {\n  if (breakpoints == null) {\n    return null;\n  }\n  breakpoints = clone(breakpoints);\n  if (!isArray(breakpoints)) {\n    breakpoints = [breakpoints];\n  }\n  for (var j = 0; j < breakpoints.length; j++) {\n    var breakpoint_settings = breakpoints[j];\n    if (breakpoint_settings != null) {\n      if (breakpoint_settings.transformation) {\n        breakpoint_settings.transformation = utils.generate_transformation_string(clone(breakpoint_settings.transformation));\n      }\n    }\n  }\n  return JSON.stringify(breakpoints);\n}\n\nfunction build_streaming_profiles_param() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var params = pickOnlyExistingValues(options, \"display_name\", \"representations\");\n  if (isArray(params.representations)) {\n    params.representations = JSON.stringify(params.representations.map(function (r) {\n      return {\n        transformation: utils.generate_transformation_string(r.transformation)\n      };\n    }));\n  }\n  return params;\n}\n\nfunction hashToParameters(hash) {\n  return entries(hash).reduce(function (parameters, _ref30) {\n    var _ref31 = _slicedToArray(_ref30, 2),\n        key = _ref31[0],\n        value = _ref31[1];\n\n    if (isArray(value)) {\n      key = key.endsWith('[]') ? key : key + '[]';\n      var items = value.map(function (v) {\n        return [key, v];\n      });\n      parameters = parameters.concat(items);\n    } else {\n      parameters.push([key, value]);\n    }\n    return parameters;\n  }, []);\n}\n\n/**\n * Convert a hash of values to a URI query string.\n * Array values are spread as individual parameters.\n * @param {object} hash Key-value parameters\n * @return {string} A URI query string.\n */\nfunction hashToQuery(hash) {\n  return hashToParameters(hash).map(function (_ref32) {\n    var _ref33 = _slicedToArray(_ref32, 2),\n        key = _ref33[0],\n        value = _ref33[1];\n\n    return `${querystring.escape(key)}=${querystring.escape(value)}`;\n  }).join('&');\n}\n\n/**\n * Verify that the parameter `value` is defined and it's string value is not zero.\n * <br>This function should not be confused with `isEmpty()`.\n * @private\n * @param {string|number} value The value to check.\n * @return {boolean} True if the value is defined and not empty.\n */\n\nfunction present(value) {\n  return value != null && (\"\" + value).length > 0;\n}\n\n/**\n * Returns a new object with key values from source based on the keys.\n * `null` or `undefined` values are not copied.\n * @private\n * @param {object} source The object to pick values from.\n * @param {...string} keys One or more keys to copy from source.\n * @return {object} A new object with the required keys and values.\n */\n\nfunction pickOnlyExistingValues(source) {\n  var result = {};\n  if (source) {\n    for (var _len2 = arguments.length, keys = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      keys[_key2 - 1] = arguments[_key2];\n    }\n\n    keys.forEach(function (key) {\n      if (source[key] != null) {\n        result[key] = source[key];\n      }\n    });\n  }\n  return result;\n}\n\n/**\n * Returns a JSON array as String.\n * Yields the array before it is converted to JSON format\n * @private\n * @param {object|String|Array<object>} data\n * @param {function(*):*} [modifier] called with the array before the array is stringified\n * @return {String|null} a JSON array string or `null` if data is `null`\n */\n\nfunction jsonArrayParam(data, modifier) {\n  if (!data) {\n    return null;\n  }\n  if (isString(data)) {\n    data = JSON.parse(data);\n  }\n  if (!isArray(data)) {\n    data = [data];\n  }\n  if (isFunction(modifier)) {\n    data = modifier(data);\n  }\n  return JSON.stringify(data);\n}\n\nfunction optionalRequire(moduleName) {\n  var module = void 0;\n  try {\n    module = require(moduleName);\n    return module;\n  } catch (e) {\n    if (e.code === \"MODULE_NOT_FOUND\") {\n      return null;\n    }\n    throw e;\n  }\n}\n\n/**\n * Empty function - do nothing\n *\n */\nexports.NOP = function () {};\nexports.generate_auth_token = generate_auth_token;\nexports.getUserAgent = getUserAgent;\nexports.build_upload_params = build_upload_params;\nexports.build_multi_and_sprite_params = build_multi_and_sprite_params;\nexports.api_download_url = api_download_url;\nexports.timestamp = function () {\n  return Math.floor(new Date().getTime() / 1000);\n};\nexports.option_consume = consumeOption; // for backwards compatibility\nexports.build_array = toArray; // for backwards compatibility\nexports.encode_double_array = encodeDoubleArray;\nexports.encode_key_value = encode_key_value;\nexports.encode_context = encode_context;\nexports.build_eager = build_eager;\nexports.build_custom_headers = build_custom_headers;\nexports.generate_transformation_string = generate_transformation_string;\nexports.updateable_resource_params = updateable_resource_params;\nexports.extractUrlParams = extractUrlParams;\nexports.extractTransformationParams = extractTransformationParams;\nexports.patchFetchFormat = patchFetchFormat;\nexports.url = url;\nexports.video_url = video_url;\nexports.video_thumbnail_url = video_thumbnail_url;\nexports.api_url = api_url;\nexports.random_public_id = random_public_id;\nexports.signed_preloaded_image = signed_preloaded_image;\nexports.api_sign_request = api_sign_request;\nexports.clear_blank = clear_blank;\nexports.merge = merge;\nexports.sign_request = sign_request;\nexports.webhook_signature = webhook_signature;\nexports.verifyNotificationSignature = verifyNotificationSignature;\nexports.process_request_params = process_request_params;\nexports.private_download_url = private_download_url;\nexports.zip_download_url = zip_download_url;\nexports.download_archive_url = download_archive_url;\nexports.download_zip_url = download_zip_url;\nexports.cloudinary_js_config = cloudinary_js_config;\nexports.v1_adapters = v1_adapters;\nexports.as_safe_bool = as_safe_bool;\nexports.archive_params = archive_params;\nexports.build_explicit_api_params = build_explicit_api_params;\nexports.generate_responsive_breakpoints_string = generate_responsive_breakpoints_string;\nexports.build_streaming_profiles_param = build_streaming_profiles_param;\nexports.hashToParameters = hashToParameters;\nexports.present = present;\nexports.only = pickOnlyExistingValues; // for backwards compatibility\nexports.pickOnlyExistingValues = pickOnlyExistingValues;\nexports.jsonArrayParam = jsonArrayParam;\nexports.download_folder = download_folder;\nexports.base_api_url = base_api_url;\nexports.download_backedup_asset = download_backedup_asset;\nexports.optionalRequire = optionalRequire;\n\n// was exported before, so kept for backwards compatibility\nexports.DEFAULT_POSTER_OPTIONS = DEFAULT_POSTER_OPTIONS;\nexports.DEFAULT_VIDEO_SOURCE_TYPES = DEFAULT_VIDEO_SOURCE_TYPES;\n\nObject.assign(module.exports, {\n  normalize_expression,\n  at,\n  clone,\n  extend,\n  filter,\n  includes,\n  isArray,\n  isEmpty,\n  isNumber,\n  isObject,\n  isRemoteUrl,\n  isString,\n  isUndefined,\n  keys: function keys(source) {\n    return Object.keys(source);\n  },\n  ensurePresenceOf\n});"]},"metadata":{},"sourceType":"script"}