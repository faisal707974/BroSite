{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { registerReducer } from './reducer/registerReducer';\nimport { loginReducer } from './reducer/loginReducer';\nimport { sideBarReducer } from './reducer/sidebarReducer';\nimport { workshopIdReducer } from './reducer/managerReducer';\nconst reducer = combineReducers({\n  Register: registerReducer,\n  Login: loginReducer,\n  SideBar: sideBarReducer,\n  WorkshopId: workshopIdReducer\n});\nconst middleware = [thunk];\nconst initialState = {\n  SideBar: {\n    status: false\n  },\n  Login: {\n    isLoggedIn: false\n  }\n};\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["D:/Project 2/frontend/src/redux/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","registerReducer","loginReducer","sideBarReducer","workshopIdReducer","reducer","Register","Login","SideBar","WorkshopId","middleware","initialState","status","isLoggedIn","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,eAAT,QAAgC,2BAAhC;AACA,SAASC,YAAT,QAA6B,wBAA7B;AACA,SAASC,cAAT,QAA+B,0BAA/B;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AAEA,MAAMC,OAAO,GAAGR,eAAe,CAAC;AAC5BS,EAAAA,QAAQ,EAAEL,eADkB;AAE5BM,EAAAA,KAAK,EAAEL,YAFqB;AAG5BM,EAAAA,OAAO,EAAEL,cAHmB;AAI5BM,EAAAA,UAAU,EAAEL;AAJgB,CAAD,CAA/B;AAOA,MAAMM,UAAU,GAAG,CAACX,KAAD,CAAnB;AAEA,MAAMY,YAAY,GAAG;AACjBH,EAAAA,OAAO,EAAE;AACLI,IAAAA,MAAM,EAAE;AADH,GADQ;AAIjBL,EAAAA,KAAK,EAAE;AACHM,IAAAA,UAAU,EAAE;AADT;AAJU,CAArB;AASA,MAAMC,KAAK,GAAGlB,WAAW,CAACS,OAAD,EAAUM,YAAV,EAAwBX,mBAAmB,CAACF,eAAe,CAAC,GAAGY,UAAJ,CAAhB,CAA3C,CAAzB;AAEA,eAAeI,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { registerReducer } from './reducer/registerReducer'\r\nimport { loginReducer } from './reducer/loginReducer'\r\nimport { sideBarReducer } from './reducer/sidebarReducer'\r\nimport { workshopIdReducer } from './reducer/managerReducer'\r\n\r\nconst reducer = combineReducers({\r\n    Register: registerReducer,\r\n    Login: loginReducer,\r\n    SideBar: sideBarReducer,\r\n    WorkshopId: workshopIdReducer\r\n})\r\n\r\nconst middleware = [thunk]\r\n\r\nconst initialState = {\r\n    SideBar: {\r\n        status: false\r\n    },\r\n    Login: {\r\n        isLoggedIn: false\r\n    }\r\n}\r\n\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}