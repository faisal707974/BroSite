{"ast":null,"code":"import axios from 'axios';\nimport { USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS } from \"../constants/registerConstant\";\nexport const registeration = (data, toggleModal) => async (dispatch, getstate) => {\n  dispatch({\n    type: USER_REGISTER_REQUEST\n  });\n  const base64 = data.photo;\n  fetch(base64).then(res => {\n    res.blob();\n  }).then(blob => {\n    const file = new File([blob], data.Name + \".jpeg\", {\n      type: 'image/jpeg'\n    });\n    const fd = new FormData();\n    console.log(file);\n    fd.append('file', file);\n    fd.append('upload_preset', 'gchysefv');\n    fd.append(\"cloud_name\", \"dj4qzfqjg\");\n    fd.append('resource_type', 'auto');\n    const API_URL = 'https://api.cloudinary.com/v1_1/dj4qzfqjg/image/upload';\n    fetch(API_URL, {\n      method: 'POST',\n      body: fd\n    }).then(res => res.json()).then(res => {\n      console.log({\n        res\n      });\n      data.photo = res;\n    }).catch(error => {\n      console.log(error);\n    });\n  });\n\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'applicatoin/json'\n      }\n    };\n    const {\n      response\n    } = await axios.post('http://localhost:3001/registration', data);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: response\n    });\n    toggleModal();\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response ? error.response : error.message\n    });\n  }\n};","map":{"version":3,"sources":["D:/Project 2/frontend/src/redux/actions/registerAction.js"],"names":["axios","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","registeration","data","toggleModal","dispatch","getstate","type","base64","photo","fetch","then","res","blob","file","File","Name","fd","FormData","console","log","append","API_URL","method","body","json","catch","error","config","headers","response","post","payload","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,EAA6BC,qBAA7B,EAAoDC,qBAApD,QAAiF,+BAAjF;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,IAAD,EAAOC,WAAP,KAAuB,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAC9ED,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAEP;AAAR,GAAD,CAAR;AAGA,QAAMQ,MAAM,GAAGL,IAAI,CAACM,KAApB;AACAC,EAAAA,KAAK,CAACF,MAAD,CAAL,CACKG,IADL,CACUC,GAAG,IAAI;AACTA,IAAAA,GAAG,CAACC,IAAJ;AACH,GAHL,EAIKF,IAJL,CAIUE,IAAI,IAAI;AACV,UAAMC,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACF,IAAD,CAAT,EAAiBV,IAAI,CAACa,IAAL,GAAY,OAA7B,EAAsC;AAAET,MAAAA,IAAI,EAAE;AAAR,KAAtC,CAAb;AAEA,UAAMU,EAAE,GAAG,IAAIC,QAAJ,EAAX;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACAG,IAAAA,EAAE,CAACI,MAAH,CAAU,MAAV,EAAkBP,IAAlB;AACAG,IAAAA,EAAE,CAACI,MAAH,CAAU,eAAV,EAA2B,UAA3B;AACAJ,IAAAA,EAAE,CAACI,MAAH,CAAU,YAAV,EAAwB,WAAxB;AACAJ,IAAAA,EAAE,CAACI,MAAH,CAAU,eAAV,EAA2B,MAA3B;AACA,UAAMC,OAAO,GAAG,wDAAhB;AACAZ,IAAAA,KAAK,CAACY,OAAD,EAAU;AAAEC,MAAAA,MAAM,EAAE,MAAV;AAAkBC,MAAAA,IAAI,EAAEP;AAAxB,KAAV,CAAL,CACKN,IADL,CACUC,GAAG,IAAIA,GAAG,CAACa,IAAJ,EADjB,EAEKd,IAFL,CAEUC,GAAG,IAAI;AACTO,MAAAA,OAAO,CAACC,GAAR,CAAY;AAAER,QAAAA;AAAF,OAAZ;AACAT,MAAAA,IAAI,CAACM,KAAL,GAAaG,GAAb;AACH,KALL,EAKOc,KALP,CAKcC,KAAD,IAAW;AAChBR,MAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AACH,KAPL;AASH,GAvBL;;AA2BA,MAAI;AACA,UAAMC,MAAM,GAAG;AAAEC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAAX,KAAf;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAe,MAAMhC,KAAK,CAACiC,IAAN,CAAW,oCAAX,EAAiD5B,IAAjD,CAA3B;AAEAE,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEN,qBAAR;AAA+B+B,MAAAA,OAAO,EAAEF;AAAxC,KAAD,CAAR;AACA1B,IAAAA,WAAW;AACd,GAND,CAME,OAAOuB,KAAP,EAAc;AACZtB,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAER,kBADD;AACqBiC,MAAAA,OAAO,EAC7BL,KAAK,CAACG,QAAN,GAAiBH,KAAK,CAACG,QAAvB,GAAkCH,KAAK,CAACM;AAFvC,KAAD,CAAR;AAIH;AACJ,CA5CM","sourcesContent":["import axios from 'axios'\r\nimport { USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS } from \"../constants/registerConstant\"\r\n\r\nexport const registeration = (data, toggleModal) => async (dispatch, getstate) => {\r\n    dispatch({ type: USER_REGISTER_REQUEST })\r\n\r\n\r\n    const base64 = data.photo\r\n    fetch(base64)\r\n        .then(res => {\r\n            res.blob()\r\n        })\r\n        .then(blob => {\r\n            const file = new File([blob], data.Name + \".jpeg\", { type: 'image/jpeg' });\r\n\r\n            const fd = new FormData();\r\n            console.log(file)\r\n            fd.append('file', file)\r\n            fd.append('upload_preset', 'gchysefv')\r\n            fd.append(\"cloud_name\", \"dj4qzfqjg\");\r\n            fd.append('resource_type', 'auto')\r\n            const API_URL = 'https://api.cloudinary.com/v1_1/dj4qzfqjg/image/upload'\r\n            fetch(API_URL, { method: 'POST', body: fd })\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    console.log({ res })\r\n                    data.photo = res\r\n                }).catch((error) => {\r\n                    console.log(error)\r\n                })\r\n\r\n        })\r\n\r\n\r\n\r\n    try {\r\n        const config = { headers: { 'Content-Type': 'applicatoin/json' } }\r\n        const { response } = await axios.post('http://localhost:3001/registration', data)\r\n\r\n        dispatch({ type: USER_REGISTER_SUCCESS, payload: response })\r\n        toggleModal()\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL, payload:\r\n                error.response ? error.response : error.message\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}