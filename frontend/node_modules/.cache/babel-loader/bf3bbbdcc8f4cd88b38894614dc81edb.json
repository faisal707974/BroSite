{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project 2\\\\frontend\\\\src\\\\components\\\\Cropper\\\\croppppppp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ReactCrop from 'react-image-crop';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Cropppp(src) {\n  _s();\n\n  const [crop, setCrop] = useState({\n    unit: '%',\n    // Can be 'px' or '%'\n    x: 25,\n    y: 25,\n    width: 50,\n    height: 50\n  });\n\n  function onImageLoad(e) {\n    const {\n      width,\n      height\n    } = e.currentTarget;\n    const crop = centerCrop(makeAspectCrop({\n      // You don't need to pass a complete crop into\n      // makeAspectCrop or centerCrop.\n      unit: '%',\n      width: 90\n    }, 16 / 9, width, height), width, height);\n    setCrop(crop);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ReactCrop, {\n    crop: crop,\n    onChange: e => setCrop(e),\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: src\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Cropppp, \"XlUEUpRTCfMLKF+xW9LTfO3splQ=\");\n\n_c = Cropppp;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cropppp\");","map":{"version":3,"sources":["D:/Project 2/frontend/src/components/Cropper/croppppppp.js"],"names":["React","useState","ReactCrop","Cropppp","src","crop","setCrop","unit","x","y","width","height","onImageLoad","e","currentTarget","centerCrop","makeAspectCrop"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,kBAAtB;;AAEA,eAAe,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AAAA;;AAEjC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC;AAC7BM,IAAAA,IAAI,EAAE,GADuB;AAClB;AACXC,IAAAA,CAAC,EAAE,EAF0B;AAG7BC,IAAAA,CAAC,EAAE,EAH0B;AAI7BC,IAAAA,KAAK,EAAE,EAJsB;AAK7BC,IAAAA,MAAM,EAAE;AALqB,GAAD,CAAhC;;AASE,WAASC,WAAT,CAAqBC,CAArB,EAAwB;AACtB,UAAM;AAAEH,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAoBE,CAAC,CAACC,aAA5B;AAEA,UAAMT,IAAI,GAAGU,UAAU,CACrBC,cAAc,CACZ;AACE;AACA;AACAT,MAAAA,IAAI,EAAE,GAHR;AAIEG,MAAAA,KAAK,EAAE;AAJT,KADY,EAOZ,KAAK,CAPO,EAQZA,KARY,EASZC,MATY,CADO,EAYrBD,KAZqB,EAarBC,MAbqB,CAAvB;AAgBAL,IAAAA,OAAO,CAACD,IAAD,CAAP;AACD;;AAEH,sBACI,QAAC,SAAD;AAAW,IAAA,IAAI,EAAEA,IAAjB;AAAuB,IAAA,QAAQ,EAAEQ,CAAC,IAAIP,OAAO,CAACO,CAAD,CAA7C;AAAA,2BACI;AAAK,MAAA,GAAG,EAAET;AAAV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAtCuBD,O;;KAAAA,O","sourcesContent":["import React, { useState } from \"react\"\r\nimport ReactCrop from 'react-image-crop'\r\n\r\nexport default function Cropppp(src) {\r\n\r\n    const [crop, setCrop] = useState({\r\n        unit: '%', // Can be 'px' or '%'\r\n        x: 25,\r\n        y: 25,\r\n        width: 50,\r\n        height: 50\r\n      })\r\n\r\n\r\n      function onImageLoad(e) {\r\n        const { width, height } = e.currentTarget\r\n      \r\n        const crop = centerCrop(\r\n          makeAspectCrop(\r\n            {\r\n              // You don't need to pass a complete crop into\r\n              // makeAspectCrop or centerCrop.\r\n              unit: '%',\r\n              width: 90,\r\n            },\r\n            16 / 9,\r\n            width,\r\n            height\r\n          ),\r\n          width,\r\n          height\r\n        )\r\n      \r\n        setCrop(crop)\r\n      }\r\n\r\n    return (\r\n        <ReactCrop crop={crop} onChange={e => setCrop(e)}>\r\n            <img src={src}/>\r\n        </ReactCrop>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}