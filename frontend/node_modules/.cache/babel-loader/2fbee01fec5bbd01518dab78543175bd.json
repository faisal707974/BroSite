{"ast":null,"code":"import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_RESET } from '../constants/loginConstant';\nimport axios from 'axios';\nexport const loginAction = (data, setErr, navigate) => async (dispatch, getstate) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    console.log(data);\n    const response = await axios.post('http://localhost:3001/login', data);\n    console.log(response.data);\n\n    switch (response.data.code) {\n      case 401:\n        setErr(response.data.message);\n        break;\n\n      case 403:\n        setErr(response.data.message);\n        break;\n\n      case 200:\n        // localStorage.setItem()\n        break;\n    }\n\n    switch (response.data.userInfo.Role) {\n      case 'newRegistration':\n        navigate('/new_registration');\n        break;\n\n      case 'fumigation':\n        navigate('/fumigation');\n        break;\n\n      case 'BroCamp':\n        navigate('/brocamp');\n        break;\n\n      case 'advisor':\n        navigate('/advisor');\n        break;\n\n      case 'manager':\n        navigate('/manager');\n        break;\n    }\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: response.data\n    });\n  } catch (error) {}\n};","map":{"version":3,"sources":["D:/Project 2/frontend/src/redux/actions/loginAction.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGIN_RESET","axios","loginAction","data","setErr","navigate","dispatch","getstate","type","console","log","response","post","code","message","userInfo","Role","payload","error"],"mappings":"AAAA,SAASA,kBAAT,EAA6BC,kBAA7B,EAAiDC,eAAjD,EAAkEC,gBAAlE,QAA0F,4BAA1F;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,IAAD,EAAOC,MAAP,EAAeC,QAAf,KAA4B,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACjF,MAAI;AACAD,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEX;AAAR,KAAD,CAAR;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACA,UAAMQ,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAN,CAAW,6BAAX,EAA0CT,IAA1C,CAAvB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAQ,CAACR,IAArB;;AAEA,YAAQQ,QAAQ,CAACR,IAAT,CAAcU,IAAtB;AACI,WAAK,GAAL;AACIT,QAAAA,MAAM,CAACO,QAAQ,CAACR,IAAT,CAAcW,OAAf,CAAN;AACA;;AAEJ,WAAK,GAAL;AACIV,QAAAA,MAAM,CAACO,QAAQ,CAACR,IAAT,CAAcW,OAAf,CAAN;AACA;;AAEJ,WAAK,GAAL;AACI;AACA;AAXR;;AAcA,YAAQH,QAAQ,CAACR,IAAT,CAAcY,QAAd,CAAuBC,IAA/B;AACI,WAAK,iBAAL;AACIX,QAAAA,QAAQ,CAAC,mBAAD,CAAR;AACA;;AAEJ,WAAK,YAAL;AACIA,QAAAA,QAAQ,CAAC,aAAD,CAAR;AACA;;AAEJ,WAAK,SAAL;AACIA,QAAAA,QAAQ,CAAC,UAAD,CAAR;AACA;;AAEJ,WAAK,SAAL;AACIA,QAAAA,QAAQ,CAAC,UAAD,CAAR;AACA;;AAEJ,WAAK,SAAL;AACIA,QAAAA,QAAQ,CAAC,UAAD,CAAR;AACA;AAnBR;;AAsBAC,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEV,kBAAR;AAA4BmB,MAAAA,OAAO,EAAEN,QAAQ,CAACR;AAA9C,KAAD,CAAR;AACH,GA3CD,CA2CE,OAAOe,KAAP,EAAc,CAEf;AACJ,CA/CM","sourcesContent":["import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_RESET } from '../constants/loginConstant'\r\nimport axios from 'axios'\r\n\r\nexport const loginAction = (data, setErr, navigate) => async (dispatch, getstate) => {\r\n    try {\r\n        dispatch({ type: USER_LOGIN_REQUEST })\r\n        console.log(data)\r\n        const response = await axios.post('http://localhost:3001/login', data)\r\n        console.log(response.data)\r\n\r\n        switch (response.data.code) {\r\n            case 401:\r\n                setErr(response.data.message)\r\n                break;\r\n\r\n            case 403:\r\n                setErr(response.data.message)\r\n                break;\r\n\r\n            case 200:\r\n                // localStorage.setItem()\r\n                break;\r\n        }\r\n\r\n        switch (response.data.userInfo.Role) {\r\n            case 'newRegistration':\r\n                navigate('/new_registration')\r\n                break;\r\n\r\n            case 'fumigation':\r\n                navigate('/fumigation')\r\n                break;\r\n\r\n            case 'BroCamp':\r\n                navigate('/brocamp')\r\n                break;\r\n\r\n            case 'advisor':\r\n                navigate('/advisor')\r\n                break;\r\n\r\n            case 'manager':\r\n                navigate('/manager')\r\n                break;\r\n        }\r\n    \r\n        dispatch({ type: USER_LOGIN_SUCCESS, payload: response.data })\r\n    } catch (error) {\r\n\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}