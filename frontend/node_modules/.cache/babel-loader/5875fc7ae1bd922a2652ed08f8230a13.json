{"ast":null,"code":"import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_RESET } from '../constants/loginConstant';\nimport axios from 'axios';\nexport const loginAction = data => async (dispatch, getstate) => {\n  try {\n    var _response;\n\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    axios.post('http://localhost:3001/login', data).then(response);\n    console.log('message');\n    console.log((_response = response) === null || _response === void 0 ? void 0 : _response.data);\n    console.error('message');\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: response\n    });\n  } catch (error) {}\n};","map":{"version":3,"sources":["D:/Project 2/frontend/src/redux/actions/loginAction.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGIN_RESET","axios","loginAction","data","dispatch","getstate","type","post","then","response","console","log","error","payload"],"mappings":"AAAA,SAASA,kBAAT,EAA6BC,kBAA7B,EAAiDC,eAAjD,EAAkEC,gBAAlE,QAA0F,4BAA1F;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,WAAW,GAAIC,IAAD,IAAU,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAC/D,MAAI;AAAA;;AACAD,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAACT;AAAN,KAAD,CAAR;AACAI,IAAAA,KAAK,CAACM,IAAN,CAAW,6BAAX,EAAyCJ,IAAzC,EAA+CK,IAA/C,CAAqDC,QAArD;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,cAAYF,QAAZ,8CAAY,UAAUN,IAAtB;AACAO,IAAAA,OAAO,CAACE,KAAR,CAAc,SAAd;AACAR,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAACR,kBAAN;AAA0Be,MAAAA,OAAO,EAACJ;AAAlC,KAAD,CAAR;AAGH,GATD,CASE,OAAOG,KAAP,EAAc,CAEf;AACJ,CAbM","sourcesContent":["import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_RESET } from '../constants/loginConstant'\r\nimport axios from 'axios'\r\n\r\nexport const loginAction = (data) => async (dispatch, getstate) => {\r\n    try {\r\n        dispatch({type:USER_LOGIN_REQUEST})\r\n        axios.post('http://localhost:3001/login',data).then((response))\r\n        console.log('message')\r\n        console.log(response?.data)\r\n        console.error('message')\r\n        dispatch({type:USER_LOGIN_SUCCESS, payload:response})\r\n        \r\n\r\n    } catch (error) {\r\n\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}