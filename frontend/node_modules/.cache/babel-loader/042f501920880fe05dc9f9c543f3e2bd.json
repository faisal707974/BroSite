{"ast":null,"code":"import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_RESET } from '../constants/loginConstant';\nimport axios from 'axios';\nexport const loginAction = (data, setErr, navigate) => async (dispatch, getstate) => {\n  // try {\n  dispatch({\n    type: USER_LOGIN_REQUEST\n  });\n  const config = {\n    withCredentials: true,\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Content-Type': 'application/json'\n    }\n  };\n  const response = await axios.post('http://localhost:3001/login', data, config); // console.log(response)\n\n  switch (response.data.userInfo.Role) {\n    case 'NEWREGISTRATION':\n      navigate('/new_registration');\n      break;\n\n    case 'FUMIGATION':\n      navigate('/fumigation');\n      break;\n\n    case 'BROCAMP':\n      navigate('/brocamp');\n      break;\n\n    case 'ADVISOR':\n      navigate('/advisor');\n      break;\n\n    case 'MANAGER':\n      navigate('/manager');\n      break;\n  } // switch (response.status) {\n  //     case 401:\n  //         setErr(response.data.message)\n  //         break;\n  //     case 403:\n  //         setErr(response.data.message)\n  //         break;\n  //     case 200:\n  //         // localStorage.setItem()\n  //         break;\n  // }\n\n\n  dispatch({\n    type: USER_LOGIN_SUCCESS,\n    payload: response.data\n  }); // } catch (error) {\n  //     console.log(error)\n  // }\n};","map":{"version":3,"sources":["D:/Project 2/frontend/src/redux/actions/loginAction.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGIN_RESET","axios","loginAction","data","setErr","navigate","dispatch","getstate","type","config","withCredentials","headers","response","post","userInfo","Role","payload"],"mappings":"AAAA,SAASA,kBAAT,EAA6BC,kBAA7B,EAAiDC,eAAjD,EAAkEC,gBAAlE,QAA0F,4BAA1F;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,IAAD,EAAOC,MAAP,EAAeC,QAAf,KAA4B,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACjF;AACAD,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAEX;AAAR,GAAD,CAAR;AACA,QAAMY,MAAM,GAAG;AACXC,IAAAA,eAAe,EAAE,IADN;AAEXC,IAAAA,OAAO,EAAE;AACL,qCAA+B,GAD1B;AAEL,sBAAgB;AAFX;AAFE,GAAf;AAQA,QAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAN,CAAW,6BAAX,EAA0CV,IAA1C,EAAgDM,MAAhD,CAAvB,CAXiF,CAYjF;;AAEA,UAAQG,QAAQ,CAACT,IAAT,CAAcW,QAAd,CAAuBC,IAA/B;AACI,SAAK,iBAAL;AACIV,MAAAA,QAAQ,CAAC,mBAAD,CAAR;AACA;;AAEJ,SAAK,YAAL;AACIA,MAAAA,QAAQ,CAAC,aAAD,CAAR;AACA;;AAEJ,SAAK,SAAL;AACIA,MAAAA,QAAQ,CAAC,UAAD,CAAR;AACA;;AAEJ,SAAK,SAAL;AACIA,MAAAA,QAAQ,CAAC,UAAD,CAAR;AACA;;AAEJ,SAAK,SAAL;AACIA,MAAAA,QAAQ,CAAC,UAAD,CAAR;AACA;AAnBR,GAdiF,CAqCjF;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAIAC,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAEV,kBAAR;AAA4BkB,IAAAA,OAAO,EAAEJ,QAAQ,CAACT;AAA9C,GAAD,CAAR,CArDiF,CAsDjF;AACA;AAEA;AACH,CA1DM","sourcesContent":["import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_RESET } from '../constants/loginConstant'\r\nimport axios from 'axios'\r\n\r\nexport const loginAction = (data, setErr, navigate) => async (dispatch, getstate) => {\r\n    // try {\r\n    dispatch({ type: USER_LOGIN_REQUEST })\r\n    const config = {\r\n        withCredentials: true,\r\n        headers: {\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const response = await axios.post('http://localhost:3001/login', data, config)\r\n    // console.log(response)\r\n\r\n    switch (response.data.userInfo.Role) {\r\n        case 'NEWREGISTRATION':\r\n            navigate('/new_registration')\r\n            break;\r\n\r\n        case 'FUMIGATION':\r\n            navigate('/fumigation')\r\n            break;\r\n\r\n        case 'BROCAMP':\r\n            navigate('/brocamp')\r\n            break;\r\n\r\n        case 'ADVISOR':\r\n            navigate('/advisor')\r\n            break;\r\n\r\n        case 'MANAGER':\r\n            navigate('/manager')\r\n            break;\r\n    }\r\n\r\n\r\n    // switch (response.status) {\r\n    //     case 401:\r\n    //         setErr(response.data.message)\r\n    //         break;\r\n\r\n    //     case 403:\r\n    //         setErr(response.data.message)\r\n    //         break;\r\n\r\n    //     case 200:\r\n    //         // localStorage.setItem()\r\n    //         break;\r\n    // }\r\n\r\n\r\n\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: response.data })\r\n    // } catch (error) {\r\n    //     console.log(error)\r\n\r\n    // }\r\n}"]},"metadata":{},"sourceType":"module"}