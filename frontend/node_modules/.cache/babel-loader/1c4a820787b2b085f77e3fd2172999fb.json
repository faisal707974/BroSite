{"ast":null,"code":"import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_RESET } from '../constants/loginConstant';\nimport axios from 'axios';\nexport const loginAction = (data, setErr, navigate) => async (dispatch, getstate) => {\n  var _response$data$userIn, _error$response;\n\n  dispatch({\n    type: USER_LOGIN_REQUEST\n  });\n  const config = {\n    withCredentials: true,\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const response = await axios.post('http://localhost:3001/login', data, config); // console.log(response)\n\n    switch ((_response$data$userIn = response.data.userInfo) === null || _response$data$userIn === void 0 ? void 0 : _response$data$userIn.Role) {\n      case 'NEWREGISTRATION':\n        // navigate('/new_registration')\n        break;\n\n      case 'FUMIGATION':\n        navigate('/fumigation');\n        break;\n\n      case 'BROCAMP':\n        navigate('/brocamp');\n        break;\n\n      case 'ADVISOR':\n        navigate('/advisor');\n        break;\n\n      case 'MANAGER':\n        navigate('/manager');\n        break;\n    }\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: response.data\n    });\n  } catch (error) {\n    // console.log(error)\n    switch ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) {\n      case 401:\n        setErr(error.response.data.message);\n        break;\n\n      case 403:\n        setErr(error.response.data.message);\n        break;\n    }\n  }\n};","map":{"version":3,"sources":["D:/Project 2/frontend/src/redux/actions/loginAction.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGIN_RESET","axios","loginAction","data","setErr","navigate","dispatch","getstate","type","config","withCredentials","headers","response","post","userInfo","Role","payload","error","status","message"],"mappings":"AAAA,SAASA,kBAAT,EAA6BC,kBAA7B,EAAiDC,eAAjD,EAAkEC,gBAAlE,QAA0F,4BAA1F;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,IAAD,EAAOC,MAAP,EAAeC,QAAf,KAA4B,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAAA;;AACjFD,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAEX;AAAR,GAAD,CAAR;AAEA,QAAMY,MAAM,GAAG;AACXC,IAAAA,eAAe,EAAE,IADN;AAEXC,IAAAA,OAAO,EAAE;AACL,qCAA+B,GAD1B;AAEL,sBAAgB;AAFX;AAFE,GAAf;;AAOA,MAAI;AAEA,UAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAN,CAAW,6BAAX,EAA0CV,IAA1C,EAAgDM,MAAhD,CAAvB,CAFA,CAGA;;AAEA,qCAAQG,QAAQ,CAACT,IAAT,CAAcW,QAAtB,0DAAQ,sBAAwBC,IAAhC;AACI,WAAK,iBAAL;AAEI;AACA;;AAEJ,WAAK,YAAL;AACIV,QAAAA,QAAQ,CAAC,aAAD,CAAR;AACA;;AAEJ,WAAK,SAAL;AACIA,QAAAA,QAAQ,CAAC,UAAD,CAAR;AACA;;AAEJ,WAAK,SAAL;AACIA,QAAAA,QAAQ,CAAC,UAAD,CAAR;AACA;;AAEJ,WAAK,SAAL;AACIA,QAAAA,QAAQ,CAAC,UAAD,CAAR;AACA;AApBR;;AAuBAC,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEV,kBAAR;AAA4BkB,MAAAA,OAAO,EAAEJ,QAAQ,CAACT;AAA9C,KAAD,CAAR;AAEH,GA9BD,CA8BE,OAAOc,KAAP,EAAc;AACZ;AACA,+BAAQA,KAAK,CAACL,QAAd,oDAAQ,gBAAgBM,MAAxB;AACI,WAAK,GAAL;AACId,QAAAA,MAAM,CAACa,KAAK,CAACL,QAAN,CAAeT,IAAf,CAAoBgB,OAArB,CAAN;AACA;;AAEJ,WAAK,GAAL;AACIf,QAAAA,MAAM,CAACa,KAAK,CAACL,QAAN,CAAeT,IAAf,CAAoBgB,OAArB,CAAN;AACA;AAPR;AASH;AACJ,CApDM","sourcesContent":["import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_RESET } from '../constants/loginConstant'\r\nimport axios from 'axios'\r\n\r\nexport const loginAction = (data, setErr, navigate) => async (dispatch, getstate) => {\r\n    dispatch({ type: USER_LOGIN_REQUEST })\r\n\r\n    const config = {\r\n        withCredentials: true,\r\n        headers: {\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n    try {\r\n\r\n        const response = await axios.post('http://localhost:3001/login', data, config)\r\n        // console.log(response)\r\n\r\n        switch (response.data.userInfo?.Role) {\r\n            case 'NEWREGISTRATION':\r\n                \r\n                // navigate('/new_registration')\r\n                break;\r\n\r\n            case 'FUMIGATION':\r\n                navigate('/fumigation')\r\n                break;\r\n\r\n            case 'BROCAMP':\r\n                navigate('/brocamp')\r\n                break;\r\n\r\n            case 'ADVISOR':\r\n                navigate('/advisor')\r\n                break;\r\n\r\n            case 'MANAGER':\r\n                navigate('/manager')\r\n                break;\r\n        }\r\n\r\n        dispatch({ type: USER_LOGIN_SUCCESS, payload: response.data })\r\n\r\n    } catch (error) {\r\n        // console.log(error)\r\n        switch (error.response?.status) {\r\n            case 401:\r\n                setErr(error.response.data.message)\r\n                break;\r\n\r\n            case 403:\r\n                setErr(error.response.data.message)\r\n                break;\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}