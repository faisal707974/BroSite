{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project 2\\\\frontend\\\\src\\\\components\\\\Register\\\\RegistrationInput\\\\RegistrationInput.jsx\";\nimport React, { useState } from \"react\";\nimport { Form, Alert } from \"react-bootstrap\";\nimport '../RegistrationInput/RegistrationInput.css';\nimport { useForm } from 'react-hook-form';\nimport { ErrorMessage } from \"@hookform/error-message\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function (_ref) {\n  let {\n    type,\n    id,\n    text,\n    register,\n    message\n  } = _ref;\n  // const { register, handleSubmit, formState: { errors } } = useForm({ criteriaMode: \"all\" });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-input\",\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"form-floating\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          type: type,\n          name: id,\n          id: id,\n          placeholder: id,\n          ...register({\n            id\n          }, {\n            required: 'username is required',\n            pattern: {\n              value: /^[a-zA-Z]+\\s[a-zA-Z]+$/,\n              message: 'should contain first and last name'\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          htmlFor: id,\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}","map":{"version":3,"sources":["D:/Project 2/frontend/src/components/Register/RegistrationInput/RegistrationInput.jsx"],"names":["React","useState","Form","Alert","useForm","ErrorMessage","type","id","text","register","message","required","pattern","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,iBAA5B;AACA,OAAO,4CAAP;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,YAAT,QAA6B,yBAA7B;;;AAEA,eAAe,gBAAiD;AAAA,MAAvC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,EAAR;AAAYC,IAAAA,IAAZ;AAAkBC,IAAAA,QAAlB;AAA4BC,IAAAA;AAA5B,GAAuC;AAC5D;AACA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,eAAtB;AAAA,gCACI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,IAAI,EAAEJ,IAApB;AAA0B,UAAA,IAAI,EAAEC,EAAhC;AAAoC,UAAA,EAAE,EAAEA,EAAxC;AAA4C,UAAA,WAAW,EAAEA,EAAzD;AAAA,aACQE,QAAQ,CAAC;AAACF,YAAAA;AAAD,WAAD,EAAO;AACfI,YAAAA,QAAQ,EAAE,sBADK;AAEfC,YAAAA,OAAO,EAAE;AACLC,cAAAA,KAAK,EAAE,wBADF;AAELH,cAAAA,OAAO,EAAE;AAFJ;AAFM,WAAP;AADhB;AAAA;AAAA;AAAA;AAAA,gBADJ,eASI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,OAAO,EAAEH,EAArB;AAAA,oBAA0BC;AAA1B;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAiBH","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form, Alert } from \"react-bootstrap\";\r\nimport '../RegistrationInput/RegistrationInput.css'\r\nimport { useForm } from 'react-hook-form';\r\nimport { ErrorMessage } from \"@hookform/error-message\";\r\n\r\nexport default function ({ type, id, text, register, message }) {\r\n    // const { register, handleSubmit, formState: { errors } } = useForm({ criteriaMode: \"all\" });\r\n    return (\r\n        <>\r\n            <div className=\"custom-input\">\r\n                <Form.Group className='form-floating'>\r\n                    <Form.Control type={type} name={id} id={id} placeholder={id}\r\n                        {...register({id}, {\r\n                            required: 'username is required',\r\n                            pattern: {\r\n                                value: /^[a-zA-Z]+\\s[a-zA-Z]+$/,\r\n                                message: 'should contain first and last name'\r\n                            }\r\n                        })} />\r\n                    <Form.Label htmlFor={id}>{text}</Form.Label>\r\n                </Form.Group>\r\n            </div>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}