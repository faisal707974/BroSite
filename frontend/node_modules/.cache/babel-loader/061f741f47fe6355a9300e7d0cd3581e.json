{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project 2\\\\frontend\\\\src\\\\components\\\\profilePhoto\\\\profilePhoto.jsx\";\nimport React, { useState } from 'react';\nimport './profilePhoto.css';\nimport Cropper from '../Cropper/Cropper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function (_ref) {\n  let {\n    imgSrc,\n    setImgSrc\n  } = _ref;\n  const [cropper, setCropper] = useState(false);\n  const [result, setResult] = useState();\n  const [photoErr, setPhotoErr] = useState();\n\n  const photoUpload = e => {\n    e.preventDefault();\n    const reader = new FileReader();\n    reader.addEventListener('load', () => setImgSrc(reader.result.toString() || ''));\n    reader.readAsDataURL(e.target.files[0]);\n    {\n      e.target.files[0] && setCropper(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PhotoUpload\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"PhotoUpload-Inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"photo\",\n          className: \"fas\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"img-upload\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: result,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: photoUpload,\n            name: 'photo',\n            className: \"photo\",\n            id: \"photo\",\n            required: true,\n            onInvalid: () => {\n              setPhotoErr('Upload your photo');\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), cropper && /*#__PURE__*/_jsxDEV(Cropper, {\n      imgSrc: imgSrc,\n      setResult: setResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["D:/Project 2/frontend/src/components/profilePhoto/profilePhoto.jsx"],"names":["React","useState","Cropper","imgSrc","setImgSrc","cropper","setCropper","result","setResult","photoErr","setPhotoErr","photoUpload","e","preventDefault","reader","FileReader","addEventListener","toString","readAsDataURL","target","files"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,oBAAP;AACA,OAAOC,OAAP,MAAoB,oBAApB;;;AAGA,eAAe,gBAAiC;AAAA,MAAvB;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAuB;AAE5C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACM,MAAD,EAAUC,SAAV,IAAuBP,QAAQ,EAArC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,EAAxC;;AAEA,QAAMU,WAAW,GAAGC,CAAC,IAAI;AACrBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,IAAAA,MAAM,CAACE,gBAAP,CAAwB,MAAxB,EAAgC,MAC5BZ,SAAS,CAACU,MAAM,CAACP,MAAP,CAAcU,QAAd,MAA4B,EAA7B,CADb;AAGAH,IAAAA,MAAM,CAACI,aAAP,CAAqBN,CAAC,CAACO,MAAF,CAASC,KAAT,CAAe,CAAf,CAArB;AACA;AAAER,MAAAA,CAAC,CAACO,MAAF,CAASC,KAAT,CAAe,CAAf,KAAqBd,UAAU,CAAC,IAAD,CAA/B;AAAuC;AAE5C,GATD;;AAWA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,OAAf;AAAuB,UAAA,SAAS,EAAC,KAAjC;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,mCACI;AAAK,cAAA,GAAG,EAAEC,MAAV;AAAkB,cAAA,GAAG,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,MAAM,EAAC,SAA1B;AAAoC,YAAA,QAAQ,EAAEI,WAA9C;AAA2D,YAAA,IAAI,EAAE,OAAjE;AAA0E,YAAA,SAAS,EAAC,OAApF;AAA4F,YAAA,EAAE,EAAC,OAA/F;AAAuG,YAAA,QAAQ,MAA/G;AAAgH,YAAA,SAAS,EAAE,MAAI;AAACD,cAAAA,WAAW,CAAC,mBAAD,CAAX;AAAiC;AAAjK;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,EAYKL,OAAO,iBAAI,QAAC,OAAD;AAAS,MAAA,MAAM,EAAEF,MAAjB;AAAyB,MAAA,SAAS,EAAEK;AAApC;AAAA;AAAA;AAAA;AAAA,YAZhB;AAAA,kBADJ;AAgBH","sourcesContent":["import React, { useState } from 'react'\r\nimport './profilePhoto.css'\r\nimport Cropper from '../Cropper/Cropper';\r\n\r\n\r\nexport default function ({ imgSrc, setImgSrc }) {\r\n\r\n    const [cropper, setCropper] = useState(false)\r\n    const [result , setResult] = useState()\r\n    const [photoErr, setPhotoErr] = useState()\r\n\r\n    const photoUpload = e => {\r\n        e.preventDefault();\r\n        const reader = new FileReader()\r\n        reader.addEventListener('load', () =>\r\n            setImgSrc(reader.result.toString() || ''),\r\n        )\r\n        reader.readAsDataURL(e.target.files[0])\r\n        { e.target.files[0] && setCropper(true) }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='PhotoUpload'>\r\n                <div className='PhotoUpload-Inner'>\r\n                    <label htmlFor=\"photo\" className='fas' >\r\n                        <div className='img-upload'>\r\n                            <img src={result} alt=\"\" />\r\n                        </div>\r\n                        <input type=\"file\" accept='image/*' onChange={photoUpload} name={'photo'} className=\"photo\" id=\"photo\" required onInvalid={()=>{setPhotoErr('Upload your photo')}}/>\r\n                    </label>\r\n                    <p></p>\r\n                </div>\r\n            </div>\r\n            {cropper && <Cropper imgSrc={imgSrc} setResult={setResult} />}\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}