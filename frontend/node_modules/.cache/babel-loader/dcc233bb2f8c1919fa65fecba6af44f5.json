{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project 2\\\\frontend\\\\src\\\\pages\\\\Manager\\\\TasksManagement\\\\TasksManagement.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport './TasksManagement.scss';\nimport Sidebar from \"../../../components/Sidebar/Sidebar\";\nimport PageHead from \"../../../components/PageHead/PageHead\";\nimport { ManagerTabs } from \"../../../constants/PageTabs/Manager\";\nimport { Modal } from \"react-bootstrap\";\nimport Input from \"../../../components/RegistrationInput/RegistrationInput\";\nimport { useForm } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TasksManagement() {\n  _s();\n\n  const [modal, setModal] = useState(false);\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    criteriaMode: \"all\"\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      pages: ManagerTabs,\n      current: 'Tasks Management'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TasksManagement\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"addTask\",\n        onClick: () => setModal(true),\n        children: \"Add new task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PageHead, {\n        title: 'tasks Management'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tabs\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Mern\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Python\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Flutter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Kotlin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weeks\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"week col\",\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Week 1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"questions\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: \"1. \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 37,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: \"What are the difference between real-dom and virtual-dom?\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 38,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: \"2. \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 41,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: \"What are the difference between real-dom and virtual-dom What are thWhat are the difference between real-dom and virtualnd virtual-dom What are thWhat are the difference between real-domdifference between real-dom and virtual-dom What are thWhat are the difference between real-dom and virtualnd virtual-dom What are thWhat are the difference between real-dom and virtual-dom What are the difference between real-dom and virtual-dom?\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 42,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: modal,\n        onHide: () => setModal(false),\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Add new task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            type: 'text',\n            name: 'Domain',\n            label: \"Domain\",\n            required: true,\n            register: register,\n            errors: errors,\n            rules: {\n              required: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: 'text',\n            name: 'Domain',\n            label: \"Domain\",\n            required: true,\n            register: register,\n            errors: errors,\n            rules: {\n              required: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: 'text',\n            name: 'Domain',\n            label: \"Domain\",\n            required: true,\n            register: register,\n            errors: errors,\n            rules: {\n              required: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TasksManagement, \"QXrOZ4OvKU+bHJ/ya/9MXvMN4TA=\", false, function () {\n  return [useForm];\n});\n\n_c = TasksManagement;\n\nvar _c;\n\n$RefreshReg$(_c, \"TasksManagement\");","map":{"version":3,"sources":["D:/Project 2/frontend/src/pages/Manager/TasksManagement/TasksManagement.jsx"],"names":["React","useState","Sidebar","PageHead","ManagerTabs","Modal","Input","useForm","TasksManagement","modal","setModal","register","handleSubmit","formState","errors","criteriaMode","required"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport './TasksManagement.scss'\r\nimport Sidebar from \"../../../components/Sidebar/Sidebar\";\r\nimport PageHead from \"../../../components/PageHead/PageHead\";\r\nimport { ManagerTabs } from \"../../../constants/PageTabs/Manager\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport Input from \"../../../components/RegistrationInput/RegistrationInput\";\r\nimport { useForm } from 'react-hook-form';\r\n\r\nexport default function TasksManagement() {\r\n\r\n    const [modal, setModal] = useState(false)\r\n\r\n    const { register, handleSubmit, formState: { errors } } = useForm({ criteriaMode: \"all\" });\r\n\r\n    return (\r\n        <>\r\n            <Sidebar pages={ManagerTabs} current={'Tasks Management'} />\r\n            <div className=\"TasksManagement\">\r\n                <span className=\"addTask\" onClick={() => setModal(true)}>Add new task</span>\r\n                <PageHead title={'tasks Management'} />\r\n                <div>\r\n                    <div className=\"tabs\">\r\n                        <span>Mern</span>\r\n                        <span>Python</span>\r\n                        <span>Flutter</span>\r\n                        <span>Kotlin</span>\r\n                    </div>\r\n                    <div className=\"weeks\">\r\n                        <div className=\"week col\">\r\n                            <h5>Week 1</h5>\r\n                        </div>\r\n                        <div className=\"questions\">\r\n                            <table>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>1. </td>\r\n                                        <td>What are the difference between real-dom and virtual-dom?</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>2. </td>\r\n                                        <td>What are the difference between real-dom and virtual-dom What are thWhat are the difference between real-dom and virtualnd virtual-dom What are thWhat are the difference between real-domdifference between real-dom and virtual-dom What are thWhat are the difference between real-dom and virtualnd virtual-dom What are thWhat are the difference between real-dom and virtual-dom What are the difference between real-dom and virtual-dom?</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <Modal show={modal} onHide={() => setModal(false)}>\r\n                    <Modal.Header>\r\n                        <h3>Add new task</h3>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Input type={'text'} name={'Domain'} label='Domain' required\r\n                            register={register} errors={errors} rules={{ required: true }} />\r\n\r\n                        <Input type={'text'} name={'Domain'} label='Domain' required\r\n                            register={register} errors={errors} rules={{ required: true }} />\r\n\r\n                        <Input type={'text'} name={'Domain'} label='Domain' required\r\n                            register={register} errors={errors} rules={{ required: true }} />\r\n                            \r\n                    </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}