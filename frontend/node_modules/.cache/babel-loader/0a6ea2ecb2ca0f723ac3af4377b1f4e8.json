{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project 2\\\\frontend\\\\src\\\\Utils\\\\PrivateRoute.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default PrivateRoute = _s(_ref => {\n  _s();\n\n  let {\n    component: Component,\n    ...rest\n  } = _ref;\n  const {\n    isLoggedIn,\n    userInfo\n  } = useSelector(state => state.Login);\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => !isLoggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 20\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}, \"7Y3qjLZTc96Zbf01fzZ/I5hqOc8=\", false, function () {\n  return [useSelector];\n});","map":{"version":3,"sources":["D:/Project 2/frontend/src/Utils/PrivateRoute.js"],"names":["React","useSelector","Route","Redirect","PrivateRoute","component","Component","rest","isLoggedIn","userInfo","state","Login","props"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;AAEA,eAAeC,YAAY,MAAG,QAAuC;AAAA;;AAAA,MAAtC;AAAEC,IAAAA,SAAS,EAAEC,SAAb;AAAwB,OAAGC;AAA3B,GAAsC;AAEjE,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA2BR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,KAAlB,CAA5C;AAEA,sBACI,QAAC,KAAD,OAAWJ,IAAX;AAAiB,IAAA,MAAM,EAAEK,KAAK,IAC1B,CAACJ,UAAD,gBACK,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YADL,gBAEO,QAAC,SAAD,OAAeI;AAAf;AAAA;AAAA;AAAA;AAAA;AAHX;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAX0B;AAAA,UAEUX,WAFV;AAAA,EAA3B","sourcesContent":["import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nexport default PrivateRoute = ({ component: Component, ...rest }) => {\r\n\r\n    const { isLoggedIn, userInfo } = useSelector((state) => state.Login)\r\n\r\n    return (\r\n        <Route {...rest} render={props =>\r\n            !isLoggedIn ?\r\n                (<Redirect to='/login' />)\r\n                : (<Component {...props} />)\r\n        } />\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}