{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project 2\\\\frontend\\\\src\\\\components\\\\Karthi Crop\\\\Crop.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css'; // import { Input } from '@mui/material';\n\nimport Button from '@mui/material/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 700,\n  bgcolor: 'background.paper',\n  boxShadow: 30,\n  pt: 4,\n  px: 20,\n  pb: 3\n};\n\nfunction Crop(props) {\n  _s();\n\n  const {\n    result,\n    setResult\n  } = props;\n  const [src, selectFile] = useState(null);\n  const [image, setImage] = useState(\"\");\n  const [crop, setCrop] = useState({\n    aspect: 1 / 1\n  });\n\n  const handleFileChange = e => {\n    e.preventDefault();\n    selectFile(URL.createObjectURL(e.target.files[0]));\n  };\n\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    selectFile(null);\n    setImage(\"\");\n    setCrop({\n      aspect: 1 / 1\n    });\n    setOpen(false);\n  };\n\n  function getCroppedImg() {\n    const canvas = document.createElement(\"canvas\");\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    canvas.width = crop.width;\n    canvas.height = crop.height;\n    const ctx = canvas.getContext(\"2d\"); // New lines to be added\n\n    const pixelRatio = window.devicePixelRatio;\n    canvas.width = crop.width * pixelRatio;\n    canvas.height = crop.height * pixelRatio;\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    ctx.imageSmoothingQuality = \"high\";\n    ctx.drawImage(image, crop.x * scaleX, crop.y * scaleY, crop.width * scaleX, crop.height * scaleY, 0, 0, crop.width, crop.height);\n    const base64Image = canvas.toDataURL(\"image/jpeg\");\n    setResult(base64Image);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: handleOpen,\n        children: \"hai\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        open: open,\n        onClose: handleClose,\n        \"aria-labelledby\": \"parent-modal-title\",\n        \"aria-describedby\": \"parent-modal-description\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: { ...style,\n            width: 800\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            placeholder: \"image\",\n            onChange: handleFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), result && result ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-12\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: result,\n              alt: \"croped-version\",\n              className: \"image-fluid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 34\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: src && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-12\",\n              children: [/*#__PURE__*/_jsxDEV(ReactCrop, {\n                src: src,\n                onImageLoaded: setImage,\n                crop: crop,\n                onChange: setCrop,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  ref: imgRef,\n                  alt: \"Crop me\",\n                  src: src\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-primary btn\",\n                onClick: getCroppedImg,\n                children: \"Crop Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose,\n            children: \"Close Child Modal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Crop, \"0zWJ0+u/CPVUngQutRbrdyn0Vn8=\");\n\n_c = Crop;\nexport default Crop;\n\nvar _c;\n\n$RefreshReg$(_c, \"Crop\");","map":{"version":3,"sources":["D:/Project 2/frontend/src/components/Karthi Crop/Crop.jsx"],"names":["React","useState","Box","Modal","ReactCrop","Button","style","position","top","left","transform","width","bgcolor","boxShadow","pt","px","pb","Crop","props","result","setResult","src","selectFile","image","setImage","crop","setCrop","aspect","handleFileChange","e","preventDefault","URL","createObjectURL","target","files","open","setOpen","handleOpen","handleClose","getCroppedImg","canvas","document","createElement","scaleX","naturalWidth","scaleY","naturalHeight","height","ctx","getContext","pixelRatio","window","devicePixelRatio","setTransform","imageSmoothingQuality","drawImage","x","y","base64Image","toDataURL","imgRef"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Modal from '@mui/material/Modal';\r\nimport ReactCrop from 'react-image-crop'\r\nimport 'react-image-crop/dist/ReactCrop.css'\r\n// import { Input } from '@mui/material';\r\nimport Button from '@mui/material/Button';\r\n\r\n\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 700,\r\n  bgcolor: 'background.paper',\r\n  boxShadow: 30,\r\n  pt: 4,\r\n  px: 20,\r\n  pb: 3,\r\n};\r\n\r\n\r\n\r\nfunction Crop(props) {\r\n  const { result, setResult } = props;\r\n\r\n  const [src, selectFile] = useState(null);\r\n  const [image, setImage] = useState(\"\");\r\n  const [crop, setCrop] = useState({ aspect: 1 / 1 })\r\n\r\n  const handleFileChange = e => {\r\n    e.preventDefault();\r\n    selectFile(URL.createObjectURL(e.target.files[0]))\r\n  }\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    selectFile(null)\r\n    setImage(\"\")\r\n    setCrop({ aspect: 1 / 1 })\r\n    setOpen(false);\r\n  };\r\n\r\n  function getCroppedImg() {\r\n    const canvas = document.createElement(\"canvas\");\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    canvas.width = crop.width;\r\n    canvas.height = crop.height;\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    // New lines to be added\r\n    const pixelRatio = window.devicePixelRatio;\r\n    canvas.width = crop.width * pixelRatio;\r\n    canvas.height = crop.height * pixelRatio;\r\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n    ctx.imageSmoothingQuality = \"high\";\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width,\r\n      crop.height\r\n    );\r\n\r\n    const base64Image = canvas.toDataURL(\"image/jpeg\");\r\n    setResult(base64Image)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <p onClick={handleOpen}>hai</p>\r\n        <Modal\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"parent-modal-title\"\r\n          aria-describedby=\"parent-modal-description\"\r\n        >\r\n          <Box sx={{ ...style, width: 800 }}>\r\n            <input type='file' placeholder='image' onChange={handleFileChange} />\r\n\r\n\r\n\r\n\r\n            {result && result ? (<div className=\"col-lg-12\">\r\n              <img src={result} alt=\"croped-version\" className='image-fluid' />\r\n            </div>) :\r\n              (<div>{src &&\r\n                <div className=\"col-lg-12\">\r\n                  <ReactCrop src={src} onImageLoaded={setImage} crop={crop} onChange={setCrop}>\r\n                  <img\r\n                                ref={imgRef}\r\n                                alt=\"Crop me\"\r\n                                src={src}\r\n                            />\r\n                  </ReactCrop>\r\n                  <button className=\"btn-primary btn\" onClick={getCroppedImg}>Crop Image</button>\r\n                </div>\r\n              }</div>)\r\n            }\r\n            <Button onClick={handleClose}>Close Child Modal</Button>\r\n          </Box>\r\n        </Modal>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Crop"]},"metadata":{},"sourceType":"module"}