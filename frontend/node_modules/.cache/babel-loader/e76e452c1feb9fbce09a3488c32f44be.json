{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project 2\\\\frontend\\\\src\\\\components\\\\Login\\\\Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport '../Login/Login.css';\nimport { Modal, CloseButton } from 'react-bootstrap';\nimport img from '../../assets/images/6.jpg';\nimport { useForm } from 'react-hook-form';\nimport { ErrorMessage } from \"@hookform/error-message\";\nimport style from './Login.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    criteriaMode: \"all\"\n  });\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const [err, setErr] = useState('');\n\n  const onSubmit = async data => {\n    try {//   const response = await axios.post('/login', data)\n      //   if (response.data.accessToken) {\n      //     navigate('/')\n      //     localStorage.setItem('JWTtoken', response.data.accessToken)\n      //   } else {\n      //     setErr('You are not logged in')\n      //   }\n    } catch (err) {\n      setErr(err.response.data.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"btn border-0 bg-none p-0 m-0\",\n      onClick: handleShow,\n      children: \" Login \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"login-image\",\n          src: img,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CloseButton, {\n          onClick: handleClose,\n          variant: \"white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-div\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit(onSubmit),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: style.loginForm,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa-solid fa-user\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"username\",\n                  className: errors.username && style.inputError,\n                  onFocus: () => {\n                    setErr('');\n                  },\n                  ...register('username', {\n                    required: 'username is required',\n                    pattern: {\n                      value: /^[a-zA-Z]+\\s[a-zA-Z]+$/,\n                      message: 'should contain first and last name'\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  errors: errors,\n                  name: \"username\",\n                  render: _ref => {\n                    let {\n                      messages\n                    } = _ref;\n                    return messages ? Object.entries(messages).map(_ref2 => {\n                      let [type, message] = _ref2;\n                      return /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: style.errormsg,\n                        children: message\n                      }, type, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 63,\n                        columnNumber: 49\n                      }, this);\n                    }) : null;\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa-solid fa-lock\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  placeholder: \"password\",\n                  onFocus: () => {\n                    setErr('');\n                  },\n                  ...register('password', {\n                    required: 'password is required'\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  errors: errors,\n                  name: \"password\",\n                  render: _ref3 => {\n                    let {\n                      messages\n                    } = _ref3;\n                    return messages ? Object.entries(messages).map(_ref4 => {\n                      let [type, message] = _ref4;\n                      return /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: style.errormsg,\n                        children: message\n                      }, type, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 78,\n                        columnNumber: 49\n                      }, this);\n                    }) : null;\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: style.remember,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"\",\n                children: \"Remember me\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: style.submitDiv,\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: style.submitButton,\n                children: \"submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Login, \"wyeRcsGE2rRQUIQCcSofGYfFl+o=\", false, function () {\n  return [useForm];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/Project 2/frontend/src/components/Login/Login.jsx"],"names":["React","useState","Modal","CloseButton","img","useForm","ErrorMessage","style","Login","register","handleSubmit","formState","errors","criteriaMode","show","setShow","handleClose","handleShow","err","setErr","onSubmit","data","response","message","loginForm","username","inputError","required","pattern","value","messages","Object","entries","map","type","errormsg","remember","submitDiv","submitButton"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport '../Login/Login.css'\r\nimport { Modal, CloseButton } from 'react-bootstrap'\r\nimport img from '../../assets/images/6.jpg'\r\nimport { useForm } from 'react-hook-form';\r\nimport { ErrorMessage } from \"@hookform/error-message\";\r\nimport style from './Login.module.css'\r\n\r\nexport default function Login() {\r\n    const { register, handleSubmit, formState: { errors } } = useForm({ criteriaMode: \"all\" });\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const [err, setErr] = useState('')\r\n\r\n    const onSubmit = async (data) => {\r\n\r\n        try {\r\n        //   const response = await axios.post('/login', data)\r\n        //   if (response.data.accessToken) {\r\n        //     navigate('/')\r\n        //     localStorage.setItem('JWTtoken', response.data.accessToken)\r\n        //   } else {\r\n        //     setErr('You are not logged in')\r\n        //   }\r\n        }\r\n        catch (err) {\r\n          setErr(err.response.data.message)\r\n        }\r\n    \r\n      }\r\n\r\n\r\n    return (\r\n        <>\r\n            <p className='btn border-0 bg-none p-0 m-0' onClick={handleShow}> Login </p>\r\n            <Modal show={show} onHide={handleClose} >\r\n                <Modal.Body>\r\n                    <img className='login-image' src={img} alt=\"\" />\r\n                    <CloseButton onClick={handleClose} variant='white' />\r\n                    <div className=\"input-div\">\r\n                        <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n                            <div className={style.loginForm}>\r\n                                <div>\r\n                                    <i className='fa-solid fa-user'></i>\r\n                                    <input type=\"text\" placeholder='username'\r\n                                        className={errors.username && style.inputError}\r\n                                        onFocus={() => { setErr('') }}\r\n                                        {...register('username', {\r\n                                            required: 'username is required',\r\n                                            pattern: {\r\n                                                value: /^[a-zA-Z]+\\s[a-zA-Z]+$/,\r\n                                                message: 'should contain first and last name'\r\n                                            }\r\n                                        })}\r\n                                    />\r\n                                    <ErrorMessage errors={errors} name=\"username\"\r\n                                        render={({ messages }) => {\r\n                                            return messages ? Object.entries(messages).map(([type, message]) => (\r\n                                                <p className={style.errormsg} key={type}>{message}</p>\r\n                                            )) : null;\r\n                                        }} />\r\n                                </div>\r\n                                <div>\r\n                                    <i className='fa-solid fa-lock'></i>\r\n                                    <input type=\"password\" placeholder='password'\r\n                                        onFocus={() => { setErr('') }}\r\n                                        {...register('password', {\r\n                                            required: 'password is required',\r\n                                        })}\r\n                                    />\r\n                                    <ErrorMessage errors={errors} name=\"password\"\r\n                                        render={({ messages }) => {\r\n                                            return messages ? Object.entries(messages).map(([type, message]) => (\r\n                                                <p className={style.errormsg} key={type}>{message}</p>\r\n                                            )) : null;\r\n                                        }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className={style.remember}>\r\n                                <input type=\"checkbox\" />\r\n                                <label htmlFor=\"\">Remember me</label>\r\n                                {/* <Link to={'/home'}>Forgot password ?</Link> */}\r\n\r\n                            </div>\r\n                            <div className={style.submitDiv}>\r\n                                <button className={style.submitButton}>\r\n                                    submit\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}