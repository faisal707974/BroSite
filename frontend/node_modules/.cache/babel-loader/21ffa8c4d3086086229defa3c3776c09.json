{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project 2\\\\frontend\\\\src\\\\pages\\\\Manager\\\\TasksManagement\\\\TasksManagement.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport './TasksManagement.scss';\nimport Sidebar from \"../../../components/Sidebar/Sidebar\";\nimport PageHead from \"../../../components/PageHead/PageHead\";\nimport { ManagerTabs } from \"../../../constants/PageTabs/Manager\";\nimport { Modal } from \"react-bootstrap\";\nimport Input from \"../../../components/RegistrationInput/RegistrationInput\";\nimport { useForm } from 'react-hook-form';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TasksManagement() {\n  _s();\n\n  const [modal, setModal] = useState(false);\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    criteriaMode: \"all\"\n  });\n\n  async function onSubmit(data) {\n    const response = await axios.post('http://localhost:3001/manager/tasks', data);\n    console.log({\n      response\n    });\n  }\n\n  const [domain, setDomain] = useState();\n  const [tasks, setTasks] = useState();\n  const [currentTasks, setCurrentTasks] = useState();\n  useEffect(() => {\n    async function getTasks() {\n      const response = await axios.get('http://localhost:3001/manager/tasks');\n      setTasks(response.data);\n    }\n\n    getTasks();\n  }, []);\n  useEffect(() => {\n    if (tasks && domain === undefined) {\n      setDomain(tasks[0]._id);\n    }\n\n    if (domain) {\n      tasks.forEach(obj => {\n        if (obj._id === domain) {\n          setCurrentTasks(obj.data);\n        }\n      });\n    }\n  }, [tasks, domain]);\n\n  if (currentTasks) {\n    currentTasks.sort((a, b) => a.week > b.week ? 1 : -1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      pages: ManagerTabs,\n      current: 'Tasks Management'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TasksManagement\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"addTask\",\n        onClick: () => setModal(true),\n        children: \"Add new task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PageHead, {\n        title: 'tasks Management'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tabs\",\n          children: tasks ? tasks.map((obj, index) => {\n            return /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => {\n                setDomain(obj._id);\n              },\n              children: obj._id\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 37\n            }, this);\n          }) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), currentTasks ? currentTasks.map((week, ind) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"weeks\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"week col\",\n                children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: [\"Week \", week.week]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"questions\",\n                children: /*#__PURE__*/_jsxDEV(\"table\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                    children: currentTasks[ind].Questions.map((obj, index) => {\n                      return /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                          children: [index + 1, \". \"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 80,\n                          columnNumber: 69\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: obj\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 81,\n                          columnNumber: 69\n                        }, this)]\n                      }, index, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 79,\n                        columnNumber: 65\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 37\n            }, this)\n          }, ind, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 33\n          }, this);\n        }) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: modal,\n        onHide: () => setModal(false),\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Add new task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit(onSubmit),\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              type: 'text',\n              name: 'Domain',\n              label: \"Domain\",\n              required: true,\n              register: register,\n              errors: errors,\n              rules: {\n                required: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: 'text',\n              name: 'Week',\n              label: \"Week\",\n              required: true,\n              register: register,\n              errors: errors,\n              rules: {\n                required: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: 'text',\n              name: 'Question',\n              label: \"Question\",\n              required: true,\n              register: register,\n              errors: errors,\n              rules: {\n                required: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TasksManagement, \"vggELt5C8hRqrJa1aknkGvSABR0=\", false, function () {\n  return [useForm];\n});\n\n_c = TasksManagement;\n\nvar _c;\n\n$RefreshReg$(_c, \"TasksManagement\");","map":{"version":3,"sources":["D:/Project 2/frontend/src/pages/Manager/TasksManagement/TasksManagement.jsx"],"names":["React","useEffect","useState","Sidebar","PageHead","ManagerTabs","Modal","Input","useForm","axios","TasksManagement","modal","setModal","register","handleSubmit","formState","errors","criteriaMode","onSubmit","data","response","post","console","log","domain","setDomain","tasks","setTasks","currentTasks","setCurrentTasks","getTasks","get","undefined","_id","forEach","obj","sort","a","b","week","map","index","ind","Questions","required"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport './TasksManagement.scss'\r\nimport Sidebar from \"../../../components/Sidebar/Sidebar\";\r\nimport PageHead from \"../../../components/PageHead/PageHead\";\r\nimport { ManagerTabs } from \"../../../constants/PageTabs/Manager\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport Input from \"../../../components/RegistrationInput/RegistrationInput\";\r\nimport { useForm } from 'react-hook-form';\r\nimport axios from 'axios'\r\n\r\nexport default function TasksManagement() {\r\n\r\n    const [modal, setModal] = useState(false)\r\n\r\n    const { register, handleSubmit, formState: { errors } } = useForm({ criteriaMode: \"all\" });\r\n\r\n    async function onSubmit(data) {\r\n        const response = await axios.post('http://localhost:3001/manager/tasks', data)\r\n        console.log({ response })\r\n    }\r\n\r\n    const [domain, setDomain] = useState()\r\n    const [tasks, setTasks] = useState()\r\n    const [currentTasks, setCurrentTasks] = useState()\r\n\r\n    useEffect(() => {\r\n        async function getTasks() {\r\n            const response = await axios.get('http://localhost:3001/manager/tasks')\r\n            setTasks(response.data)\r\n        }\r\n        getTasks()\r\n    }, [])\r\n\r\n    useEffect(() => { \r\n        if (tasks && domain === undefined) {\r\n            setDomain(tasks[0]._id)\r\n        }\r\n        if (domain) {\r\n            tasks.forEach((obj) => {\r\n                if (obj._id === domain) {\r\n                    setCurrentTasks(obj.data)\r\n                }\r\n            })\r\n        }\r\n    }, [tasks, domain])\r\n    if(currentTasks){\r\n        currentTasks.sort((a,b)=>(a.week>b.week)? 1 : -1)\r\n    }\r\n    return (\r\n        <>\r\n            <Sidebar pages={ManagerTabs} current={'Tasks Management'} />\r\n            <div className=\"TasksManagement\">\r\n                <span className=\"addTask\" onClick={() => setModal(true)}>Add new task</span>\r\n                <PageHead title={'tasks Management'} />\r\n                <div className=\"content\">\r\n                    <div className=\"tabs\">\r\n                        {\r\n                            tasks ? tasks.map((obj, index) => {\r\n                                return (\r\n                                    <span key={index} onClick={() => { setDomain(obj._id) }}>{obj._id}</span>\r\n                                )\r\n                            }) : null\r\n                        }\r\n                    </div>\r\n                    {\r\n                        currentTasks ? currentTasks.map((week, ind) => {\r\n                            return (\r\n                                <div key={ind}>\r\n                                    <div className=\"weeks\">\r\n                                        <div className=\"week col\">\r\n                                            <h5>Week {week.week}</h5>\r\n                                        </div>\r\n                                        <div className=\"questions\">\r\n                                            <table>\r\n                                                <tbody>\r\n                                                    {\r\n                                                        currentTasks[ind].Questions.map((obj, index) => {\r\n                                                            return (\r\n                                                                <tr key={index}>\r\n                                                                    <td>{index + 1}. </td>\r\n                                                                    <td>{obj}</td>\r\n                                                                </tr>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }) : null\r\n                    }\r\n                </div>\r\n                <Modal show={modal} onHide={() => setModal(false)}>\r\n                    <Modal.Header>\r\n                        <h3>Add new task</h3>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n                            <Input type={'text'} name={'Domain'} label='Domain' required\r\n                                register={register} errors={errors} rules={{ required: true }} />\r\n\r\n                            <Input type={'text'} name={'Week'} label='Week' required\r\n                                register={register} errors={errors} rules={{ required: true }} />\r\n\r\n                            <Input type={'text'} name={'Question'} label='Question' required\r\n                                register={register} errors={errors} rules={{ required: true }} />\r\n\r\n                            <input type=\"submit\" />\r\n\r\n                        </form>\r\n\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}