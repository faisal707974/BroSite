{"ast":null,"code":"import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_RESET } from '../constants/loginConstant';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nexport const loginAction = (data, setErr) => {\n  var _s = $RefreshSig$();\n\n  return _s(async (dispatch, getstate) => {\n    _s();\n\n    const navigate = useNavigate();\n\n    try {\n      dispatch({\n        type: USER_LOGIN_REQUEST\n      });\n      const response = await axios.post('http://localhost:3001/login', data);\n\n      if (response.data.code == 401) {\n        setErr(response.data.message);\n      } else if (response.data.code == 403) {\n        setErr(response.data.message);\n      } else if (response.data.code == 200) {\n        // localStorage.setItem()\n        if (response.data.userInfo) navigate('/new_registration');\n        dispatch({\n          type: USER_LOGIN_SUCCESS,\n          payload: response.data\n        });\n      }\n    } catch (error) {}\n  }, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n    return [useNavigate];\n  });\n};","map":{"version":3,"sources":["D:/Project 2/frontend/src/redux/actions/loginAction.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGIN_RESET","axios","useNavigate","loginAction","data","setErr","dispatch","getstate","navigate","type","response","post","code","message","userInfo","payload","error"],"mappings":"AAAA,SAASA,kBAAT,EAA6BC,kBAA7B,EAAiDC,eAAjD,EAAkEC,gBAAlE,QAA0F,4BAA1F;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,IAAD,EAAOC,MAAP;AAAA;;AAAA,YAAkB,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAAA;;AACvE,UAAMC,QAAQ,GAAGN,WAAW,EAA5B;;AACA,QAAI;AACAI,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAEZ;AAAR,OAAD,CAAR;AACA,YAAMa,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAN,CAAW,6BAAX,EAA0CP,IAA1C,CAAvB;;AACA,UAAIM,QAAQ,CAACN,IAAT,CAAcQ,IAAd,IAAsB,GAA1B,EAA+B;AAC3BP,QAAAA,MAAM,CAACK,QAAQ,CAACN,IAAT,CAAcS,OAAf,CAAN;AACH,OAFD,MAEO,IAAIH,QAAQ,CAACN,IAAT,CAAcQ,IAAd,IAAsB,GAA1B,EAA+B;AAClCP,QAAAA,MAAM,CAACK,QAAQ,CAACN,IAAT,CAAcS,OAAf,CAAN;AACH,OAFM,MAEA,IAAIH,QAAQ,CAACN,IAAT,CAAcQ,IAAd,IAAsB,GAA1B,EAA+B;AAClC;AACA,YAAGF,QAAQ,CAACN,IAAT,CAAcU,QAAjB,EACAN,QAAQ,CAAC,mBAAD,CAAR;AACAF,QAAAA,QAAQ,CAAC;AAAEG,UAAAA,IAAI,EAAEX,kBAAR;AAA4BiB,UAAAA,OAAO,EAAEL,QAAQ,CAACN;AAA9C,SAAD,CAAR;AACH;AAGJ,KAfD,CAeE,OAAOY,KAAP,EAAc,CAEf;AACJ,GApB0B;AAAA,YACNd,WADM;AAAA;AAAA,CAApB","sourcesContent":["import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_RESET } from '../constants/loginConstant'\r\nimport axios from 'axios'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nexport const loginAction = (data, setErr) => async (dispatch, getstate) => {\r\n    const navigate = useNavigate()\r\n    try {\r\n        dispatch({ type: USER_LOGIN_REQUEST })\r\n        const response = await axios.post('http://localhost:3001/login', data)\r\n        if (response.data.code == 401) {\r\n            setErr(response.data.message)\r\n        } else if (response.data.code == 403) {\r\n            setErr(response.data.message)\r\n        } else if (response.data.code == 200) {\r\n            // localStorage.setItem()\r\n            if(response.data.userInfo)\r\n            navigate('/new_registration')\r\n            dispatch({ type: USER_LOGIN_SUCCESS, payload: response.data })\r\n        }\r\n\r\n\r\n    } catch (error) {\r\n\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}