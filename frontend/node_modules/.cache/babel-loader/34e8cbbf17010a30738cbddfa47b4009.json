{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project 2\\\\frontend\\\\src\\\\Utils\\\\ProtectedRoute.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProtectedRoute(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const {\n    isLoggedIn\n  } = useSelector(state => state.Login);\n  const user = localStorage.getItem('userInfo');\n  console.log({\n    user\n  });\n\n  if (user) {\n    return children;\n  } else {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 16\n    }, this);\n  }\n}\n\n_s(ProtectedRoute, \"877P/f/MnA4yuj3K53yr4WjuRPQ=\", false, function () {\n  return [useSelector];\n});\n\n_c = ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["D:/Project 2/frontend/src/Utils/ProtectedRoute.js"],"names":["React","useSelector","Navigate","ProtectedRoute","children","isLoggedIn","state","Login","user","localStorage","getItem","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAEA,eAAe,SAASC,cAAT,OAAsC;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAEjD,QAAM;AAAEC,IAAAA;AAAF,MAAiBJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,KAAlB,CAAlC;AACA,QAAMC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAb;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAACJ,IAAAA;AAAD,GAAZ;;AAIA,MAAIA,IAAJ,EAAU;AACN,WAAOJ,QAAP;AACH,GAFD,MAEO;AACH,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAsB,MAAA,OAAO;AAA7B;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;AACJ;;GAbuBD,c;UAEGF,W;;;KAFHE,c","sourcesContent":["import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nexport default function ProtectedRoute({ children }) {\r\n\r\n    const { isLoggedIn } = useSelector((state) => state.Login)\r\n    const user = localStorage.getItem('userInfo')\r\n    console.log({user})\r\n\r\n    \r\n\r\n    if (user) {\r\n        return children\r\n    } else {\r\n        return <Navigate to=\"/login\" replace />;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}