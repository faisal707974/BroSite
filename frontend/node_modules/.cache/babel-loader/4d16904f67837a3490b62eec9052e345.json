{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar editorOptions_1 = require(\"./editorOptions\");\n\nvar ace = (0, editorOptions_1.getAceInstance)();\n\nvar ace_builds_1 = require(\"ace-builds\");\n\nvar ext_split_1 = require(\"ace-builds/src-noconflict/ext-split\");\n\nvar PropTypes = require(\"prop-types\");\n\nvar React = require(\"react\");\n\nvar isEqual = require(\"lodash.isequal\");\n\nvar get = require(\"lodash.get\");\n\nvar SplitComponent =\n/** @class */\nfunction (_super) {\n  __extends(SplitComponent, _super);\n\n  function SplitComponent(props) {\n    var _this = _super.call(this, props) || this;\n\n    editorOptions_1.editorEvents.forEach(function (method) {\n      _this[method] = _this[method].bind(_this);\n    });\n    _this.debounce = editorOptions_1.debounce;\n    return _this;\n  }\n\n  SplitComponent.prototype.isInShadow = function (node) {\n    var parent = node && node.parentNode;\n\n    while (parent) {\n      if (parent.toString() === \"[object ShadowRoot]\") {\n        return true;\n      }\n\n      parent = parent.parentNode;\n    }\n\n    return false;\n  };\n\n  SplitComponent.prototype.componentDidMount = function () {\n    var _this = this;\n\n    var _a = this.props,\n        className = _a.className,\n        onBeforeLoad = _a.onBeforeLoad,\n        mode = _a.mode,\n        focus = _a.focus,\n        theme = _a.theme,\n        fontSize = _a.fontSize,\n        value = _a.value,\n        defaultValue = _a.defaultValue,\n        cursorStart = _a.cursorStart,\n        showGutter = _a.showGutter,\n        wrapEnabled = _a.wrapEnabled,\n        showPrintMargin = _a.showPrintMargin,\n        _b = _a.scrollMargin,\n        scrollMargin = _b === void 0 ? [0, 0, 0, 0] : _b,\n        keyboardHandler = _a.keyboardHandler,\n        onLoad = _a.onLoad,\n        commands = _a.commands,\n        annotations = _a.annotations,\n        markers = _a.markers,\n        splits = _a.splits;\n    this.editor = ace.edit(this.refEditor);\n\n    if (this.isInShadow(this.refEditor)) {\n      this.editor.renderer.attachToShadowRoot();\n    }\n\n    this.editor.setTheme(\"ace/theme/\".concat(theme));\n\n    if (onBeforeLoad) {\n      onBeforeLoad(ace);\n    }\n\n    var editorProps = Object.keys(this.props.editorProps);\n    var split = new ext_split_1.Split(this.editor.container, \"ace/theme/\".concat(theme), splits);\n    this.editor.env.split = split;\n    this.splitEditor = split.getEditor(0);\n    this.split = split; // in a split scenario we don't want a print margin for the entire application\n\n    this.editor.setShowPrintMargin(false);\n    this.editor.renderer.setShowGutter(false); // get a list of possible options to avoid 'misspelled option errors'\n\n    var availableOptions = this.splitEditor.$options;\n\n    if (this.props.debounceChangePeriod) {\n      this.onChange = this.debounce(this.onChange, this.props.debounceChangePeriod);\n    }\n\n    split.forEach(function (editor, index) {\n      for (var i = 0; i < editorProps.length; i++) {\n        editor[editorProps[i]] = _this.props.editorProps[editorProps[i]];\n      }\n\n      var defaultValueForEditor = get(defaultValue, index);\n      var valueForEditor = get(value, index, \"\");\n      editor.session.setUndoManager(new ace.UndoManager());\n      editor.setTheme(\"ace/theme/\".concat(theme));\n      editor.renderer.setScrollMargin(scrollMargin[0], scrollMargin[1], scrollMargin[2], scrollMargin[3]);\n      editor.getSession().setMode(\"ace/mode/\".concat(mode));\n      editor.setFontSize(fontSize);\n      editor.renderer.setShowGutter(showGutter);\n      editor.getSession().setUseWrapMode(wrapEnabled);\n      editor.setShowPrintMargin(showPrintMargin);\n      editor.on(\"focus\", _this.onFocus);\n      editor.on(\"blur\", _this.onBlur);\n      editor.on(\"input\", _this.onInput);\n      editor.on(\"copy\", _this.onCopy);\n      editor.on(\"paste\", _this.onPaste);\n      editor.on(\"change\", _this.onChange);\n      editor.getSession().selection.on(\"changeSelection\", _this.onSelectionChange);\n      editor.getSession().selection.on(\"changeCursor\", _this.onCursorChange);\n      editor.session.on(\"changeScrollTop\", _this.onScroll);\n      editor.setValue(defaultValueForEditor === undefined ? valueForEditor : defaultValueForEditor, cursorStart);\n      var newAnnotations = get(annotations, index, []);\n      var newMarkers = get(markers, index, []);\n      editor.getSession().setAnnotations(newAnnotations);\n\n      if (newMarkers && newMarkers.length > 0) {\n        _this.handleMarkers(newMarkers, editor);\n      }\n\n      for (var i = 0; i < editorOptions_1.editorOptions.length; i++) {\n        var option = editorOptions_1.editorOptions[i];\n\n        if (availableOptions.hasOwnProperty(option)) {\n          editor.setOption(option, _this.props[option]);\n        } else if (_this.props[option]) {\n          console.warn(\"ReaceAce: editor option \".concat(option, \" was activated but not found. Did you need to import a related tool or did you possibly mispell the option?\"));\n        }\n      }\n\n      _this.handleOptions(_this.props, editor);\n\n      if (Array.isArray(commands)) {\n        commands.forEach(function (command) {\n          if (typeof command.exec === \"string\") {\n            editor.commands.bindKey(command.bindKey, command.exec);\n          } else {\n            editor.commands.addCommand(command);\n          }\n        });\n      }\n\n      if (keyboardHandler) {\n        editor.setKeyboardHandler(\"ace/keyboard/\" + keyboardHandler);\n      }\n    });\n\n    if (className) {\n      this.refEditor.className += \" \" + className;\n    }\n\n    if (focus) {\n      this.splitEditor.focus();\n    }\n\n    var sp = this.editor.env.split;\n    sp.setOrientation(this.props.orientation === \"below\" ? sp.BELOW : sp.BESIDE);\n    sp.resize(true);\n\n    if (onLoad) {\n      onLoad(sp);\n    }\n  };\n\n  SplitComponent.prototype.componentDidUpdate = function (prevProps) {\n    var _this = this;\n\n    var oldProps = prevProps;\n    var nextProps = this.props;\n    var split = this.editor.env.split;\n\n    if (nextProps.splits !== oldProps.splits) {\n      split.setSplits(nextProps.splits);\n    }\n\n    if (nextProps.orientation !== oldProps.orientation) {\n      split.setOrientation(nextProps.orientation === \"below\" ? split.BELOW : split.BESIDE);\n    }\n\n    split.forEach(function (editor, index) {\n      if (nextProps.mode !== oldProps.mode) {\n        editor.getSession().setMode(\"ace/mode/\" + nextProps.mode);\n      }\n\n      if (nextProps.keyboardHandler !== oldProps.keyboardHandler) {\n        if (nextProps.keyboardHandler) {\n          editor.setKeyboardHandler(\"ace/keyboard/\" + nextProps.keyboardHandler);\n        } else {\n          editor.setKeyboardHandler(null);\n        }\n      }\n\n      if (nextProps.fontSize !== oldProps.fontSize) {\n        editor.setFontSize(nextProps.fontSize);\n      }\n\n      if (nextProps.wrapEnabled !== oldProps.wrapEnabled) {\n        editor.getSession().setUseWrapMode(nextProps.wrapEnabled);\n      }\n\n      if (nextProps.showPrintMargin !== oldProps.showPrintMargin) {\n        editor.setShowPrintMargin(nextProps.showPrintMargin);\n      }\n\n      if (nextProps.showGutter !== oldProps.showGutter) {\n        editor.renderer.setShowGutter(nextProps.showGutter);\n      }\n\n      for (var i = 0; i < editorOptions_1.editorOptions.length; i++) {\n        var option = editorOptions_1.editorOptions[i];\n\n        if (nextProps[option] !== oldProps[option]) {\n          editor.setOption(option, nextProps[option]);\n        }\n      }\n\n      if (!isEqual(nextProps.setOptions, oldProps.setOptions)) {\n        _this.handleOptions(nextProps, editor);\n      }\n\n      var nextValue = get(nextProps.value, index, \"\");\n\n      if (editor.getValue() !== nextValue) {\n        // editor.setValue is a synchronous function call, change event is emitted before setValue return.\n        _this.silent = true;\n        var pos = editor.session.selection.toJSON();\n        editor.setValue(nextValue, nextProps.cursorStart);\n        editor.session.selection.fromJSON(pos);\n        _this.silent = false;\n      }\n\n      var newAnnotations = get(nextProps.annotations, index, []);\n      var oldAnnotations = get(oldProps.annotations, index, []);\n\n      if (!isEqual(newAnnotations, oldAnnotations)) {\n        editor.getSession().setAnnotations(newAnnotations);\n      }\n\n      var newMarkers = get(nextProps.markers, index, []);\n      var oldMarkers = get(oldProps.markers, index, []);\n\n      if (!isEqual(newMarkers, oldMarkers) && Array.isArray(newMarkers)) {\n        _this.handleMarkers(newMarkers, editor);\n      }\n    });\n\n    if (nextProps.className !== oldProps.className) {\n      var appliedClasses = this.refEditor.className;\n      var appliedClassesArray_1 = appliedClasses.trim().split(\" \");\n      var oldClassesArray = oldProps.className.trim().split(\" \");\n      oldClassesArray.forEach(function (oldClass) {\n        var index = appliedClassesArray_1.indexOf(oldClass);\n        appliedClassesArray_1.splice(index, 1);\n      });\n      this.refEditor.className = \" \" + nextProps.className + \" \" + appliedClassesArray_1.join(\" \");\n    }\n\n    if (nextProps.theme !== oldProps.theme) {\n      split.setTheme(\"ace/theme/\" + nextProps.theme);\n    }\n\n    if (nextProps.focus && !oldProps.focus) {\n      this.splitEditor.focus();\n    }\n\n    if (nextProps.height !== this.props.height || nextProps.width !== this.props.width) {\n      this.editor.resize();\n    }\n  };\n\n  SplitComponent.prototype.componentWillUnmount = function () {\n    this.editor.destroy();\n    this.editor = null;\n  };\n\n  SplitComponent.prototype.onChange = function (event) {\n    if (this.props.onChange && !this.silent) {\n      var value_1 = [];\n      this.editor.env.split.forEach(function (editor) {\n        value_1.push(editor.getValue());\n      });\n      this.props.onChange(value_1, event);\n    }\n  };\n\n  SplitComponent.prototype.onSelectionChange = function (event) {\n    if (this.props.onSelectionChange) {\n      var value_2 = [];\n      this.editor.env.split.forEach(function (editor) {\n        value_2.push(editor.getSelection());\n      });\n      this.props.onSelectionChange(value_2, event);\n    }\n  };\n\n  SplitComponent.prototype.onCursorChange = function (event) {\n    if (this.props.onCursorChange) {\n      var value_3 = [];\n      this.editor.env.split.forEach(function (editor) {\n        value_3.push(editor.getSelection());\n      });\n      this.props.onCursorChange(value_3, event);\n    }\n  };\n\n  SplitComponent.prototype.onFocus = function (event) {\n    if (this.props.onFocus) {\n      this.props.onFocus(event);\n    }\n  };\n\n  SplitComponent.prototype.onInput = function (event) {\n    if (this.props.onInput) {\n      this.props.onInput(event);\n    }\n  };\n\n  SplitComponent.prototype.onBlur = function (event) {\n    if (this.props.onBlur) {\n      this.props.onBlur(event);\n    }\n  };\n\n  SplitComponent.prototype.onCopy = function (text) {\n    if (this.props.onCopy) {\n      this.props.onCopy(text);\n    }\n  };\n\n  SplitComponent.prototype.onPaste = function (text) {\n    if (this.props.onPaste) {\n      this.props.onPaste(text);\n    }\n  };\n\n  SplitComponent.prototype.onScroll = function () {\n    if (this.props.onScroll) {\n      this.props.onScroll(this.editor);\n    }\n  };\n\n  SplitComponent.prototype.handleOptions = function (props, editor) {\n    var setOptions = Object.keys(props.setOptions);\n\n    for (var y = 0; y < setOptions.length; y++) {\n      editor.setOption(setOptions[y], props.setOptions[setOptions[y]]);\n    }\n  };\n\n  SplitComponent.prototype.handleMarkers = function (markers, editor) {\n    // remove foreground markers\n    var currentMarkers = editor.getSession().getMarkers(true);\n\n    for (var i in currentMarkers) {\n      if (currentMarkers.hasOwnProperty(i)) {\n        editor.getSession().removeMarker(currentMarkers[i].id);\n      }\n    } // remove background markers\n\n\n    currentMarkers = editor.getSession().getMarkers(false);\n\n    for (var i in currentMarkers) {\n      if (currentMarkers.hasOwnProperty(i)) {\n        editor.getSession().removeMarker(currentMarkers[i].id);\n      }\n    } // add new markers\n\n\n    markers.forEach(function (_a) {\n      var startRow = _a.startRow,\n          startCol = _a.startCol,\n          endRow = _a.endRow,\n          endCol = _a.endCol,\n          className = _a.className,\n          type = _a.type,\n          _b = _a.inFront,\n          inFront = _b === void 0 ? false : _b;\n      var range = new ace_builds_1.Range(startRow, startCol, endRow, endCol);\n      editor.getSession().addMarker(range, className, type, inFront);\n    });\n  };\n\n  SplitComponent.prototype.updateRef = function (item) {\n    this.refEditor = item;\n  };\n\n  SplitComponent.prototype.render = function () {\n    var _a = this.props,\n        name = _a.name,\n        width = _a.width,\n        height = _a.height,\n        style = _a.style;\n\n    var divStyle = __assign({\n      width: width,\n      height: height\n    }, style);\n\n    return React.createElement(\"div\", {\n      ref: this.updateRef,\n      id: name,\n      style: divStyle\n    });\n  };\n\n  SplitComponent.propTypes = {\n    className: PropTypes.string,\n    debounceChangePeriod: PropTypes.number,\n    defaultValue: PropTypes.arrayOf(PropTypes.string),\n    focus: PropTypes.bool,\n    fontSize: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    height: PropTypes.string,\n    mode: PropTypes.string,\n    name: PropTypes.string,\n    onBlur: PropTypes.func,\n    onChange: PropTypes.func,\n    onCopy: PropTypes.func,\n    onFocus: PropTypes.func,\n    onInput: PropTypes.func,\n    onLoad: PropTypes.func,\n    onPaste: PropTypes.func,\n    onScroll: PropTypes.func,\n    orientation: PropTypes.string,\n    showGutter: PropTypes.bool,\n    splits: PropTypes.number,\n    theme: PropTypes.string,\n    value: PropTypes.arrayOf(PropTypes.string),\n    width: PropTypes.string,\n    onSelectionChange: PropTypes.func,\n    onCursorChange: PropTypes.func,\n    onBeforeLoad: PropTypes.func,\n    minLines: PropTypes.number,\n    maxLines: PropTypes.number,\n    readOnly: PropTypes.bool,\n    highlightActiveLine: PropTypes.bool,\n    tabSize: PropTypes.number,\n    showPrintMargin: PropTypes.bool,\n    cursorStart: PropTypes.number,\n    editorProps: PropTypes.object,\n    setOptions: PropTypes.object,\n    style: PropTypes.object,\n    scrollMargin: PropTypes.array,\n    annotations: PropTypes.array,\n    markers: PropTypes.array,\n    keyboardHandler: PropTypes.string,\n    wrapEnabled: PropTypes.bool,\n    enableBasicAutocompletion: PropTypes.oneOfType([PropTypes.bool, PropTypes.array]),\n    enableLiveAutocompletion: PropTypes.oneOfType([PropTypes.bool, PropTypes.array]),\n    commands: PropTypes.array\n  };\n  SplitComponent.defaultProps = {\n    name: \"ace-editor\",\n    focus: false,\n    orientation: \"beside\",\n    splits: 2,\n    mode: \"\",\n    theme: \"\",\n    height: \"500px\",\n    width: \"500px\",\n    value: [],\n    fontSize: 12,\n    showGutter: true,\n    onChange: null,\n    onPaste: null,\n    onLoad: null,\n    onScroll: null,\n    minLines: null,\n    maxLines: null,\n    readOnly: false,\n    highlightActiveLine: true,\n    showPrintMargin: true,\n    tabSize: 4,\n    cursorStart: 1,\n    editorProps: {},\n    style: {},\n    scrollMargin: [0, 0, 0, 0],\n    setOptions: {},\n    wrapEnabled: false,\n    enableBasicAutocompletion: false,\n    enableLiveAutocompletion: false\n  };\n  return SplitComponent;\n}(React.Component);\n\nexports.default = SplitComponent;","map":{"version":3,"mappings":"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","names":["ace","isEqual","require","get","__extends","props","_super","editorOptions_1","forEach","_this","method","bind","debounce","SplitComponent","node","parent","parentNode","toString","className","onBeforeLoad","mode","focus","theme","fontSize","value","defaultValue","cursorStart","showGutter","wrapEnabled","showPrintMargin","_b","scrollMargin","keyboardHandler","onLoad","commands","annotations","markers","splits","editor","edit","refEditor","isInShadow","renderer","attachToShadowRoot","setTheme","editorProps","Object","keys","split","ext_split_1","container","env","splitEditor","getEditor","setShowPrintMargin","setShowGutter","availableOptions","$options","debounceChangePeriod","onChange","index","i","length","defaultValueForEditor","valueForEditor","session","setUndoManager","UndoManager","setScrollMargin","getSession","setMode","setFontSize","setUseWrapMode","on","onFocus","onBlur","onInput","onCopy","onPaste","selection","onSelectionChange","onCursorChange","onScroll","setValue","undefined","newAnnotations","newMarkers","setAnnotations","handleMarkers","option","hasOwnProperty","setOption","console","warn","handleOptions","Array","isArray","command","exec","bindKey","addCommand","setKeyboardHandler","sp","setOrientation","orientation","BELOW","BESIDE","resize","prevProps","oldProps","nextProps","setSplits","setOptions","nextValue","getValue","silent","pos","toJSON","fromJSON","oldAnnotations","oldMarkers","appliedClasses","appliedClassesArray_1","trim","oldClassesArray","indexOf","oldClass","splice","join","height","width","destroy","event","value_1","push","value_2","getSelection","value_3","text","y","currentMarkers","getMarkers","removeMarker","id","_a","startRow","startCol","endRow","endCol","type","inFront","range","ace_builds_1","addMarker","item","name","style","divStyle","React","ref","updateRef","PropTypes","string","number","arrayOf","bool","oneOfType","func","minLines","maxLines","readOnly","highlightActiveLine","tabSize","object","array","enableBasicAutocompletion","enableLiveAutocompletion","Component"],"sources":["D:\\Project 2\\frontend\\node_modules\\react-ace\\src\\split.tsx"],"sourcesContent":["import {\n  debounce,\n  editorEvents,\n  editorOptions,\n  getAceInstance\n} from \"./editorOptions\";\nconst ace = getAceInstance();\nimport { Ace, Range } from \"ace-builds\";\nimport Editor = Ace.Editor;\nimport { Split } from \"ace-builds/src-noconflict/ext-split\";\nimport * as PropTypes from \"prop-types\";\nimport * as React from \"react\";\nconst isEqual = require(\"lodash.isequal\");\nconst get = require(\"lodash.get\");\nimport {\n  IAceOptions,\n  IAnnotation,\n  ICommand,\n  IEditorProps,\n  IMarker\n} from \"./types\";\n\ninterface IAceEditorClass extends Editor {\n  [index: string]: any;\n  $options?: any;\n}\n\nexport interface ISplitEditorProps {\n  [index: string]: any;\n  name?: string;\n  style?: object;\n  /** For available modes see https://github.com/thlorenz/brace/tree/master/mode */\n  mode?: string;\n  /** For available themes see https://github.com/thlorenz/brace/tree/master/theme */\n  theme?: string;\n  height?: string;\n  width?: string;\n  className?: string;\n  fontSize?: number | string;\n  showGutter?: boolean;\n  showPrintMargin?: boolean;\n  highlightActiveLine?: boolean;\n  focus?: boolean;\n  splits: number;\n  debounceChangePeriod?: number;\n  cursorStart?: number;\n  wrapEnabled?: boolean;\n  readOnly?: boolean;\n  minLines?: number;\n  maxLines?: number;\n  enableBasicAutocompletion?: boolean | string[];\n  enableLiveAutocompletion?: boolean | string[];\n  tabSize?: number;\n  value?: string[];\n  defaultValue?: string[];\n  scrollMargin?: number[];\n  orientation?: string;\n  onSelectionChange?: (value: any, event?: any) => void;\n  onCursorChange?: (value: any, event?: any) => void;\n  onInput?: (event?: any) => void;\n  onLoad?: (editor: IEditorProps) => void;\n  onBeforeLoad?: (ace: any) => void;\n  onChange?: (value: string[], event?: any) => void;\n  onSelection?: (selectedText: string, event?: any) => void;\n  onCopy?: (value: string) => void;\n  onPaste?: (value: string) => void;\n  onFocus?: (value: Event) => void;\n  onBlur?: (value: Event) => void;\n  onScroll?: (editor: IEditorProps) => void;\n  editorProps?: IEditorProps;\n  setOptions?: IAceOptions;\n  keyboardHandler?: string;\n  commands?: ICommand[];\n  annotations?: IAnnotation[][];\n  markers?: IMarker[][];\n}\n\nexport default class SplitComponent extends React.Component<\n  ISplitEditorProps,\n  undefined\n> {\n  [index: string]: any;\n\n  public static propTypes: PropTypes.ValidationMap<ISplitEditorProps> = {\n    className: PropTypes.string,\n    debounceChangePeriod: PropTypes.number,\n    defaultValue: PropTypes.arrayOf(PropTypes.string),\n    focus: PropTypes.bool,\n    fontSize: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    height: PropTypes.string,\n    mode: PropTypes.string,\n    name: PropTypes.string,\n    onBlur: PropTypes.func,\n    onChange: PropTypes.func,\n    onCopy: PropTypes.func,\n    onFocus: PropTypes.func,\n    onInput: PropTypes.func,\n    onLoad: PropTypes.func,\n    onPaste: PropTypes.func,\n    onScroll: PropTypes.func,\n    orientation: PropTypes.string,\n    showGutter: PropTypes.bool,\n    splits: PropTypes.number,\n    theme: PropTypes.string,\n    value: PropTypes.arrayOf(PropTypes.string),\n    width: PropTypes.string,\n    onSelectionChange: PropTypes.func,\n    onCursorChange: PropTypes.func,\n    onBeforeLoad: PropTypes.func,\n    minLines: PropTypes.number,\n    maxLines: PropTypes.number,\n    readOnly: PropTypes.bool,\n    highlightActiveLine: PropTypes.bool,\n    tabSize: PropTypes.number,\n    showPrintMargin: PropTypes.bool,\n    cursorStart: PropTypes.number,\n    editorProps: PropTypes.object,\n    setOptions: PropTypes.object,\n    style: PropTypes.object,\n    scrollMargin: PropTypes.array,\n    annotations: PropTypes.array,\n    markers: PropTypes.array,\n    keyboardHandler: PropTypes.string,\n    wrapEnabled: PropTypes.bool,\n    enableBasicAutocompletion: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.array\n    ]),\n    enableLiveAutocompletion: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.array\n    ]),\n    commands: PropTypes.array\n  };\n  public static defaultProps: Partial<ISplitEditorProps> = {\n    name: \"ace-editor\",\n    focus: false,\n    orientation: \"beside\",\n    splits: 2,\n    mode: \"\",\n    theme: \"\",\n    height: \"500px\",\n    width: \"500px\",\n    value: [],\n    fontSize: 12,\n    showGutter: true,\n    onChange: null,\n    onPaste: null,\n    onLoad: null,\n    onScroll: null,\n    minLines: null,\n    maxLines: null,\n    readOnly: false,\n    highlightActiveLine: true,\n    showPrintMargin: true,\n    tabSize: 4,\n    cursorStart: 1,\n    editorProps: {},\n    style: {},\n    scrollMargin: [0, 0, 0, 0],\n    setOptions: {},\n    wrapEnabled: false,\n    enableBasicAutocompletion: false,\n    enableLiveAutocompletion: false\n  };\n  public editor: IAceEditorClass;\n  public refEditor: HTMLElement;\n  public silent: boolean;\n  public split: IAceEditorClass;\n  public splitEditor: IAceEditorClass;\n  public debounce: (fn: any, delay: number) => (...args: any) => void;\n  constructor(props: ISplitEditorProps) {\n    super(props);\n    editorEvents.forEach(method => {\n      this[method] = this[method].bind(this);\n    });\n    this.debounce = debounce;\n  }\n  public isInShadow(node: HTMLElement): boolean {\n    let parent = node && node.parentNode;\n    while (parent) {\n      if (parent.toString() === \"[object ShadowRoot]\") {\n        return true;\n      }\n      parent = parent.parentNode;\n    }\n    return false;\n  }\n  public componentDidMount() {\n    const {\n      className,\n      onBeforeLoad,\n      mode,\n      focus,\n      theme,\n      fontSize,\n      value,\n      defaultValue,\n      cursorStart,\n      showGutter,\n      wrapEnabled,\n      showPrintMargin,\n      scrollMargin = [0, 0, 0, 0],\n      keyboardHandler,\n      onLoad,\n      commands,\n      annotations,\n      markers,\n      splits\n    } = this.props;\n\n    this.editor = ace.edit(this.refEditor);\n    if (this.isInShadow(this.refEditor)) {\n      this.editor.renderer.attachToShadowRoot();\n    }\n    this.editor.setTheme(`ace/theme/${theme}`);\n\n    if (onBeforeLoad) {\n      onBeforeLoad(ace);\n    }\n\n    const editorProps = Object.keys(this.props.editorProps);\n\n    const split = new Split(\n      this.editor.container,\n      `ace/theme/${theme}`,\n      splits\n    );\n    this.editor.env.split = split;\n\n    this.splitEditor = split.getEditor(0);\n    this.split = split;\n    // in a split scenario we don't want a print margin for the entire application\n    this.editor.setShowPrintMargin(false);\n    this.editor.renderer.setShowGutter(false);\n    // get a list of possible options to avoid 'misspelled option errors'\n    const availableOptions = this.splitEditor.$options;\n    if (this.props.debounceChangePeriod) {\n      this.onChange = this.debounce(\n        this.onChange,\n        this.props.debounceChangePeriod\n      );\n    }\n    split.forEach((editor: IAceEditorClass, index: number) => {\n      for (let i = 0; i < editorProps.length; i++) {\n        editor[editorProps[i]] = this.props.editorProps[editorProps[i]];\n      }\n      const defaultValueForEditor = get(defaultValue, index);\n      const valueForEditor = get(value, index, \"\");\n      editor.session.setUndoManager(new ace.UndoManager());\n      editor.setTheme(`ace/theme/${theme}`);\n      editor.renderer.setScrollMargin(\n        scrollMargin[0],\n        scrollMargin[1],\n        scrollMargin[2],\n        scrollMargin[3]\n      );\n      editor.getSession().setMode(`ace/mode/${mode}`);\n      editor.setFontSize(fontSize as any);\n      editor.renderer.setShowGutter(showGutter);\n      editor.getSession().setUseWrapMode(wrapEnabled);\n      editor.setShowPrintMargin(showPrintMargin);\n      editor.on(\"focus\", this.onFocus);\n      editor.on(\"blur\", this.onBlur);\n      editor.on(\"input\" as any, this.onInput);\n      editor.on(\"copy\", this.onCopy as any);\n      editor.on(\"paste\", this.onPaste as any);\n      editor.on(\"change\", this.onChange);\n      editor\n        .getSession()\n        .selection.on(\"changeSelection\", this.onSelectionChange);\n      editor.getSession().selection.on(\"changeCursor\", this.onCursorChange);\n      editor.session.on(\"changeScrollTop\", this.onScroll);\n      editor.setValue(\n        defaultValueForEditor === undefined\n          ? valueForEditor\n          : defaultValueForEditor,\n        cursorStart\n      );\n      const newAnnotations = get(annotations, index, []);\n      const newMarkers = get(markers, index, []);\n      editor.getSession().setAnnotations(newAnnotations);\n      if (newMarkers && newMarkers.length > 0) {\n        this.handleMarkers(newMarkers, editor);\n      }\n\n      for (let i = 0; i < editorOptions.length; i++) {\n        const option = editorOptions[i];\n        if (availableOptions.hasOwnProperty(option)) {\n          editor.setOption(option as any, this.props[option]);\n        } else if (this.props[option]) {\n          console.warn(\n            `ReaceAce: editor option ${option} was activated but not found. Did you need to import a related tool or did you possibly mispell the option?`\n          );\n        }\n      }\n      this.handleOptions(this.props, editor);\n\n      if (Array.isArray(commands)) {\n        commands.forEach(command => {\n          if (typeof command.exec === \"string\") {\n            (editor.commands as any).bindKey(command.bindKey, command.exec);\n          } else {\n            (editor.commands as any).addCommand(command);\n          }\n        });\n      }\n\n      if (keyboardHandler) {\n        editor.setKeyboardHandler(\"ace/keyboard/\" + keyboardHandler);\n      }\n    });\n\n    if (className) {\n      this.refEditor.className += \" \" + className;\n    }\n\n    if (focus) {\n      this.splitEditor.focus();\n    }\n\n    const sp = this.editor.env.split;\n    sp.setOrientation(\n      this.props.orientation === \"below\" ? sp.BELOW : sp.BESIDE\n    );\n    sp.resize(true);\n    if (onLoad) {\n      onLoad(sp);\n    }\n  }\n\n  public componentDidUpdate(prevProps: ISplitEditorProps) {\n    const oldProps = prevProps;\n    const nextProps = this.props;\n\n    const split = this.editor.env.split;\n\n    if (nextProps.splits !== oldProps.splits) {\n      split.setSplits(nextProps.splits);\n    }\n\n    if (nextProps.orientation !== oldProps.orientation) {\n      split.setOrientation(\n        nextProps.orientation === \"below\" ? split.BELOW : split.BESIDE\n      );\n    }\n\n    split.forEach((editor: IAceEditorClass, index: number) => {\n      if (nextProps.mode !== oldProps.mode) {\n        editor.getSession().setMode(\"ace/mode/\" + nextProps.mode);\n      }\n      if (nextProps.keyboardHandler !== oldProps.keyboardHandler) {\n        if (nextProps.keyboardHandler) {\n          editor.setKeyboardHandler(\n            \"ace/keyboard/\" + nextProps.keyboardHandler\n          );\n        } else {\n          editor.setKeyboardHandler(null);\n        }\n      }\n      if (nextProps.fontSize !== oldProps.fontSize) {\n        editor.setFontSize(nextProps.fontSize as any);\n      }\n      if (nextProps.wrapEnabled !== oldProps.wrapEnabled) {\n        editor.getSession().setUseWrapMode(nextProps.wrapEnabled);\n      }\n      if (nextProps.showPrintMargin !== oldProps.showPrintMargin) {\n        editor.setShowPrintMargin(nextProps.showPrintMargin);\n      }\n      if (nextProps.showGutter !== oldProps.showGutter) {\n        editor.renderer.setShowGutter(nextProps.showGutter);\n      }\n\n      for (let i = 0; i < editorOptions.length; i++) {\n        const option = editorOptions[i];\n        if (nextProps[option] !== oldProps[option]) {\n          editor.setOption(option as any, nextProps[option]);\n        }\n      }\n      if (!isEqual(nextProps.setOptions, oldProps.setOptions)) {\n        this.handleOptions(nextProps, editor);\n      }\n      const nextValue = get(nextProps.value, index, \"\");\n      if (editor.getValue() !== nextValue) {\n        // editor.setValue is a synchronous function call, change event is emitted before setValue return.\n        this.silent = true;\n        const pos = (editor.session.selection as any).toJSON();\n        editor.setValue(nextValue, nextProps.cursorStart);\n        (editor.session.selection as any).fromJSON(pos);\n        this.silent = false;\n      }\n      const newAnnotations = get(nextProps.annotations, index, []);\n      const oldAnnotations = get(oldProps.annotations, index, []);\n      if (!isEqual(newAnnotations, oldAnnotations)) {\n        editor.getSession().setAnnotations(newAnnotations);\n      }\n\n      const newMarkers = get(nextProps.markers, index, []);\n      const oldMarkers = get(oldProps.markers, index, []);\n      if (!isEqual(newMarkers, oldMarkers) && Array.isArray(newMarkers)) {\n        this.handleMarkers(newMarkers, editor);\n      }\n    });\n\n    if (nextProps.className !== oldProps.className) {\n      const appliedClasses = this.refEditor.className;\n      const appliedClassesArray = appliedClasses.trim().split(\" \");\n      const oldClassesArray = oldProps.className.trim().split(\" \");\n      oldClassesArray.forEach(oldClass => {\n        const index = appliedClassesArray.indexOf(oldClass);\n        appliedClassesArray.splice(index, 1);\n      });\n      this.refEditor.className =\n        \" \" + nextProps.className + \" \" + appliedClassesArray.join(\" \");\n    }\n\n    if (nextProps.theme !== oldProps.theme) {\n      split.setTheme(\"ace/theme/\" + nextProps.theme);\n    }\n\n    if (nextProps.focus && !oldProps.focus) {\n      this.splitEditor.focus();\n    }\n    if (\n      nextProps.height !== this.props.height ||\n      nextProps.width !== this.props.width\n    ) {\n      this.editor.resize();\n    }\n  }\n\n  public componentWillUnmount() {\n    this.editor.destroy();\n    this.editor = null;\n  }\n\n  public onChange(event: any) {\n    if (this.props.onChange && !this.silent) {\n      const value: any = [];\n      this.editor.env.split.forEach((editor: IAceEditorClass) => {\n        value.push(editor.getValue());\n      });\n      this.props.onChange(value, event);\n    }\n  }\n\n  public onSelectionChange(event: any) {\n    if (this.props.onSelectionChange) {\n      const value: any = [];\n      this.editor.env.split.forEach((editor: IAceEditorClass) => {\n        value.push(editor.getSelection());\n      });\n      this.props.onSelectionChange(value, event);\n    }\n  }\n  public onCursorChange(event: any) {\n    if (this.props.onCursorChange) {\n      const value: any = [];\n      this.editor.env.split.forEach((editor: IAceEditorClass) => {\n        value.push(editor.getSelection());\n      });\n      this.props.onCursorChange(value, event);\n    }\n  }\n  public onFocus(event: any) {\n    if (this.props.onFocus) {\n      this.props.onFocus(event);\n    }\n  }\n\n  public onInput(event: any) {\n    if (this.props.onInput) {\n      this.props.onInput(event);\n    }\n  }\n\n  public onBlur(event: any) {\n    if (this.props.onBlur) {\n      this.props.onBlur(event);\n    }\n  }\n\n  public onCopy(text: string) {\n    if (this.props.onCopy) {\n      this.props.onCopy(text);\n    }\n  }\n\n  public onPaste(text: string) {\n    if (this.props.onPaste) {\n      this.props.onPaste(text);\n    }\n  }\n\n  public onScroll() {\n    if (this.props.onScroll) {\n      this.props.onScroll(this.editor);\n    }\n  }\n\n  public handleOptions(props: ISplitEditorProps, editor: IAceEditorClass) {\n    const setOptions = Object.keys(props.setOptions);\n    for (let y = 0; y < setOptions.length; y++) {\n      editor.setOption(setOptions[y] as any, props.setOptions[setOptions[y]]);\n    }\n  }\n\n  public handleMarkers(markers: IMarker[], editor: IAceEditorClass) {\n    // remove foreground markers\n    let currentMarkers = editor.getSession().getMarkers(true);\n    for (const i in currentMarkers) {\n      if (currentMarkers.hasOwnProperty(i)) {\n        editor.getSession().removeMarker(currentMarkers[i].id);\n      }\n    }\n    // remove background markers\n    currentMarkers = editor.getSession().getMarkers(false);\n    for (const i in currentMarkers) {\n      if (currentMarkers.hasOwnProperty(i)) {\n        editor.getSession().removeMarker(currentMarkers[i].id);\n      }\n    }\n    // add new markers\n    markers.forEach(\n      ({\n        startRow,\n        startCol,\n        endRow,\n        endCol,\n        className,\n        type,\n        inFront = false\n      }) => {\n        const range = new Range(startRow, startCol, endRow, endCol);\n        editor\n          .getSession()\n          .addMarker(range as any, className, type as any, inFront);\n      }\n    );\n  }\n\n  public updateRef(item: HTMLElement) {\n    this.refEditor = item;\n  }\n\n  public render() {\n    const { name, width, height, style } = this.props;\n    const divStyle = { width, height, ...style };\n    return <div ref={this.updateRef} id={name} style={divStyle} />;\n  }\n}\n"]},"metadata":{},"sourceType":"script"}