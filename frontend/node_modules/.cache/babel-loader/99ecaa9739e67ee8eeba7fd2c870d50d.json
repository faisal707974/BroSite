{"ast":null,"code":"// import  React,{useState} from 'react';\n// import Box from '@mui/material/Box';\n// import Modal from '@mui/material/Modal';\n// import ReactCrop from 'react-image-crop'\n// import 'react-image-crop/dist/ReactCrop.css'\n// import { Input } from '@mui/material';\n// import Button from '@mui/material/Button';\n// const style = {\n//     position: 'absolute',\n//     top: '50%',\n//     left: '50%',\n//     transform: 'translate(-50%, -50%)',\n//     width: 700,\n//     bgcolor: 'background.paper',\n//     boxShadow: 30,\n//     pt: 4,\n//     px: 20,\n//     pb: 3,\n//   };\n// function Crop(props) {\n//   const {result,setResult} = props ;\n//     const [src,selectFile] = useState(null);\n//     const [image , setImage] = useState(\"\");\n//     const [crop, setCrop] = useState({ aspect: 1 / 1 })\n//     const handleFileChange = e => {\n//         e.preventDefault();\n//         selectFile(URL.createObjectURL(e.target.files[0]))\n//     }\n//     const [open, setOpen] = useState(false);\n//     const handleOpen = () => {\n//       setOpen(true);\n//     };\n//     const handleClose = () => {\n//       selectFile(null)\n//       setImage(\"\")\n//       setCrop({ aspect: 1 / 1})\n//       setOpen(false);\n//     };\n//     function getCroppedImg() {\n//       const canvas = document.createElement(\"canvas\");\n//       const scaleX = image.naturalWidth / image.width;\n//       const scaleY = image.naturalHeight / image.height;\n//       canvas.width = crop.width;\n//       canvas.height = crop.height;\n//       const ctx = canvas.getContext(\"2d\");\n//       // New lines to be added\n//       const pixelRatio = window.devicePixelRatio;\n//       canvas.width = crop.width * pixelRatio;\n//       canvas.height = crop.height * pixelRatio;\n//       ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n//       ctx.imageSmoothingQuality = \"high\";\n//       ctx.drawImage(\n//         image,\n//         crop.x * scaleX,\n//         crop.y * scaleY,\n//         crop.width * scaleX,\n//         crop.height * scaleY,\n//         0,\n//         0,\n//         crop.width,\n//         crop.height\n//       );\n//       const base64Image = canvas.toDataURL(\"image/jpeg\");\n//       setResult(base64Image)\n//     }\n//   return (\n//     <div>\n//  <div>\n//  <p onClick={handleOpen}><ion-icon name=\"add-circle-outline\"></ion-icon></p>\n//       <Modal\n//         open={open}\n//         onClose={handleClose}\n//         aria-labelledby=\"parent-modal-title\"\n//         aria-describedby=\"parent-modal-description\"\n//       >\n//         <Box sx={{ ...style, width: 800 }}>\n//           <Input type='file' placeholder='image' onChange={handleFileChange}/>\n//           {result && result ? (<div className=\"col-lg-12\">\n//             <img src={result} alt=\"croped-version\" className='image-fluid' />\n//             </div>) :\n//             ( <div>{src && \n//               <div className=\"col-lg-12\">\n//                 <ReactCrop src={src} onImageLoaded={setImage} crop={crop} onChange={setCrop} />\n//                 <button className=\"btn-primary btn\" onClick={getCroppedImg}>Crop Image</button>\n//                 </div>\n//               }</div>)\n//              }\n//              <Button onClick={handleClose}>Close Child Modal</Button>\n//         </Box>\n//       </Modal>\n//     </div>\n//     </div>\n//   )\n// }\n// export default Crop","map":{"version":3,"sources":["D:/Project 2/frontend/src/components/Karthi Crop/Crop.jsx"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA","sourcesContent":["// import  React,{useState} from 'react';\r\n// import Box from '@mui/material/Box';\r\n// import Modal from '@mui/material/Modal';\r\n// import ReactCrop from 'react-image-crop'\r\n// import 'react-image-crop/dist/ReactCrop.css'\r\n// import { Input } from '@mui/material';\r\n// import Button from '@mui/material/Button';\r\n\r\n\r\n\r\n// const style = {\r\n//     position: 'absolute',\r\n//     top: '50%',\r\n//     left: '50%',\r\n//     transform: 'translate(-50%, -50%)',\r\n//     width: 700,\r\n//     bgcolor: 'background.paper',\r\n//     boxShadow: 30,\r\n//     pt: 4,\r\n//     px: 20,\r\n//     pb: 3,\r\n//   };\r\n  \r\n\r\n\r\n// function Crop(props) {\r\n//   const {result,setResult} = props ;\r\n\r\n//     const [src,selectFile] = useState(null);\r\n//     const [image , setImage] = useState(\"\");\r\n//     const [crop, setCrop] = useState({ aspect: 1 / 1 })\r\n\r\n//     const handleFileChange = e => {\r\n//         e.preventDefault();\r\n//         selectFile(URL.createObjectURL(e.target.files[0]))\r\n//     }\r\n\r\n//     const [open, setOpen] = useState(false);\r\n//     const handleOpen = () => {\r\n//       setOpen(true);\r\n//     };\r\n//     const handleClose = () => {\r\n//       selectFile(null)\r\n//       setImage(\"\")\r\n//       setCrop({ aspect: 1 / 1})\r\n//       setOpen(false);\r\n//     };\r\n    \r\n//     function getCroppedImg() {\r\n//       const canvas = document.createElement(\"canvas\");\r\n//       const scaleX = image.naturalWidth / image.width;\r\n//       const scaleY = image.naturalHeight / image.height;\r\n//       canvas.width = crop.width;\r\n//       canvas.height = crop.height;\r\n//       const ctx = canvas.getContext(\"2d\");\r\n    \r\n//       // New lines to be added\r\n//       const pixelRatio = window.devicePixelRatio;\r\n//       canvas.width = crop.width * pixelRatio;\r\n//       canvas.height = crop.height * pixelRatio;\r\n//       ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n//       ctx.imageSmoothingQuality = \"high\";\r\n    \r\n//       ctx.drawImage(\r\n//         image,\r\n//         crop.x * scaleX,\r\n//         crop.y * scaleY,\r\n//         crop.width * scaleX,\r\n//         crop.height * scaleY,\r\n//         0,\r\n//         0,\r\n//         crop.width,\r\n//         crop.height\r\n//       );\r\n\r\n//       const base64Image = canvas.toDataURL(\"image/jpeg\");\r\n//       setResult(base64Image)\r\n//     }\r\n\r\n//   return (\r\n//     <div>\r\n//  <div>\r\n//  <p onClick={handleOpen}><ion-icon name=\"add-circle-outline\"></ion-icon></p>\r\n//       <Modal\r\n//         open={open}\r\n//         onClose={handleClose}\r\n//         aria-labelledby=\"parent-modal-title\"\r\n//         aria-describedby=\"parent-modal-description\"\r\n//       >\r\n//         <Box sx={{ ...style, width: 800 }}>\r\n//           <Input type='file' placeholder='image' onChange={handleFileChange}/>\r\n\r\n\r\n         \r\n\r\n//           {result && result ? (<div className=\"col-lg-12\">\r\n//             <img src={result} alt=\"croped-version\" className='image-fluid' />\r\n//             </div>) :\r\n//             ( <div>{src && \r\n//               <div className=\"col-lg-12\">\r\n//                 <ReactCrop src={src} onImageLoaded={setImage} crop={crop} onChange={setCrop} />\r\n//                 <button className=\"btn-primary btn\" onClick={getCroppedImg}>Crop Image</button>\r\n//                 </div>\r\n//               }</div>)\r\n//              }\r\n//              <Button onClick={handleClose}>Close Child Modal</Button>\r\n//         </Box>\r\n//       </Modal>\r\n//     </div>\r\n\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// export default Crop"]},"metadata":{},"sourceType":"module"}