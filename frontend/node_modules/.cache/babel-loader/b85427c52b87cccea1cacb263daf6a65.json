{"ast":null,"code":"import axios from 'axios';\nimport { USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS } from \"../constants/registerConstant\";\nexport const registeration = (data, toggleModal) => async (dispatch, getstate) => {\n  console.log({\n    data\n  });\n  dispatch({\n    type: USER_REGISTER_REQUEST\n  });\n  const base64 = data.photo;\n  fetch(base64).then(res => {\n    res.blob();\n  }).then(blob => {\n    const file = new File([blob], data.Name + \".jpeg\", {\n      type: 'image/jpeg'\n    }); // const fd = new FormData();\n    // console.log(file)\n    // fd.append('file', file)\n    // fd.append('upload_preset', 'gchysefv')\n    // fd.append(\"cloud_name\", \"dj4qzfqjg\");\n    // fd.append('resource_type', 'auto')\n    // const API_URL = 'https://api.cloudinary.com/v1_1/dj4qzfqjg/image/upload'\n    // fetch(API_URL, { method: 'POST', body: fd })\n    //     .then(res => res.json())\n    //     .then(res => {\n    //         console.log({ res })\n    //         data.photo = res\n    //     }).catch((error) => {\n    //         console.log(error)\n    //     })\n\n    const dat = new FormData();\n    data.append(\"file\", file);\n    data.append(\"cloud_name\", \"dj4qzfqjg\");\n    data.append('upload_preset', 'gchysefv');\n    fetch(\"https://api.cloudinary.com/v1_1/dj4qzfqjg/image/upload\", {\n      method: \"post\",\n      body: data\n    }).then(res => res.json()).then(data => {\n      // setPic(data.url.toString());\n      console.log(data);\n    }).catch(err => {\n      console.log(err);\n    });\n  });\n\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'applicatoin/json'\n      }\n    };\n    const {\n      response\n    } = await axios.post('http://localhost:3001/registration', data);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: response\n    });\n    toggleModal();\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response ? error.response : error.message\n    });\n  }\n};","map":{"version":3,"sources":["D:/Project 2/frontend/src/redux/actions/registerAction.js"],"names":["axios","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","registeration","data","toggleModal","dispatch","getstate","console","log","type","base64","photo","fetch","then","res","blob","file","File","Name","dat","FormData","append","method","body","json","catch","err","config","headers","response","post","payload","error","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,EAA6BC,qBAA7B,EAAoDC,qBAApD,QAAiF,+BAAjF;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,IAAD,EAAOC,WAAP,KAAuB,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAC9EC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEL,IAAAA;AAAF,GAAZ;AACAE,EAAAA,QAAQ,CAAC;AAAEI,IAAAA,IAAI,EAAET;AAAR,GAAD,CAAR;AAGA,QAAMU,MAAM,GAAGP,IAAI,CAACQ,KAApB;AACAC,EAAAA,KAAK,CAACF,MAAD,CAAL,CACKG,IADL,CACUC,GAAG,IAAI;AACTA,IAAAA,GAAG,CAACC,IAAJ;AACH,GAHL,EAIKF,IAJL,CAIUE,IAAI,IAAI;AACV,UAAMC,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACF,IAAD,CAAT,EAAiBZ,IAAI,CAACe,IAAL,GAAY,OAA7B,EAAsC;AAAET,MAAAA,IAAI,EAAE;AAAR,KAAtC,CAAb,CADU,CAGV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA,UAAMU,GAAG,GAAG,IAAIC,QAAJ,EAAZ;AACAjB,IAAAA,IAAI,CAACkB,MAAL,CAAY,MAAZ,EAAoBL,IAApB;AACAb,IAAAA,IAAI,CAACkB,MAAL,CAAY,YAAZ,EAA0B,WAA1B;AACAlB,IAAAA,IAAI,CAACkB,MAAL,CAAY,eAAZ,EAA6B,UAA7B;AACAT,IAAAA,KAAK,CAAC,wDAAD,EAA2D;AAC5DU,MAAAA,MAAM,EAAE,MADoD;AAE5DC,MAAAA,IAAI,EAAEpB;AAFsD,KAA3D,CAAL,CAIKU,IAJL,CAIWC,GAAD,IAASA,GAAG,CAACU,IAAJ,EAJnB,EAKKX,IALL,CAKWV,IAAD,IAAU;AACZ;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACH,KARL,EASKsB,KATL,CASYC,GAAD,IAAS;AACZnB,MAAAA,OAAO,CAACC,GAAR,CAAYkB,GAAZ;AACH,KAXL;AAqBH,GAnDL;;AAuDA,MAAI;AACA,UAAMC,MAAM,GAAG;AAAEC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAAX,KAAf;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAe,MAAM/B,KAAK,CAACgC,IAAN,CAAW,oCAAX,EAAiD3B,IAAjD,CAA3B;AAEAE,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAER,qBAAR;AAA+B8B,MAAAA,OAAO,EAAEF;AAAxC,KAAD,CAAR;AACAzB,IAAAA,WAAW;AACd,GAND,CAME,OAAO4B,KAAP,EAAc;AACZ3B,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEV,kBADD;AACqBgC,MAAAA,OAAO,EAC7BC,KAAK,CAACH,QAAN,GAAiBG,KAAK,CAACH,QAAvB,GAAkCG,KAAK,CAACC;AAFvC,KAAD,CAAR;AAIH;AACJ,CAzEM","sourcesContent":["import axios from 'axios'\r\nimport { USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS } from \"../constants/registerConstant\"\r\n\r\nexport const registeration = (data, toggleModal) => async (dispatch, getstate) => {\r\n    console.log({ data })\r\n    dispatch({ type: USER_REGISTER_REQUEST })\r\n\r\n\r\n    const base64 = data.photo\r\n    fetch(base64)\r\n        .then(res => {\r\n            res.blob()\r\n        })\r\n        .then(blob => {\r\n            const file = new File([blob], data.Name + \".jpeg\", { type: 'image/jpeg' });\r\n\r\n            // const fd = new FormData();\r\n            // console.log(file)\r\n            // fd.append('file', file)\r\n            // fd.append('upload_preset', 'gchysefv')\r\n            // fd.append(\"cloud_name\", \"dj4qzfqjg\");\r\n            // fd.append('resource_type', 'auto')\r\n            // const API_URL = 'https://api.cloudinary.com/v1_1/dj4qzfqjg/image/upload'\r\n            // fetch(API_URL, { method: 'POST', body: fd })\r\n            //     .then(res => res.json())\r\n            //     .then(res => {\r\n            //         console.log({ res })\r\n            //         data.photo = res\r\n            //     }).catch((error) => {\r\n            //         console.log(error)\r\n            //     })\r\n\r\n\r\n\r\n\r\n            const dat = new FormData();\r\n            data.append(\"file\", file);\r\n            data.append(\"cloud_name\", \"dj4qzfqjg\");\r\n            data.append('upload_preset', 'gchysefv')\r\n            fetch(\"https://api.cloudinary.com/v1_1/dj4qzfqjg/image/upload\", {\r\n                method: \"post\",\r\n                body: data,\r\n            })\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    // setPic(data.url.toString());\r\n                    console.log(data)\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        })\r\n\r\n\r\n\r\n    try {\r\n        const config = { headers: { 'Content-Type': 'applicatoin/json' } }\r\n        const { response } = await axios.post('http://localhost:3001/registration', data)\r\n\r\n        dispatch({ type: USER_REGISTER_SUCCESS, payload: response })\r\n        toggleModal()\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL, payload:\r\n                error.response ? error.response : error.message\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}