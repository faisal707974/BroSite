{"ast":null,"code":"'use strict';\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar fs = require('fs');\n\nvar _require = require('path'),\n    extname = _require.extname,\n    basename = _require.basename;\n\nvar Q = require('q');\n\nvar Writable = require(\"stream\").Writable;\n\nvar urlLib = require('url'); // eslint-disable-next-line import/order\n\n\nvar _require2 = require(\"./config\")(),\n    upload_prefix = _require2.upload_prefix;\n\nvar isSecure = !(upload_prefix && upload_prefix.slice(0, 5) === 'http:');\nvar https = isSecure ? require('https') : require('http');\n\nvar Cache = require('./cache');\n\nvar utils = require(\"./utils\");\n\nvar UploadStream = require('./upload_stream');\n\nvar config = require(\"./config\");\n\nvar ProxyAgent = utils.optionalRequire('proxy-agent');\n\nvar ensureOption = require('./utils/ensureOption').defaults(config());\n\nvar build_upload_params = utils.build_upload_params,\n    extend = utils.extend,\n    includes = utils.includes,\n    isEmpty = utils.isEmpty,\n    isObject = utils.isObject,\n    isRemoteUrl = utils.isRemoteUrl,\n    merge = utils.merge,\n    pickOnlyExistingValues = utils.pickOnlyExistingValues;\n\nexports.unsigned_upload_stream = function unsigned_upload_stream(upload_preset, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return exports.upload_stream(callback, merge(options, {\n    unsigned: true,\n    upload_preset: upload_preset\n  }));\n};\n\nexports.upload_stream = function upload_stream(callback) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return exports.upload(null, callback, extend({\n    stream: true\n  }, options));\n};\n\nexports.unsigned_upload = function unsigned_upload(file, upload_preset, callback) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  return exports.upload(file, callback, merge(options, {\n    unsigned: true,\n    upload_preset: upload_preset\n  }));\n};\n\nexports.upload = function upload(file, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return call_api(\"upload\", callback, options, function () {\n    var params = build_upload_params(options);\n    return isRemoteUrl(file) ? [params, {\n      file: file\n    }] : [params, {}, file];\n  });\n};\n\nexports.upload_large = function upload_large(path, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (path != null && isRemoteUrl(path)) {\n    // upload a remote file\n    return exports.upload(path, callback, options);\n  }\n\n  if (path != null && !options.filename) {\n    options.filename = path.split(/(\\\\|\\/)/g).pop().replace(/\\.[^/.]+$/, \"\");\n  }\n\n  return exports.upload_chunked(path, callback, extend({\n    resource_type: 'raw'\n  }, options));\n};\n\nexports.upload_chunked = function upload_chunked(path, callback, options) {\n  var file_reader = fs.createReadStream(path);\n  var out_stream = exports.upload_chunked_stream(callback, options);\n  return file_reader.pipe(out_stream);\n};\n\nvar Chunkable = function (_Writable) {\n  _inherits(Chunkable, _Writable);\n\n  function Chunkable(options) {\n    _classCallCheck(this, Chunkable);\n\n    var _this = _possibleConstructorReturn(this, (Chunkable.__proto__ || Object.getPrototypeOf(Chunkable)).call(this, options));\n\n    _this.chunk_size = options.chunk_size != null ? options.chunk_size : 20000000;\n    _this.buffer = Buffer.alloc(0);\n    _this.active = true;\n\n    _this.on('finish', function () {\n      if (_this.active) {\n        _this.emit('ready', _this.buffer, true, function () {});\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Chunkable, [{\n    key: '_write',\n    value: function _write(data, encoding, done) {\n      var _this2 = this;\n\n      if (!this.active) {\n        done();\n      }\n\n      if (this.buffer.length + data.length <= this.chunk_size) {\n        this.buffer = Buffer.concat([this.buffer, data], this.buffer.length + data.length);\n        done();\n      } else {\n        var grab = this.chunk_size - this.buffer.length;\n        this.buffer = Buffer.concat([this.buffer, data.slice(0, grab)], this.buffer.length + grab);\n        this.emit('ready', this.buffer, false, function (active) {\n          _this2.active = active;\n\n          if (_this2.active) {\n            _this2.buffer = data.slice(grab);\n            done();\n          }\n        });\n      }\n    }\n  }]);\n\n  return Chunkable;\n}(Writable);\n\nexports.upload_large_stream = function upload_large_stream(_unused_, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return exports.upload_chunked_stream(callback, extend({\n    resource_type: 'raw'\n  }, options));\n};\n\nexports.upload_chunked_stream = function upload_chunked_stream(callback) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  options = extend({}, options, {\n    stream: true\n  });\n  options.x_unique_upload_id = utils.random_public_id();\n  var params = build_upload_params(options);\n  var chunk_size = options.chunk_size != null ? options.chunk_size : options.part_size;\n  var chunker = new Chunkable({\n    chunk_size: chunk_size\n  });\n  var sent = 0;\n  chunker.on('ready', function (buffer, is_last, done) {\n    var chunk_start = sent;\n    sent += buffer.length;\n    options.content_range = `bytes ${chunk_start}-${sent - 1}/${is_last ? sent : -1}`;\n    params.timestamp = utils.timestamp();\n\n    var finished_part = function finished_part(result) {\n      var errorOrLast = result.error != null || is_last;\n\n      if (errorOrLast && typeof callback === \"function\") {\n        callback(result);\n      }\n\n      return done(!errorOrLast);\n    };\n\n    var stream = call_api(\"upload\", finished_part, options, function () {\n      return [params, {}, buffer];\n    });\n    return stream.write(buffer, 'buffer', function () {\n      return stream.end();\n    });\n  });\n  return chunker;\n};\n\nexports.explicit = function explicit(public_id, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return call_api(\"explicit\", callback, options, function () {\n    return utils.build_explicit_api_params(public_id, options);\n  });\n}; // Creates a new archive in the server and returns information in JSON format\n\n\nexports.create_archive = function create_archive(callback) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var target_format = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  return call_api(\"generate_archive\", callback, options, function () {\n    var opt = utils.archive_params(options);\n\n    if (target_format) {\n      opt.target_format = target_format;\n    }\n\n    return [opt];\n  });\n}; // Creates a new zip archive in the server and returns information in JSON format\n\n\nexports.create_zip = function create_zip(callback) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return exports.create_archive(callback, options, \"zip\");\n};\n\nexports.create_slideshow = function create_slideshow(options, callback) {\n  options.resource_type = ensureOption(options, \"resource_type\", \"video\");\n  return call_api(\"create_slideshow\", callback, options, function () {\n    // Generate a transformation from the manifest_transformation key, which should be a valid transformation\n    var manifest_transformation = utils.generate_transformation_string(extend({}, options.manifest_transformation)); // Try to use {options.transformation} to generate a transformation (Example: options.transformation.width, options.transformation.height)\n\n    var transformation = utils.generate_transformation_string(extend({}, ensureOption(options, 'transformation', {})));\n    return [{\n      timestamp: utils.timestamp(),\n      manifest_transformation: manifest_transformation,\n      upload_preset: options.upload_preset,\n      overwrite: options.overwrite,\n      public_id: options.public_id,\n      notification_url: options.notification_url,\n      manifest_json: options.manifest_json,\n      tags: options.tags,\n      transformation: transformation\n    }];\n  });\n};\n\nexports.destroy = function destroy(public_id, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return call_api(\"destroy\", callback, options, function () {\n    return [{\n      timestamp: utils.timestamp(),\n      type: options.type,\n      invalidate: options.invalidate,\n      public_id: public_id\n    }];\n  });\n};\n\nexports.rename = function rename(from_public_id, to_public_id, callback) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  return call_api(\"rename\", callback, options, function () {\n    return [{\n      timestamp: utils.timestamp(),\n      type: options.type,\n      from_public_id: from_public_id,\n      to_public_id: to_public_id,\n      overwrite: options.overwrite,\n      invalidate: options.invalidate,\n      to_type: options.to_type\n    }];\n  });\n};\n\nvar TEXT_PARAMS = [\"public_id\", \"font_family\", \"font_size\", \"font_color\", \"text_align\", \"font_weight\", \"font_style\", \"background\", \"opacity\", \"text_decoration\", \"font_hinting\", \"font_antialiasing\"];\n\nexports.text = function text(content, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return call_api(\"text\", callback, options, function () {\n    var textParams = pickOnlyExistingValues.apply(undefined, [options].concat(TEXT_PARAMS));\n\n    var params = _extends({\n      timestamp: utils.timestamp(),\n      text: content\n    }, textParams);\n\n    return [params];\n  });\n};\n/**\n * Generate a sprite by merging multiple images into a single large image for reducing network overhead and bypassing\n * download limitations.\n *\n * The process produces 2 files as follows:\n * - A single image file containing all the images with the specified tag (PNG by default).\n * - A CSS file that includes the style class names and the location of the individual images in the sprite.\n *\n * @param {String|Object} tag     A string specifying a tag that indicates which images to include or an object\n *                                which includes options and image URLs.\n * @param {Function}     callback   Callback function\n * @param {Object}       options  Configuration options. If options are passed as the first parameter, this parameter\n *                                should be empty\n *\n * @return {Object}\n */\n\n\nexports.generate_sprite = function generate_sprite(tag, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return call_api(\"sprite\", callback, options, function () {\n    return [utils.build_multi_and_sprite_params(tag, options)];\n  });\n};\n/**\n * Returns a signed url to download a sprite\n *\n * @param {String|Object} tag     A string specifying a tag that indicates which images to include or an object\n *                                which includes options and image URLs.\n * @param {Object}       options  Configuration options. If options are passed as the first parameter, this parameter\n *                                should be empty\n *\n * @returns {string}\n */\n\n\nexports.download_generated_sprite = function download_generated_sprite(tag) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return utils.api_download_url(\"sprite\", utils.build_multi_and_sprite_params(tag, options), options);\n};\n/**\n * Returns a signed url to download a single animated image (GIF, PNG or WebP), video (MP4 or WebM) or a single PDF from\n * multiple image assets.\n *\n * @param {String|Object} tag     A string specifying a tag that indicates which images to include or an object\n *                                which includes options and image URLs.\n * @param {Object}       options  Configuration options. If options are passed as the first parameter, this parameter\n *                                should be empty\n *\n * @returns {string}\n */\n\n\nexports.download_multi = function download_multi(tag) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return utils.api_download_url(\"multi\", utils.build_multi_and_sprite_params(tag, options), options);\n};\n/**\n * Creates either a single animated image (GIF, PNG or WebP), video (MP4 or WebM) or a single PDF from multiple image\n * assets.\n *\n * Each asset is included as a single frame of the resulting animated image/video, or a page of the PDF (sorted\n * alphabetically by their Public ID).\n *\n * @param {String|Object} tag     A string specifying a tag that indicates which images to include or an object\n *                                which includes options and image URLs.\n * @param {Function}     callback   Callback function\n * @param {Object}       options  Configuration options. If options are passed as the first parameter, this parameter\n *                                should be empty\n *\n * @return {Object}\n */\n\n\nexports.multi = function multi(tag, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return call_api(\"multi\", callback, options, function () {\n    return [utils.build_multi_and_sprite_params(tag, options)];\n  });\n};\n\nexports.explode = function explode(public_id, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return call_api(\"explode\", callback, options, function () {\n    var transformation = utils.generate_transformation_string(extend({}, options));\n    return [{\n      timestamp: utils.timestamp(),\n      public_id: public_id,\n      transformation: transformation,\n      format: options.format,\n      type: options.type,\n      notification_url: options.notification_url\n    }];\n  });\n};\n/**\n *\n * @param {String}          tag                  The tag or tags to assign. Can specify multiple\n *                                               tags in a single string, separated by commas - \"t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11\".\n *\n * @param {Array}          public_ids           A list of public IDs (up to 1000) of assets uploaded to Cloudinary.\n *\n * @param {Function}        callback             Callback function\n *\n * @param {Object}          options              Configuration options may include 'exclusive' (boolean) which causes\n *                                               clearing this tag from all other resources\n * @return {Object}\n */\n\n\nexports.add_tag = function add_tag(tag) {\n  var public_ids = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var callback = arguments[2];\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var exclusive = utils.option_consume(\"exclusive\", options);\n  var command = exclusive ? \"set_exclusive\" : \"add\";\n  return call_tags_api(tag, command, public_ids, callback, options);\n};\n/**\n * @param {String}          tag                  The tag or tags to remove. Can specify multiple\n *                                               tags in a single string, separated by commas - \"t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11\".\n *\n * @param {Array}          public_ids            A list of public IDs (up to 1000) of assets uploaded to Cloudinary.\n *\n * @param {Function}        callback             Callback function\n *\n * @param {Object}          options              Configuration options may include 'exclusive' (boolean) which causes\n *                                               clearing this tag from all other resources\n * @return {Object}\n */\n\n\nexports.remove_tag = function remove_tag(tag) {\n  var public_ids = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var callback = arguments[2];\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  return call_tags_api(tag, \"remove\", public_ids, callback, options);\n};\n\nexports.remove_all_tags = function remove_all_tags() {\n  var public_ids = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var callback = arguments[1];\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return call_tags_api(null, \"remove_all\", public_ids, callback, options);\n};\n\nexports.replace_tag = function replace_tag(tag) {\n  var public_ids = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var callback = arguments[2];\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  return call_tags_api(tag, \"replace\", public_ids, callback, options);\n};\n\nfunction call_tags_api(tag, command) {\n  var public_ids = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var callback = arguments[3];\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  return call_api(\"tags\", callback, options, function () {\n    var params = {\n      timestamp: utils.timestamp(),\n      public_ids: utils.build_array(public_ids),\n      command: command,\n      type: options.type\n    };\n\n    if (tag != null) {\n      params.tag = tag;\n    }\n\n    return [params];\n  });\n}\n\nexports.add_context = function add_context(context) {\n  var public_ids = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var callback = arguments[2];\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  return call_context_api(context, 'add', public_ids, callback, options);\n};\n\nexports.remove_all_context = function remove_all_context() {\n  var public_ids = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var callback = arguments[1];\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return call_context_api(null, 'remove_all', public_ids, callback, options);\n};\n\nfunction call_context_api(context, command) {\n  var public_ids = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var callback = arguments[3];\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  return call_api('context', callback, options, function () {\n    var params = {\n      timestamp: utils.timestamp(),\n      public_ids: utils.build_array(public_ids),\n      command: command,\n      type: options.type\n    };\n\n    if (context != null) {\n      params.context = utils.encode_context(context);\n    }\n\n    return [params];\n  });\n}\n/**\n * Cache (part of) the upload results.\n * @param result\n * @param {object} options\n * @param {string} options.type\n * @param {string} options.resource_type\n */\n\n\nfunction cacheResults(result, _ref) {\n  var type = _ref.type,\n      resource_type = _ref.resource_type;\n\n  if (result.responsive_breakpoints) {\n    result.responsive_breakpoints.forEach(function (_ref2) {\n      var transformation = _ref2.transformation,\n          url = _ref2.url,\n          breakpoints = _ref2.breakpoints;\n      return Cache.set(result.public_id, {\n        type,\n        resource_type,\n        raw_transformation: transformation,\n        format: extname(breakpoints[0].url).slice(1)\n      }, breakpoints.map(function (i) {\n        return i.width;\n      }));\n    });\n  }\n}\n\nfunction parseResult(buffer, res) {\n  var result = '';\n\n  try {\n    result = JSON.parse(buffer);\n\n    if (result.error && !result.error.name) {\n      result.error.name = \"Error\";\n    }\n  } catch (jsonError) {\n    result = {\n      error: {\n        message: `Server return invalid JSON response. Status Code ${res.statusCode}. ${jsonError}`,\n        name: \"Error\"\n      }\n    };\n  }\n\n  return result;\n}\n\nfunction call_api(action, callback, options, get_params) {\n  if (typeof callback !== \"function\") {\n    callback = function callback() {};\n  }\n\n  var USE_PROMISES = !options.disable_promises;\n  var deferred = Q.defer();\n\n  if (options == null) {\n    options = {};\n  }\n\n  var _get_params$call = get_params.call(),\n      _get_params$call2 = _slicedToArray(_get_params$call, 3),\n      params = _get_params$call2[0],\n      unsigned_params = _get_params$call2[1],\n      file = _get_params$call2[2];\n\n  params = utils.process_request_params(params, options);\n  params = extend(params, unsigned_params);\n  var api_url = utils.api_url(action, options);\n  var boundary = utils.random_public_id();\n  var errorRaised = false;\n\n  var handle_response = function handle_response(res) {\n    // let buffer;\n    if (errorRaised) {// Already reported\n    } else if (res.error) {\n      errorRaised = true;\n\n      if (USE_PROMISES) {\n        deferred.reject(res);\n      }\n\n      callback(res);\n    } else if (includes([200, 400, 401, 404, 420, 500], res.statusCode)) {\n      var buffer = \"\";\n      res.on(\"data\", function (d) {\n        buffer += d;\n        return buffer;\n      });\n      res.on(\"end\", function () {\n        var result = void 0;\n\n        if (errorRaised) {\n          return;\n        }\n\n        result = parseResult(buffer, res);\n\n        if (result.error) {\n          result.error.http_code = res.statusCode;\n\n          if (USE_PROMISES) {\n            deferred.reject(result.error);\n          }\n        } else {\n          cacheResults(result, options);\n\n          if (USE_PROMISES) {\n            deferred.resolve(result);\n          }\n        }\n\n        callback(result);\n      });\n      res.on(\"error\", function (error) {\n        errorRaised = true;\n\n        if (USE_PROMISES) {\n          deferred.reject(error);\n        }\n\n        callback({\n          error\n        });\n      });\n    } else {\n      var error = {\n        message: `Server returned unexpected status code - ${res.statusCode}`,\n        http_code: res.statusCode,\n        name: \"UnexpectedResponse\"\n      };\n\n      if (USE_PROMISES) {\n        deferred.reject(error);\n      }\n\n      callback({\n        error\n      });\n    }\n  };\n\n  var post_data = utils.hashToParameters(params).filter(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n        key = _ref4[0],\n        value = _ref4[1];\n\n    return value != null;\n  }).map(function (_ref5) {\n    var _ref6 = _slicedToArray(_ref5, 2),\n        key = _ref6[0],\n        value = _ref6[1];\n\n    return Buffer.from(encodeFieldPart(boundary, key, value), 'utf8');\n  });\n  var result = post(api_url, post_data, boundary, file, handle_response, options);\n\n  if (isObject(result)) {\n    return result;\n  }\n\n  if (USE_PROMISES) {\n    return deferred.promise;\n  }\n}\n\nfunction post(url, post_data, boundary, file, callback, options) {\n  var file_header = void 0;\n  var finish_buffer = Buffer.from(\"--\" + boundary + \"--\", 'ascii');\n  var oauth_token = options.oauth_token || config().oauth_token;\n\n  if (file != null || options.stream) {\n    // eslint-disable-next-line no-nested-ternary\n    var filename = options.stream ? options.filename ? options.filename : \"file\" : basename(file);\n    file_header = Buffer.from(encodeFilePart(boundary, 'application/octet-stream', 'file', filename), 'binary');\n  }\n\n  var post_options = urlLib.parse(url);\n  var headers = {\n    'Content-Type': `multipart/form-data; boundary=${boundary}`,\n    'User-Agent': utils.getUserAgent()\n  };\n\n  if (options.content_range != null) {\n    headers['Content-Range'] = options.content_range;\n  }\n\n  if (options.x_unique_upload_id != null) {\n    headers['X-Unique-Upload-Id'] = options.x_unique_upload_id;\n  }\n\n  if (oauth_token != null) {\n    headers.Authorization = `Bearer ${oauth_token}`;\n  }\n\n  post_options = extend(post_options, {\n    method: 'POST',\n    headers: headers\n  });\n\n  if (options.agent != null) {\n    post_options.agent = options.agent;\n  }\n\n  var proxy = options.api_proxy || config().api_proxy;\n\n  if (!isEmpty(proxy)) {\n    if (!post_options.agent) {\n      if (ProxyAgent === null) {\n        throw new Error(\"Proxy value is set, but `proxy-agent` is not installed, please install `proxy-agent` module.\");\n      }\n\n      post_options.agent = new ProxyAgent(proxy);\n    } else {\n      console.warn(\"Proxy is set, but request uses a custom agent, proxy is ignored.\");\n    }\n  }\n\n  var post_request = https.request(post_options, callback);\n  var upload_stream = new UploadStream({\n    boundary\n  });\n  upload_stream.pipe(post_request);\n  var timeout = false;\n  post_request.on(\"error\", function (error) {\n    if (timeout) {\n      error = {\n        message: \"Request Timeout\",\n        http_code: 499,\n        name: \"TimeoutError\"\n      };\n    }\n\n    return callback({\n      error\n    });\n  });\n  post_request.setTimeout(options.timeout != null ? options.timeout : 60000, function () {\n    timeout = true;\n    return post_request.abort();\n  });\n  post_data.forEach(function (postDatum) {\n    return post_request.write(postDatum);\n  });\n\n  if (options.stream) {\n    post_request.write(file_header);\n    return upload_stream;\n  }\n\n  if (file != null) {\n    post_request.write(file_header);\n    fs.createReadStream(file).on('error', function (error) {\n      callback({\n        error: error\n      });\n      return post_request.abort();\n    }).pipe(upload_stream);\n  } else {\n    post_request.write(finish_buffer);\n    post_request.end();\n  }\n\n  return true;\n}\n\nfunction encodeFieldPart(boundary, name, value) {\n  return [`--${boundary}`, `Content-Disposition: form-data; name=\"${name}\"`, '', value, ''].join(\"\\r\\n\");\n}\n\nfunction encodeFilePart(boundary, type, name, filename) {\n  return [`--${boundary}`, `Content-Disposition: form-data; name=\"${name}\"; filename=\"${filename}\"`, `Content-Type: ${type}`, '', ''].join(\"\\r\\n\");\n}\n\nexports.direct_upload = function direct_upload(callback_url) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var params = build_upload_params(extend({\n    callback: callback_url\n  }, options));\n  params = utils.process_request_params(params, options);\n  var api_url = utils.api_url(\"upload\", options);\n  return {\n    hidden_fields: params,\n    form_attrs: {\n      action: api_url,\n      method: \"POST\",\n      enctype: \"multipart/form-data\"\n    }\n  };\n};\n\nexports.upload_tag_params = function upload_tag_params() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var params = build_upload_params(options);\n  params = utils.process_request_params(params, options);\n  return JSON.stringify(params);\n};\n\nexports.upload_url = function upload_url() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  if (options.resource_type == null) {\n    options.resource_type = \"auto\";\n  }\n\n  return utils.api_url(\"upload\", options);\n};\n\nexports.image_upload_tag = function image_upload_tag(field) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var html_options = options.html || {};\n  var tag_options = extend({\n    type: \"file\",\n    name: \"file\",\n    \"data-url\": exports.upload_url(options),\n    \"data-form-data\": exports.upload_tag_params(options),\n    \"data-cloudinary-field\": field,\n    \"data-max-chunk-size\": options.chunk_size,\n    \"class\": [html_options.class, \"cloudinary-fileupload\"].join(\" \")\n  }, html_options);\n  return `<input ${utils.html_attrs(tag_options)}/>`;\n};\n\nexports.unsigned_image_upload_tag = function unsigned_image_upload_tag(field, upload_preset) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return exports.image_upload_tag(field, merge(options, {\n    unsigned: true,\n    upload_preset: upload_preset\n  }));\n};\n/**\n * Populates metadata fields with the given values. Existing values will be overwritten.\n *\n * @param {Object}   metadata   A list of custom metadata fields (by external_id) and the values to assign to each\n * @param {Array}    public_ids The public IDs of the resources to update\n * @param {Function} callback   Callback function\n * @param {Object}   options    Configuration options\n *\n * @return {Object}\n */\n\n\nexports.update_metadata = function update_metadata(metadata, public_ids, callback) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  return call_api(\"metadata\", callback, options, function () {\n    var params = {\n      metadata: utils.encode_context(metadata),\n      public_ids: utils.build_array(public_ids),\n      timestamp: utils.timestamp(),\n      type: options.type\n    };\n    return [params];\n  });\n};","map":{"version":3,"sources":["D:/Project 2/frontend/node_modules/cloudinary/lib-es5/uploader.js"],"names":["_slicedToArray","sliceIterator","arr","i","_arr","_n","_d","_e","undefined","_i","Symbol","iterator","_s","next","done","push","value","length","err","Array","isArray","Object","TypeError","_extends","assign","target","arguments","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","_classCallCheck","instance","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","fs","require","_require","extname","basename","Q","Writable","urlLib","_require2","upload_prefix","isSecure","slice","https","Cache","utils","UploadStream","config","ProxyAgent","optionalRequire","ensureOption","defaults","build_upload_params","extend","includes","isEmpty","isObject","isRemoteUrl","merge","pickOnlyExistingValues","exports","unsigned_upload_stream","upload_preset","callback","options","upload_stream","unsigned","upload","stream","unsigned_upload","file","call_api","params","upload_large","path","filename","split","pop","replace","upload_chunked","resource_type","file_reader","createReadStream","out_stream","upload_chunked_stream","pipe","Chunkable","_Writable","_this","getPrototypeOf","chunk_size","buffer","Buffer","alloc","active","on","emit","_write","data","encoding","_this2","concat","grab","upload_large_stream","_unused_","x_unique_upload_id","random_public_id","part_size","chunker","sent","is_last","chunk_start","content_range","timestamp","finished_part","result","errorOrLast","error","write","end","explicit","public_id","build_explicit_api_params","create_archive","target_format","opt","archive_params","create_zip","create_slideshow","manifest_transformation","generate_transformation_string","transformation","overwrite","notification_url","manifest_json","tags","destroy","type","invalidate","rename","from_public_id","to_public_id","to_type","TEXT_PARAMS","text","content","textParams","apply","generate_sprite","tag","build_multi_and_sprite_params","download_generated_sprite","api_download_url","download_multi","multi","explode","format","add_tag","public_ids","exclusive","option_consume","command","call_tags_api","remove_tag","remove_all_tags","replace_tag","build_array","add_context","context","call_context_api","remove_all_context","encode_context","cacheResults","_ref","responsive_breakpoints","forEach","_ref2","url","breakpoints","set","raw_transformation","map","width","parseResult","res","JSON","parse","name","jsonError","message","statusCode","action","get_params","USE_PROMISES","disable_promises","deferred","defer","_get_params$call","_get_params$call2","unsigned_params","process_request_params","api_url","boundary","errorRaised","handle_response","reject","d","http_code","resolve","post_data","hashToParameters","filter","_ref3","_ref4","_ref5","_ref6","from","encodeFieldPart","post","promise","file_header","finish_buffer","oauth_token","encodeFilePart","post_options","headers","getUserAgent","Authorization","method","agent","proxy","api_proxy","Error","console","warn","post_request","request","timeout","setTimeout","abort","postDatum","join","direct_upload","callback_url","hidden_fields","form_attrs","enctype","upload_tag_params","stringify","upload_url","image_upload_tag","field","html_options","html","tag_options","class","html_attrs","unsigned_image_upload_tag","update_metadata","metadata"],"mappings":"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","sourcesContent":["'use strict';\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar fs = require('fs');\n\nvar _require = require('path'),\n    extname = _require.extname,\n    basename = _require.basename;\n\nvar Q = require('q');\nvar Writable = require(\"stream\").Writable;\nvar urlLib = require('url');\n\n// eslint-disable-next-line import/order\n\nvar _require2 = require(\"./config\")(),\n    upload_prefix = _require2.upload_prefix;\n\nvar isSecure = !(upload_prefix && upload_prefix.slice(0, 5) === 'http:');\nvar https = isSecure ? require('https') : require('http');\n\nvar Cache = require('./cache');\nvar utils = require(\"./utils\");\nvar UploadStream = require('./upload_stream');\nvar config = require(\"./config\");\nvar ProxyAgent = utils.optionalRequire('proxy-agent');\nvar ensureOption = require('./utils/ensureOption').defaults(config());\n\nvar build_upload_params = utils.build_upload_params,\n    extend = utils.extend,\n    includes = utils.includes,\n    isEmpty = utils.isEmpty,\n    isObject = utils.isObject,\n    isRemoteUrl = utils.isRemoteUrl,\n    merge = utils.merge,\n    pickOnlyExistingValues = utils.pickOnlyExistingValues;\n\n\nexports.unsigned_upload_stream = function unsigned_upload_stream(upload_preset, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  return exports.upload_stream(callback, merge(options, {\n    unsigned: true,\n    upload_preset: upload_preset\n  }));\n};\n\nexports.upload_stream = function upload_stream(callback) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  return exports.upload(null, callback, extend({\n    stream: true\n  }, options));\n};\n\nexports.unsigned_upload = function unsigned_upload(file, upload_preset, callback) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  return exports.upload(file, callback, merge(options, {\n    unsigned: true,\n    upload_preset: upload_preset\n  }));\n};\n\nexports.upload = function upload(file, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  return call_api(\"upload\", callback, options, function () {\n    var params = build_upload_params(options);\n    return isRemoteUrl(file) ? [params, { file: file }] : [params, {}, file];\n  });\n};\n\nexports.upload_large = function upload_large(path, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (path != null && isRemoteUrl(path)) {\n    // upload a remote file\n    return exports.upload(path, callback, options);\n  }\n  if (path != null && !options.filename) {\n    options.filename = path.split(/(\\\\|\\/)/g).pop().replace(/\\.[^/.]+$/, \"\");\n  }\n  return exports.upload_chunked(path, callback, extend({\n    resource_type: 'raw'\n  }, options));\n};\n\nexports.upload_chunked = function upload_chunked(path, callback, options) {\n  var file_reader = fs.createReadStream(path);\n  var out_stream = exports.upload_chunked_stream(callback, options);\n  return file_reader.pipe(out_stream);\n};\n\nvar Chunkable = function (_Writable) {\n  _inherits(Chunkable, _Writable);\n\n  function Chunkable(options) {\n    _classCallCheck(this, Chunkable);\n\n    var _this = _possibleConstructorReturn(this, (Chunkable.__proto__ || Object.getPrototypeOf(Chunkable)).call(this, options));\n\n    _this.chunk_size = options.chunk_size != null ? options.chunk_size : 20000000;\n    _this.buffer = Buffer.alloc(0);\n    _this.active = true;\n    _this.on('finish', function () {\n      if (_this.active) {\n        _this.emit('ready', _this.buffer, true, function () {});\n      }\n    });\n    return _this;\n  }\n\n  _createClass(Chunkable, [{\n    key: '_write',\n    value: function _write(data, encoding, done) {\n      var _this2 = this;\n\n      if (!this.active) {\n        done();\n      }\n      if (this.buffer.length + data.length <= this.chunk_size) {\n        this.buffer = Buffer.concat([this.buffer, data], this.buffer.length + data.length);\n        done();\n      } else {\n        var grab = this.chunk_size - this.buffer.length;\n        this.buffer = Buffer.concat([this.buffer, data.slice(0, grab)], this.buffer.length + grab);\n        this.emit('ready', this.buffer, false, function (active) {\n          _this2.active = active;\n          if (_this2.active) {\n            _this2.buffer = data.slice(grab);\n            done();\n          }\n        });\n      }\n    }\n  }]);\n\n  return Chunkable;\n}(Writable);\n\nexports.upload_large_stream = function upload_large_stream(_unused_, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  return exports.upload_chunked_stream(callback, extend({\n    resource_type: 'raw'\n  }, options));\n};\n\nexports.upload_chunked_stream = function upload_chunked_stream(callback) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  options = extend({}, options, {\n    stream: true\n  });\n  options.x_unique_upload_id = utils.random_public_id();\n  var params = build_upload_params(options);\n  var chunk_size = options.chunk_size != null ? options.chunk_size : options.part_size;\n  var chunker = new Chunkable({\n    chunk_size: chunk_size\n  });\n  var sent = 0;\n  chunker.on('ready', function (buffer, is_last, done) {\n    var chunk_start = sent;\n    sent += buffer.length;\n    options.content_range = `bytes ${chunk_start}-${sent - 1}/${is_last ? sent : -1}`;\n    params.timestamp = utils.timestamp();\n    var finished_part = function finished_part(result) {\n      var errorOrLast = result.error != null || is_last;\n      if (errorOrLast && typeof callback === \"function\") {\n        callback(result);\n      }\n      return done(!errorOrLast);\n    };\n    var stream = call_api(\"upload\", finished_part, options, function () {\n      return [params, {}, buffer];\n    });\n    return stream.write(buffer, 'buffer', function () {\n      return stream.end();\n    });\n  });\n  return chunker;\n};\n\nexports.explicit = function explicit(public_id, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  return call_api(\"explicit\", callback, options, function () {\n    return utils.build_explicit_api_params(public_id, options);\n  });\n};\n\n// Creates a new archive in the server and returns information in JSON format\nexports.create_archive = function create_archive(callback) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var target_format = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n  return call_api(\"generate_archive\", callback, options, function () {\n    var opt = utils.archive_params(options);\n    if (target_format) {\n      opt.target_format = target_format;\n    }\n    return [opt];\n  });\n};\n\n// Creates a new zip archive in the server and returns information in JSON format\nexports.create_zip = function create_zip(callback) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  return exports.create_archive(callback, options, \"zip\");\n};\n\nexports.create_slideshow = function create_slideshow(options, callback) {\n  options.resource_type = ensureOption(options, \"resource_type\", \"video\");\n  return call_api(\"create_slideshow\", callback, options, function () {\n    // Generate a transformation from the manifest_transformation key, which should be a valid transformation\n    var manifest_transformation = utils.generate_transformation_string(extend({}, options.manifest_transformation));\n\n    // Try to use {options.transformation} to generate a transformation (Example: options.transformation.width, options.transformation.height)\n    var transformation = utils.generate_transformation_string(extend({}, ensureOption(options, 'transformation', {})));\n\n    return [{\n      timestamp: utils.timestamp(),\n      manifest_transformation: manifest_transformation,\n      upload_preset: options.upload_preset,\n      overwrite: options.overwrite,\n      public_id: options.public_id,\n      notification_url: options.notification_url,\n      manifest_json: options.manifest_json,\n      tags: options.tags,\n      transformation: transformation\n    }];\n  });\n};\n\nexports.destroy = function destroy(public_id, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  return call_api(\"destroy\", callback, options, function () {\n    return [{\n      timestamp: utils.timestamp(),\n      type: options.type,\n      invalidate: options.invalidate,\n      public_id: public_id\n    }];\n  });\n};\n\nexports.rename = function rename(from_public_id, to_public_id, callback) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  return call_api(\"rename\", callback, options, function () {\n    return [{\n      timestamp: utils.timestamp(),\n      type: options.type,\n      from_public_id: from_public_id,\n      to_public_id: to_public_id,\n      overwrite: options.overwrite,\n      invalidate: options.invalidate,\n      to_type: options.to_type\n    }];\n  });\n};\n\nvar TEXT_PARAMS = [\"public_id\", \"font_family\", \"font_size\", \"font_color\", \"text_align\", \"font_weight\", \"font_style\", \"background\", \"opacity\", \"text_decoration\", \"font_hinting\", \"font_antialiasing\"];\n\nexports.text = function text(content, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  return call_api(\"text\", callback, options, function () {\n    var textParams = pickOnlyExistingValues.apply(undefined, [options].concat(TEXT_PARAMS));\n    var params = _extends({\n      timestamp: utils.timestamp(),\n      text: content\n    }, textParams);\n\n    return [params];\n  });\n};\n\n/**\n * Generate a sprite by merging multiple images into a single large image for reducing network overhead and bypassing\n * download limitations.\n *\n * The process produces 2 files as follows:\n * - A single image file containing all the images with the specified tag (PNG by default).\n * - A CSS file that includes the style class names and the location of the individual images in the sprite.\n *\n * @param {String|Object} tag     A string specifying a tag that indicates which images to include or an object\n *                                which includes options and image URLs.\n * @param {Function}     callback   Callback function\n * @param {Object}       options  Configuration options. If options are passed as the first parameter, this parameter\n *                                should be empty\n *\n * @return {Object}\n */\nexports.generate_sprite = function generate_sprite(tag, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  return call_api(\"sprite\", callback, options, function () {\n    return [utils.build_multi_and_sprite_params(tag, options)];\n  });\n};\n\n/**\n * Returns a signed url to download a sprite\n *\n * @param {String|Object} tag     A string specifying a tag that indicates which images to include or an object\n *                                which includes options and image URLs.\n * @param {Object}       options  Configuration options. If options are passed as the first parameter, this parameter\n *                                should be empty\n *\n * @returns {string}\n */\nexports.download_generated_sprite = function download_generated_sprite(tag) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  return utils.api_download_url(\"sprite\", utils.build_multi_and_sprite_params(tag, options), options);\n};\n\n/**\n * Returns a signed url to download a single animated image (GIF, PNG or WebP), video (MP4 or WebM) or a single PDF from\n * multiple image assets.\n *\n * @param {String|Object} tag     A string specifying a tag that indicates which images to include or an object\n *                                which includes options and image URLs.\n * @param {Object}       options  Configuration options. If options are passed as the first parameter, this parameter\n *                                should be empty\n *\n * @returns {string}\n */\nexports.download_multi = function download_multi(tag) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  return utils.api_download_url(\"multi\", utils.build_multi_and_sprite_params(tag, options), options);\n};\n\n/**\n * Creates either a single animated image (GIF, PNG or WebP), video (MP4 or WebM) or a single PDF from multiple image\n * assets.\n *\n * Each asset is included as a single frame of the resulting animated image/video, or a page of the PDF (sorted\n * alphabetically by their Public ID).\n *\n * @param {String|Object} tag     A string specifying a tag that indicates which images to include or an object\n *                                which includes options and image URLs.\n * @param {Function}     callback   Callback function\n * @param {Object}       options  Configuration options. If options are passed as the first parameter, this parameter\n *                                should be empty\n *\n * @return {Object}\n */\nexports.multi = function multi(tag, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  return call_api(\"multi\", callback, options, function () {\n    return [utils.build_multi_and_sprite_params(tag, options)];\n  });\n};\n\nexports.explode = function explode(public_id, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  return call_api(\"explode\", callback, options, function () {\n    var transformation = utils.generate_transformation_string(extend({}, options));\n    return [{\n      timestamp: utils.timestamp(),\n      public_id: public_id,\n      transformation: transformation,\n      format: options.format,\n      type: options.type,\n      notification_url: options.notification_url\n    }];\n  });\n};\n\n/**\n *\n * @param {String}          tag                  The tag or tags to assign. Can specify multiple\n *                                               tags in a single string, separated by commas - \"t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11\".\n *\n * @param {Array}          public_ids           A list of public IDs (up to 1000) of assets uploaded to Cloudinary.\n *\n * @param {Function}        callback             Callback function\n *\n * @param {Object}          options              Configuration options may include 'exclusive' (boolean) which causes\n *                                               clearing this tag from all other resources\n * @return {Object}\n */\nexports.add_tag = function add_tag(tag) {\n  var public_ids = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var callback = arguments[2];\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  var exclusive = utils.option_consume(\"exclusive\", options);\n  var command = exclusive ? \"set_exclusive\" : \"add\";\n  return call_tags_api(tag, command, public_ids, callback, options);\n};\n\n/**\n * @param {String}          tag                  The tag or tags to remove. Can specify multiple\n *                                               tags in a single string, separated by commas - \"t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11\".\n *\n * @param {Array}          public_ids            A list of public IDs (up to 1000) of assets uploaded to Cloudinary.\n *\n * @param {Function}        callback             Callback function\n *\n * @param {Object}          options              Configuration options may include 'exclusive' (boolean) which causes\n *                                               clearing this tag from all other resources\n * @return {Object}\n */\nexports.remove_tag = function remove_tag(tag) {\n  var public_ids = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var callback = arguments[2];\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  return call_tags_api(tag, \"remove\", public_ids, callback, options);\n};\n\nexports.remove_all_tags = function remove_all_tags() {\n  var public_ids = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var callback = arguments[1];\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  return call_tags_api(null, \"remove_all\", public_ids, callback, options);\n};\n\nexports.replace_tag = function replace_tag(tag) {\n  var public_ids = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var callback = arguments[2];\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  return call_tags_api(tag, \"replace\", public_ids, callback, options);\n};\n\nfunction call_tags_api(tag, command) {\n  var public_ids = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var callback = arguments[3];\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n  return call_api(\"tags\", callback, options, function () {\n    var params = {\n      timestamp: utils.timestamp(),\n      public_ids: utils.build_array(public_ids),\n      command: command,\n      type: options.type\n    };\n    if (tag != null) {\n      params.tag = tag;\n    }\n    return [params];\n  });\n}\n\nexports.add_context = function add_context(context) {\n  var public_ids = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var callback = arguments[2];\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  return call_context_api(context, 'add', public_ids, callback, options);\n};\n\nexports.remove_all_context = function remove_all_context() {\n  var public_ids = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var callback = arguments[1];\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  return call_context_api(null, 'remove_all', public_ids, callback, options);\n};\n\nfunction call_context_api(context, command) {\n  var public_ids = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var callback = arguments[3];\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n  return call_api('context', callback, options, function () {\n    var params = {\n      timestamp: utils.timestamp(),\n      public_ids: utils.build_array(public_ids),\n      command: command,\n      type: options.type\n    };\n    if (context != null) {\n      params.context = utils.encode_context(context);\n    }\n    return [params];\n  });\n}\n\n/**\n * Cache (part of) the upload results.\n * @param result\n * @param {object} options\n * @param {string} options.type\n * @param {string} options.resource_type\n */\nfunction cacheResults(result, _ref) {\n  var type = _ref.type,\n      resource_type = _ref.resource_type;\n\n  if (result.responsive_breakpoints) {\n    result.responsive_breakpoints.forEach(function (_ref2) {\n      var transformation = _ref2.transformation,\n          url = _ref2.url,\n          breakpoints = _ref2.breakpoints;\n      return Cache.set(result.public_id, { type, resource_type, raw_transformation: transformation, format: extname(breakpoints[0].url).slice(1) }, breakpoints.map(function (i) {\n        return i.width;\n      }));\n    });\n  }\n}\n\nfunction parseResult(buffer, res) {\n  var result = '';\n  try {\n    result = JSON.parse(buffer);\n    if (result.error && !result.error.name) {\n      result.error.name = \"Error\";\n    }\n  } catch (jsonError) {\n    result = {\n      error: {\n        message: `Server return invalid JSON response. Status Code ${res.statusCode}. ${jsonError}`,\n        name: \"Error\"\n      }\n    };\n  }\n  return result;\n}\n\nfunction call_api(action, callback, options, get_params) {\n  if (typeof callback !== \"function\") {\n    callback = function callback() {};\n  }\n\n  var USE_PROMISES = !options.disable_promises;\n\n  var deferred = Q.defer();\n  if (options == null) {\n    options = {};\n  }\n\n  var _get_params$call = get_params.call(),\n      _get_params$call2 = _slicedToArray(_get_params$call, 3),\n      params = _get_params$call2[0],\n      unsigned_params = _get_params$call2[1],\n      file = _get_params$call2[2];\n\n  params = utils.process_request_params(params, options);\n  params = extend(params, unsigned_params);\n  var api_url = utils.api_url(action, options);\n  var boundary = utils.random_public_id();\n  var errorRaised = false;\n  var handle_response = function handle_response(res) {\n    // let buffer;\n    if (errorRaised) {\n\n      // Already reported\n    } else if (res.error) {\n      errorRaised = true;\n\n      if (USE_PROMISES) {\n        deferred.reject(res);\n      }\n      callback(res);\n    } else if (includes([200, 400, 401, 404, 420, 500], res.statusCode)) {\n      var buffer = \"\";\n      res.on(\"data\", function (d) {\n        buffer += d;\n        return buffer;\n      });\n      res.on(\"end\", function () {\n        var result = void 0;\n        if (errorRaised) {\n          return;\n        }\n        result = parseResult(buffer, res);\n        if (result.error) {\n          result.error.http_code = res.statusCode;\n          if (USE_PROMISES) {\n            deferred.reject(result.error);\n          }\n        } else {\n          cacheResults(result, options);\n          if (USE_PROMISES) {\n            deferred.resolve(result);\n          }\n        }\n        callback(result);\n      });\n      res.on(\"error\", function (error) {\n        errorRaised = true;\n        if (USE_PROMISES) {\n          deferred.reject(error);\n        }\n        callback({ error });\n      });\n    } else {\n      var error = {\n        message: `Server returned unexpected status code - ${res.statusCode}`,\n        http_code: res.statusCode,\n        name: \"UnexpectedResponse\"\n      };\n      if (USE_PROMISES) {\n        deferred.reject(error);\n      }\n      callback({ error });\n    }\n  };\n  var post_data = utils.hashToParameters(params).filter(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n        key = _ref4[0],\n        value = _ref4[1];\n\n    return value != null;\n  }).map(function (_ref5) {\n    var _ref6 = _slicedToArray(_ref5, 2),\n        key = _ref6[0],\n        value = _ref6[1];\n\n    return Buffer.from(encodeFieldPart(boundary, key, value), 'utf8');\n  });\n  var result = post(api_url, post_data, boundary, file, handle_response, options);\n  if (isObject(result)) {\n    return result;\n  }\n\n  if (USE_PROMISES) {\n    return deferred.promise;\n  }\n}\n\nfunction post(url, post_data, boundary, file, callback, options) {\n  var file_header = void 0;\n  var finish_buffer = Buffer.from(\"--\" + boundary + \"--\", 'ascii');\n  var oauth_token = options.oauth_token || config().oauth_token;\n  if (file != null || options.stream) {\n    // eslint-disable-next-line no-nested-ternary\n    var filename = options.stream ? options.filename ? options.filename : \"file\" : basename(file);\n    file_header = Buffer.from(encodeFilePart(boundary, 'application/octet-stream', 'file', filename), 'binary');\n  }\n  var post_options = urlLib.parse(url);\n  var headers = {\n    'Content-Type': `multipart/form-data; boundary=${boundary}`,\n    'User-Agent': utils.getUserAgent()\n  };\n  if (options.content_range != null) {\n    headers['Content-Range'] = options.content_range;\n  }\n  if (options.x_unique_upload_id != null) {\n    headers['X-Unique-Upload-Id'] = options.x_unique_upload_id;\n  }\n  if (oauth_token != null) {\n    headers.Authorization = `Bearer ${oauth_token}`;\n  }\n\n  post_options = extend(post_options, {\n    method: 'POST',\n    headers: headers\n  });\n  if (options.agent != null) {\n    post_options.agent = options.agent;\n  }\n  var proxy = options.api_proxy || config().api_proxy;\n  if (!isEmpty(proxy)) {\n    if (!post_options.agent) {\n      if (ProxyAgent === null) {\n        throw new Error(\"Proxy value is set, but `proxy-agent` is not installed, please install `proxy-agent` module.\");\n      }\n      post_options.agent = new ProxyAgent(proxy);\n    } else {\n      console.warn(\"Proxy is set, but request uses a custom agent, proxy is ignored.\");\n    }\n  }\n\n  var post_request = https.request(post_options, callback);\n  var upload_stream = new UploadStream({ boundary });\n  upload_stream.pipe(post_request);\n  var timeout = false;\n  post_request.on(\"error\", function (error) {\n    if (timeout) {\n      error = {\n        message: \"Request Timeout\",\n        http_code: 499,\n        name: \"TimeoutError\"\n      };\n    }\n    return callback({ error });\n  });\n  post_request.setTimeout(options.timeout != null ? options.timeout : 60000, function () {\n    timeout = true;\n    return post_request.abort();\n  });\n  post_data.forEach(function (postDatum) {\n    return post_request.write(postDatum);\n  });\n  if (options.stream) {\n    post_request.write(file_header);\n    return upload_stream;\n  }\n  if (file != null) {\n    post_request.write(file_header);\n    fs.createReadStream(file).on('error', function (error) {\n      callback({\n        error: error\n      });\n      return post_request.abort();\n    }).pipe(upload_stream);\n  } else {\n    post_request.write(finish_buffer);\n    post_request.end();\n  }\n  return true;\n}\n\nfunction encodeFieldPart(boundary, name, value) {\n  return [`--${boundary}`, `Content-Disposition: form-data; name=\"${name}\"`, '', value, ''].join(\"\\r\\n\");\n}\n\nfunction encodeFilePart(boundary, type, name, filename) {\n  return [`--${boundary}`, `Content-Disposition: form-data; name=\"${name}\"; filename=\"${filename}\"`, `Content-Type: ${type}`, '', ''].join(\"\\r\\n\");\n}\n\nexports.direct_upload = function direct_upload(callback_url) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var params = build_upload_params(extend({\n    callback: callback_url\n  }, options));\n  params = utils.process_request_params(params, options);\n  var api_url = utils.api_url(\"upload\", options);\n  return {\n    hidden_fields: params,\n    form_attrs: {\n      action: api_url,\n      method: \"POST\",\n      enctype: \"multipart/form-data\"\n    }\n  };\n};\n\nexports.upload_tag_params = function upload_tag_params() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var params = build_upload_params(options);\n  params = utils.process_request_params(params, options);\n  return JSON.stringify(params);\n};\n\nexports.upload_url = function upload_url() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  if (options.resource_type == null) {\n    options.resource_type = \"auto\";\n  }\n  return utils.api_url(\"upload\", options);\n};\n\nexports.image_upload_tag = function image_upload_tag(field) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var html_options = options.html || {};\n  var tag_options = extend({\n    type: \"file\",\n    name: \"file\",\n    \"data-url\": exports.upload_url(options),\n    \"data-form-data\": exports.upload_tag_params(options),\n    \"data-cloudinary-field\": field,\n    \"data-max-chunk-size\": options.chunk_size,\n    \"class\": [html_options.class, \"cloudinary-fileupload\"].join(\" \")\n  }, html_options);\n  return `<input ${utils.html_attrs(tag_options)}/>`;\n};\n\nexports.unsigned_image_upload_tag = function unsigned_image_upload_tag(field, upload_preset) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  return exports.image_upload_tag(field, merge(options, {\n    unsigned: true,\n    upload_preset: upload_preset\n  }));\n};\n\n/**\n * Populates metadata fields with the given values. Existing values will be overwritten.\n *\n * @param {Object}   metadata   A list of custom metadata fields (by external_id) and the values to assign to each\n * @param {Array}    public_ids The public IDs of the resources to update\n * @param {Function} callback   Callback function\n * @param {Object}   options    Configuration options\n *\n * @return {Object}\n */\nexports.update_metadata = function update_metadata(metadata, public_ids, callback) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  return call_api(\"metadata\", callback, options, function () {\n    var params = {\n      metadata: utils.encode_context(metadata),\n      public_ids: utils.build_array(public_ids),\n      timestamp: utils.timestamp(),\n      type: options.type\n    };\n    return [params];\n  });\n};"]},"metadata":{},"sourceType":"script"}