{"ast":null,"code":"import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_RESET } from '../constants/loginConstant';\nimport axios from 'axios';\nexport const loginAction = (data, setErr, navigate) => async (dispatch, getstate) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      withCredentials: true,\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const response = await axios.post('http://localhost:3001/login', data, config);\n      console.log(response);\n    } catch (error) {\n      console.log(error);\n    } // switch (response.status) {\n    //     case 401:\n    //         setErr(response.data.message)\n    //         break;\n    //     case 403:\n    //         setErr(response.data.message)\n    //         break;\n    //     case 200:\n    //         // localStorage.setItem()\n    //         break;\n    // }\n\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: response.data\n    });\n  } catch (error) {}\n};","map":{"version":3,"sources":["D:/Project 2/frontend/src/redux/actions/loginAction.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGIN_RESET","axios","loginAction","data","setErr","navigate","dispatch","getstate","type","config","withCredentials","headers","response","post","console","log","error","payload"],"mappings":"AAAA,SAASA,kBAAT,EAA6BC,kBAA7B,EAAiDC,eAAjD,EAAkEC,gBAAlE,QAA0F,4BAA1F;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,IAAD,EAAOC,MAAP,EAAeC,QAAf,KAA4B,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACjF,MAAI;AACAD,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEX;AAAR,KAAD,CAAR;AACA,UAAMY,MAAM,GAAG;AACXC,MAAAA,eAAe,EAAE,IADN;AAEXC,MAAAA,OAAO,EAAE;AACL,uCAA+B,GAD1B;AAEL,wBAAgB;AAFX;AAFE,KAAf;;AAOA,QAAG;AAEC,YAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAN,CAAW,6BAAX,EAA0CV,IAA1C,EAAgDM,MAAhD,CAAvB;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACH,KAJD,CAIC,OAAMI,KAAN,EAAY;AACTF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACH,KAfD,CAgBA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAIAV,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEV,kBAAR;AAA4BmB,MAAAA,OAAO,EAAEL,QAAQ,CAACT;AAA9C,KAAD,CAAR;AACH,GAjCD,CAiCE,OAAOa,KAAP,EAAc,CAEf;AACJ,CArCM","sourcesContent":["import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_RESET } from '../constants/loginConstant'\r\nimport axios from 'axios'\r\n\r\nexport const loginAction = (data, setErr, navigate) => async (dispatch, getstate) => {\r\n    try {\r\n        dispatch({ type: USER_LOGIN_REQUEST })\r\n        const config = {\r\n            withCredentials: true,\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        try{\r\n\r\n            const response = await axios.post('http://localhost:3001/login', data, config)\r\n            console.log(response)\r\n        }catch(error){\r\n            console.log(error)\r\n        }\r\n        // switch (response.status) {\r\n        //     case 401:\r\n        //         setErr(response.data.message)\r\n        //         break;\r\n\r\n        //     case 403:\r\n        //         setErr(response.data.message)\r\n        //         break;\r\n\r\n        //     case 200:\r\n        //         // localStorage.setItem()\r\n        //         break;\r\n        // }\r\n\r\n        \r\n\r\n        dispatch({ type: USER_LOGIN_SUCCESS, payload: response.data })\r\n    } catch (error) {\r\n\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}